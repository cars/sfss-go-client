{
  "openapi": "3.1.0",
  "info": {
    "title": "RestServices",
    "version": "1.0",
    "summary": "REST APIs exposed by SFSS  ",
    "description": "REST APIs used for managing CDC instances are captured in this section."
  },
  "servers": [
    {
      "url": "http://IPAddress"
    }
  ],
  "paths": {
    "/redfish/v1/SFSS/<InstanceID>/Hosts": {
      "get": {
        "summary": "Get all hosts",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "Hosts": [
                        {
                          "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@11.22.33.44:V4::0:0:TCP')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:V4::0:0:TCP')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@4.4.4.4:V4::0:0:TCP')"
                        }
                      ],
                      "Hosts@odata.count": 3,
                      "@odata.id": "/redfish/v1/SFSS/1/Hosts",
                      "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts",
                      "@odata.type": "#HostsCollection.HostsCollection"
                    }
                  },
                  "properties": {
                    "Hosts": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "Host information",
                      "items": {
                        "type": "object",
                        "properties": {
                          "@odata.id": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "@odata.id"
                        ]
                      }
                    },
                    "Hosts@odata.count": {
                      "type": "number",
                      "description": "Number of hosts registered with the CDC instance"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "Hosts",
                    "Hosts@odata.count",
                    "@odata.id",
                    "@odata.context",
                    "@odata.type"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Hosts": [
                        {
                          "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@11.22.33.44:V4::0:0:TCP')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:V4::0:0:TCP')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@4.4.4.4:V4::0:0:TCP')"
                        }
                      ],
                      "Hosts@odata.count": 3,
                      "@odata.id": "/redfish/v1/SFSS/1/Hosts",
                      "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts",
                      "@odata.type": "#HostsCollection.HostsCollection"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSS-Instance#-Hosts",
        "description": "This API retrieves a list of hosts that are registered with the CDC instance.",
        "security": [
          {
            "basic": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "?$source=config",
            "description": "Optional query param to fetch from config DB"
          }
        ]
      },
      "post": {
        "summary": "Add host",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "Id": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "Id"
                  ],
                  "x-examples": {
                    "example-1": {
                      "Id": "nqn.2014-08.org.nvmexpress:uuid:host@11.22.33.44:V4::0:0:TCP"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Id": "nqn.2014-08.org.nvmexpress:uuid:host@11.22.33.44:V4::0:0:TCP"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-redfish-v1-SFSS-Instance#-Hosts",
        "description": "This API allows you to manually create a host entry in the specified CDC instance for troubleshooting purposes.",
        "security": [
          {
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "NQN": "nqn.2014-08.org.nvmexpress:uuid:host",
                    "TransportAddress": "11.22.33.44",
                    "TransportAddressFamily": "IPV4",
                    "TransportType": "TCP"
                  }
                },
                "properties": {
                  "NQN": {
                    "type": "string",
                    "minLength": 1,
                    "description": "NVMe Qualified Name (NQN) of the host"
                  },
                  "TransportAddress": {
                    "type": "string",
                    "minLength": 1,
                    "description": "IP address of the host"
                  },
                  "TransportAddressFamily": {
                    "type": "string",
                    "minLength": 1,
                    "description": "IP address family; possible values include IPv4 and IPv6"
                  },
                  "TransportType": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Protocol used for communication with the host; possible value is TCP\n"
                  }
                },
                "required": [
                  "NQN",
                  "TransportAddress",
                  "TransportAddressFamily",
                  "TransportType"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "NQN": "nqn.2014-08.org.nvmexpress:uuid:host",
                    "TransportAddress": "11.22.33.44",
                    "TransportAddressFamily": "IPV4",
                    "TransportType": "TCP"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/redfish/v1/SFSS/<InstanceID>/Hosts('Id')": {
      "get": {
        "summary": "Get specific host",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "Id": "nqn.2014-08.org.nvmexpress:uuid:host@4.4.4.4:V4::0:0:TCP",
                      "NQN": "nqn.2014-08.org.nvmexpress:uuid:host",
                      "TransportAddress": "4.4.4.4",
                      "TransportAddressFamily": "IPV4",
                      "TransportType": "TCP",
                      "TREQ": "Secure channel Not specified",
                      "TSAS": "No Security",
                      "RegistrationType": "Manual",
                      "ConnectionStatus": "Offline",
                      "FailureReason": "NONE",
                      "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@4.4.4.4:V4::0:0:TCP')",
                      "@odata.type": "#Hosts.Hosts",
                      "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity"
                    }
                  },
                  "properties": {
                    "Id": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Unique Identity of the Entity - Fully Qualified Name (FQN) of the host"
                    },
                    "NQN": {
                      "type": "string",
                      "minLength": 1,
                      "description": "NVMe Qualified Name (NQN) of the host"
                    },
                    "TransportAddress": {
                      "type": "string",
                      "minLength": 1,
                      "description": "IP address of the host"
                    },
                    "TransportAddressFamily": {
                      "type": "string",
                      "minLength": 1,
                      "description": "IP address family; possible values include IPv4 and IPv6\n"
                    },
                    "TransportType": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Supported transport types that can be used for communication with the host; possible value is TCP"
                    },
                    "TREQ": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Transport Request Type (TREQ); possible values include Secure channel not specified, Secure channel required, and Secure channel not required"
                    },
                    "TSAS": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Possible values are No Security and TLS"
                    },
                    "RegistrationType": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Type of endpoint registration; possible values include Implicit, Explicit, Pull, and Manual"
                    },
                    "ConnectionStatus": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Status of the TCP connection between the host and the CDC instance; possible values include Online and Offline"
                    },
                    "FailureReason": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Reason for the host being offline; possible values include NONE, KATO, and Peer Closure"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "Id",
                    "NQN",
                    "TransportAddress",
                    "TransportAddressFamily",
                    "TransportType",
                    "TREQ",
                    "TSAS",
                    "RegistrationType",
                    "ConnectionStatus",
                    "FailureReason",
                    "@odata.id",
                    "@odata.type",
                    "@odata.context"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Id": "nqn.2014-08.org.nvmexpress:uuid:host@4.4.4.4:V4::0:0:TCP",
                      "NQN": "nqn.2014-08.org.nvmexpress:uuid:host",
                      "TransportAddress": "4.4.4.4",
                      "TransportAddressFamily": "IPV4",
                      "TransportType": "TCP",
                      "TREQ": "Secure channel Not specified",
                      "TSAS": "No Security",
                      "RegistrationType": "Manual",
                      "ConnectionStatus": "Offline",
                      "FailureReason": "NONE",
                      "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@4.4.4.4:V4::0:0:TCP')",
                      "@odata.type": "#Hosts.Hosts",
                      "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSS-Instance#-Hosts('Id')",
        "description": "This API retrieves detailed information about a host from a CDC instance based on the specified CDC instance and host identifiers.",
        "security": [
          {
            "basic": []
          }
        ]
      },
      "delete": {
        "summary": "Delete host",
        "operationId": "delete-redfish-v1-SFSS-Instance#-Hosts('Id')",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "This API removes a host from a CDC instance based on the specified CDC instance and host identifiers. "
      },
      "parameters": []
    },
    "/redfish/v1/SFSS/<InstanceID>/Hosts?$expand=Hosts": {
      "get": {
        "summary": "Get detailed host information",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "Hosts": [
                        {
                          "Id": "nqn.2014-08.org.nvmexpress:uuid:host@11.22.33.44:V4::0:0:TCP",
                          "NQN": "nqn.2014-08.org.nvmexpress:uuid:host",
                          "TransportAddress": "11.22.33.44",
                          "TransportAddressFamily": "IPV4",
                          "TransportType": "TCP",
                          "TREQ": "Secure channel Not specified",
                          "TSAS": "No Security",
                          "RegistrationType": "Manual",
                          "ConnectionStatus": "Offline",
                          "FailureReason": "NONE",
                          "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@11.22.33.44:V4::0:0:TCP')",
                          "@odata.type": "#Hosts.Hosts",
                          "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity"
                        },
                        {
                          "Id": "nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:V4::0:0:TCP",
                          "NQN": "nqn.2014-08.org.nvmexpress:uuid:host",
                          "TransportAddress": "1.2.3.4",
                          "TransportAddressFamily": "IPV4",
                          "TransportType": "TCP",
                          "TREQ": "Secure channel Not specified",
                          "TSAS": "No Security",
                          "RegistrationType": "Manual",
                          "ConnectionStatus": "Offline",
                          "FailureReason": "NONE",
                          "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:V4::0:0:TCP')",
                          "@odata.type": "#Hosts.Hosts",
                          "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity"
                        }
                      ],
                      "Hosts@odata.count": 2,
                      "@odata.id": "/redfish/v1/SFSS/1/Hosts?$expand=Hosts&$filter=TransportAddress%20eq%2011.22.33.44%20or%20TransportAddress%20eq%201.2.3.4",
                      "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts",
                      "@odata.type": "#HostsCollection.HostsCollection"
                    }
                  },
                  "properties": {
                    "Hosts": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "Host information",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Id": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Unique Identity of the Entity - Fully Qualified Name (FQN) of the host"
                          },
                          "NQN": {
                            "type": "string",
                            "minLength": 1,
                            "description": "NVMe Qualified Name (NQN) of the host"
                          },
                          "TransportAddress": {
                            "type": "string",
                            "minLength": 1,
                            "description": "IP address of the host"
                          },
                          "TransportAddressFamily": {
                            "type": "string",
                            "minLength": 1,
                            "description": "IP address family; possible values include IPv4 and IPv6"
                          },
                          "TransportType": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Supported transport types that can be used for communication with the host; possible value is TCP"
                          },
                          "TREQ": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Transport Request Type (TREQ); possible values include Secure channel not specified, Secure channel required, and Secure channel not required"
                          },
                          "TSAS": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Possible values are No Security and TLS"
                          },
                          "RegistrationType": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Type of endpoint registration; possible values include Implicit, Explicit, Pull, and Manual"
                          },
                          "ConnectionStatus": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Status of the TCP connection between the host and the CDC instance; possible values include Online and Offline"
                          },
                          "FailureReason": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Reason for the host being offline; possible values include NONE, KATO, and Peer Closure"
                          },
                          "@odata.id": {
                            "type": "string",
                            "minLength": 1
                          },
                          "@odata.type": {
                            "type": "string",
                            "minLength": 1
                          },
                          "@odata.context": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "Id",
                          "NQN",
                          "TransportAddress",
                          "TransportAddressFamily",
                          "TransportType",
                          "TREQ",
                          "TSAS",
                          "RegistrationType",
                          "ConnectionStatus",
                          "FailureReason",
                          "@odata.id",
                          "@odata.type",
                          "@odata.context"
                        ]
                      }
                    },
                    "Hosts@odata.count": {
                      "type": "number",
                      "description": "Number of hosts registered with the CDC instance"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "Hosts",
                    "Hosts@odata.count",
                    "@odata.id",
                    "@odata.context",
                    "@odata.type"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Hosts": [
                        {
                          "Id": "nqn.2014-08.org.nvmexpress:uuid:host@11.22.33.44:V4::0:0:TCP",
                          "NQN": "nqn.2014-08.org.nvmexpress:uuid:host",
                          "TransportAddress": "11.22.33.44",
                          "TransportAddressFamily": "IPV4",
                          "TransportType": "TCP",
                          "TREQ": "Secure channel Not specified",
                          "TSAS": "No Security",
                          "RegistrationType": "Manual",
                          "ConnectionStatus": "Offline",
                          "FailureReason": "NONE",
                          "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@11.22.33.44:V4::0:0:TCP')",
                          "@odata.type": "#Hosts.Hosts",
                          "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity"
                        },
                        {
                          "Id": "nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:V4::0:0:TCP",
                          "NQN": "nqn.2014-08.org.nvmexpress:uuid:host",
                          "TransportAddress": "1.2.3.4",
                          "TransportAddressFamily": "IPV4",
                          "TransportType": "TCP",
                          "TREQ": "Secure channel Not specified",
                          "TSAS": "No Security",
                          "RegistrationType": "Manual",
                          "ConnectionStatus": "Offline",
                          "FailureReason": "NONE",
                          "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:V4::0:0:TCP')",
                          "@odata.type": "#Hosts.Hosts",
                          "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity"
                        },
                        {
                          "Id": "nqn.2014-08.org.nvmexpress:uuid:host@4.4.4.4:V4::0:0:TCP",
                          "NQN": "nqn.2014-08.org.nvmexpress:uuid:host",
                          "TransportAddress": "4.4.4.4",
                          "TransportAddressFamily": "IPV4",
                          "TransportType": "TCP",
                          "TREQ": "Secure channel Not specified",
                          "TSAS": "No Security",
                          "RegistrationType": "Manual",
                          "ConnectionStatus": "Offline",
                          "FailureReason": "NONE",
                          "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@4.4.4.4:V4::0:0:TCP')",
                          "@odata.type": "#Hosts.Hosts",
                          "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity"
                        }
                      ],
                      "Hosts@odata.count": 3,
                      "@odata.id": "/redfish/v1/SFSS/1/Hosts?$expand=Hosts",
                      "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts",
                      "@odata.type": "#HostsCollection.HostsCollection"
                    }
                  },
                  "example-2": {
                    "value": {
                      "Hosts": [
                        {
                          "Id": "nqn.2014-08.org.nvmexpress:uuid:host@11.22.33.44:V4::0:0:TCP",
                          "NQN": "nqn.2014-08.org.nvmexpress:uuid:host",
                          "TransportAddress": "11.22.33.44",
                          "TransportAddressFamily": "IPV4",
                          "TransportType": "TCP",
                          "TREQ": "Secure channel Not specified",
                          "TSAS": "No Security",
                          "RegistrationType": "Manual",
                          "ConnectionStatus": "Offline",
                          "FailureReason": "NONE",
                          "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@11.22.33.44:V4::0:0:TCP')",
                          "@odata.type": "#Hosts.Hosts",
                          "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity"
                        },
                        {
                          "Id": "nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:V4::0:0:TCP",
                          "NQN": "nqn.2014-08.org.nvmexpress:uuid:host",
                          "TransportAddress": "1.2.3.4",
                          "TransportAddressFamily": "IPV4",
                          "TransportType": "TCP",
                          "TREQ": "Secure channel Not specified",
                          "TSAS": "No Security",
                          "RegistrationType": "Manual",
                          "ConnectionStatus": "Offline",
                          "FailureReason": "NONE",
                          "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:V4::0:0:TCP')",
                          "@odata.type": "#Hosts.Hosts",
                          "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity"
                        }
                      ],
                      "Hosts@odata.count": 2,
                      "@odata.id": "/redfish/v1/SFSS/1/Hosts?$expand=Hosts&$filter=TransportAddress%20eq%2011.22.33.44%20or%20TransportAddress%20eq%201.2.3.4",
                      "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts",
                      "@odata.type": "#HostsCollection.HostsCollection"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-https:-IP-redfish-v1-SFSS-Instance#-Hosts?$expand=Hosts",
        "description": "This API retrieves detailed information about a list of hosts that are registered with the specified CDC instance.",
        "security": [
          {
            "basic": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "&$skip=1",
            "description": "Helps to skip records"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "&$filter=TransportAddress eq 11.22.33.44 or TransportAddress eq 1.2.3.4",
            "description": "Filter based on the  eq conditions"
          }
        ]
      },
      "parameters": []
    },
    "/redfish/v1/SFSS/<InstanceID>/Subsystems('Id')": {
      "get": {
        "summary": "Get specific subsystem",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "Id": "nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:900:0:0:TCP",
                      "NQN": "nqn.2014-08.org.nvmexpress:uuid:subsystem",
                      "TransportAddress": "3.3.3.3",
                      "TransportAddressFamily": "IPV4",
                      "PortId": 5453,
                      "ControllerId": 65535,
                      "TransportType": "TCP",
                      "SubType": "NVM Subsystem",
                      "TREQ": "Secure channel Not specified",
                      "ASQZ": 32,
                      "TransportServiceId": "900",
                      "TSAS": "No Security",
                      "RcvdGenCounter": 0,
                      "RegistrationType": "Manual",
                      "ConnectionStatus": "Offline",
                      "EKType": "TRADDR",
                      "@odata.id": "/redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:900:0:0:TCP')",
                      "@odata.type": "#Subsystems.Subsystems",
                      "@odata.context": "/redfish/v1/SFSS/1/$metadata#Subsystems/Subsystems/$entity"
                    }
                  },
                  "properties": {
                    "Id": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Unique Identity of the Entity - Fully Qualified Name (FQN) of the subsystem"
                    },
                    "NQN": {
                      "type": "string",
                      "minLength": 1,
                      "description": "NVMe Qualified Name (NQN) of the subsystem"
                    },
                    "TransportAddress": {
                      "type": "string",
                      "minLength": 1,
                      "description": "IP address of the subsystem"
                    },
                    "TransportAddressFamily": {
                      "type": "string",
                      "minLength": 1,
                      "description": "IP address family; possible values include IPv4 and IPv6"
                    },
                    "PortId": {
                      "type": "number",
                      "description": "Internal Port ID that is mapped to the NVMe Subsystem Port"
                    },
                    "ControllerId": {
                      "type": "number",
                      "description": "TCP controller ID, 65535"
                    },
                    "TransportType": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Supported transport types that can be used for communication with the controller; possible values are TCP, RoCE, FC"
                    },
                    "SubType": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Possible values include Reserved, Discovery Service, and NVM Subsystem"
                    },
                    "TREQ": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Transport Request Type (TREQ); possible values include Secure channel not specified, Secure channel required, and Secure channel not required"
                    },
                    "ASQZ": {
                      "type": "number",
                      "description": "Admin queue size"
                    },
                    "TransportServiceId": {
                      "type": "string",
                      "minLength": 1,
                      "description": "NVMe Transport Service Identifier as an ASCII string"
                    },
                    "TSAS": {
                      "type": "string",
                      "minLength": 1,
                      "description": "NVMe Transport Service Address SubType"
                    },
                    "RcvdGenCounter": {
                      "type": "number",
                      "description": "Generation Counter that is maintained for the last received Get Log Page command"
                    },
                    "RegistrationType": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Type of endpoint registration; possible values include Implicit, Explicit, Pull, and Manual"
                    },
                    "ConnectionStatus": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Status of the TCP connection between the subsystem and the CDC instance; possible values include Online and Offline"
                    },
                    "EKType": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Entity Key Type; possible values are Unknown, Port, and TRADDR"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "Id",
                    "NQN",
                    "TransportAddress",
                    "TransportAddressFamily",
                    "PortId",
                    "ControllerId",
                    "TransportType",
                    "SubType",
                    "TREQ",
                    "ASQZ",
                    "TransportServiceId",
                    "TSAS",
                    "RcvdGenCounter",
                    "RegistrationType",
                    "ConnectionStatus",
                    "EKType",
                    "@odata.id",
                    "@odata.type",
                    "@odata.context"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Id": "nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:900:0:0:TCP",
                      "NQN": "nqn.2014-08.org.nvmexpress:uuid:subsystem",
                      "TransportAddress": "3.3.3.3",
                      "TransportAddressFamily": "IPV4",
                      "PortId": 5453,
                      "ControllerId": 65535,
                      "TransportType": "TCP",
                      "SubType": "NVM Subsystem",
                      "TREQ": "Secure channel Not specified",
                      "ASQZ": 32,
                      "TransportServiceId": "900",
                      "TSAS": "No Security",
                      "RcvdGenCounter": 0,
                      "RegistrationType": "Manual",
                      "ConnectionStatus": "Offline",
                      "EKType": "TRADDR",
                      "@odata.id": "/redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:900:0:0:TCP')",
                      "@odata.type": "#Subsystems.Subsystems",
                      "@odata.context": "/redfish/v1/SFSS/1/$metadata#Subsystems/Subsystems/$entity"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSS-Instance#-Subsystems('Id')",
        "description": "This API retrieves detailed information about a subsystem based on the specified subsystem identifier.",
        "security": [
          {
            "basic": []
          }
        ]
      },
      "delete": {
        "summary": "Delete subsystem",
        "operationId": "delete-redfish-v1-SFSS-Instance#-Subsystems('Id')",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "This API removes a subsystem from a CDC instance based on the specified CDC instance and subsystem identifiers."
      },
      "parameters": []
    },
    "/redfish/v1/SFSS/<InstanceID>/Subsystems": {
      "get": {
        "summary": "Get all subsystems",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "Subsystems": [
                        {
                          "@odata.id": "/redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@2.2.2.2:V4:600:0:0:TCP')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:400:0:0:TCP')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@1.1.1.1:V4:900:0:0:TCP')"
                        }
                      ],
                      "Subsystems@odata.count": 3,
                      "@odata.id": "/redfish/v1/SFSS/1/Subsystems",
                      "@odata.context": "/redfish/v1/SFSS/1/$metadata#Subsystems",
                      "@odata.type": "#SubsystemsCollection.SubsystemsCollection"
                    }
                  },
                  "properties": {
                    "Subsystems": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "Subsystem information",
                      "items": {
                        "type": "object",
                        "properties": {
                          "@odata.id": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    },
                    "Subsystems@odata.count": {
                      "type": "number",
                      "description": "Number of subsystems registered with the CDC instance"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "Subsystems@odata.count",
                    "@odata.id",
                    "@odata.context",
                    "@odata.type"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Subsystems": [
                        {
                          "@odata.id": "/redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@2.2.2.2:V4:600:0:0:TCP')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:400:0:0:TCP')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@1.1.1.1:V4:900:0:0:TCP')"
                        }
                      ],
                      "Subsystems@odata.count": 3,
                      "@odata.id": "/redfish/v1/SFSS/1/Subsystems",
                      "@odata.context": "/redfish/v1/SFSS/1/$metadata#Subsystems",
                      "@odata.type": "#SubsystemsCollection.SubsystemsCollection"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSS-Instance#-Subsystems",
        "description": "This API retrieves a list of subsystems that are registered with the specified CDC instance.",
        "security": [
          {
            "basic": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "?$source=config",
            "description": "This is an optional param to fetch the details from config DB."
          }
        ]
      },
      "post": {
        "summary": "Add subsystem",
        "operationId": "post-redfish-v1-SFSS-Instance#-Subsystems",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "Id": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "Id"
                  ],
                  "x-examples": {
                    "example-1": {
                      "Id": "nqn.2014-08.org.nvmexpress:uuid:subsystem@1.1.1.1:V4:900:0:0:TCP"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Id": "nqn.2014-08.org.nvmexpress:uuid:subsystem@1.1.1.1:V4:900:0:0:TCP"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API allows you to manually create a subsystem entry in the specified CDC instance for troubleshooting purposes.",
        "security": [
          {
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "NQN": "nqn.2014-08.org.nvmexpress:uuid:subsystem",
                    "TransportAddress": "1.1.1.1",
                    "TransportAddressFamily": "IPV4",
                    "PortId": 5450,
                    "TransportType": "TCP",
                    "TransportServiceId": "900"
                  }
                },
                "properties": {
                  "NQN": {
                    "type": "string",
                    "minLength": 1,
                    "description": "NVMe Qualified Name (NQN) of the subsystem"
                  },
                  "TransportAddress": {
                    "type": "string",
                    "minLength": 1,
                    "description": "IP address of the subsystem"
                  },
                  "TransportAddressFamily": {
                    "type": "string",
                    "minLength": 1,
                    "description": "IP address family; possible values include IPv4 and IPv6"
                  },
                  "PortId": {
                    "type": "number",
                    "description": "Internal Port ID that is mapped to the NVMe Subsystem Port"
                  },
                  "TransportType": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Supported transport types that can be used for communication with the controller; possible values are TCP, RoCE, FC"
                  },
                  "TransportServiceId": {
                    "type": "string",
                    "minLength": 1,
                    "description": "NVMe Transport Service Identifier as an ASCII string"
                  }
                },
                "required": [
                  "NQN",
                  "TransportAddress",
                  "TransportAddressFamily",
                  "PortId",
                  "TransportType",
                  "TransportServiceId"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "NQN": "nqn.2014-08.org.nvmexpress:uuid:subsystem",
                    "TransportAddress": "1.1.1.1",
                    "TransportAddressFamily": "IPV4",
                    "PortId": 5450,
                    "TransportType": "TCP",
                    "TransportServiceId": "900"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/redfish/v1/SFSS/<InstanceID>/Hosts/Enums": {
      "get": {
        "summary": "Get host enums",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "TransportAddressFamily": [
                        "IPV4",
                        "IPV6"
                      ],
                      "EKType": [
                        "Port",
                        "TRADDR"
                      ],
                      "FailureReason": [
                        "NONE",
                        "KATO",
                        "Peer Closure"
                      ],
                      "RegistrationType": [
                        "Implicit",
                        "Explicit",
                        "Pull",
                        "Manual"
                      ],
                      "ConnectionStatus": [
                        "Offline",
                        "Online"
                      ],
                      "TREQ": [
                        "Secure channel Not specified",
                        "Secure Channel Required",
                        "Secure Channel Not required"
                      ],
                      "TransportType": [
                        "TCP"
                      ],
                      "TSAS": [
                        "No Security",
                        "TLS"
                      ]
                    }
                  },
                  "properties": {
                    "TransportAddressFamily": {
                      "type": "array",
                      "description": "IP address family; possible values include IPv4 and IPv6",
                      "items": {
                        "type": "string"
                      }
                    },
                    "EKType": {
                      "type": "array",
                      "description": "Entity Key Type; possible values are Unknown, Port, and TRADDR",
                      "items": {
                        "type": "string"
                      }
                    },
                    "FailureReason": {
                      "type": "array",
                      "description": "Reason for the host being offline; possible values include NONE, KATO, and Peer Closure",
                      "items": {
                        "type": "string"
                      }
                    },
                    "RegistrationType": {
                      "type": "array",
                      "description": "Type of endpoint registration; possible values include Implicit, Explicit, Pull, and Manual",
                      "items": {
                        "type": "string"
                      }
                    },
                    "ConnectionStatus": {
                      "type": "array",
                      "description": "Status of the TCP connection between the host and the CDC instance; possible values include Online and Offline",
                      "items": {
                        "type": "string"
                      }
                    },
                    "TREQ": {
                      "type": "array",
                      "description": "Transport Request Type (TREQ); possible values include Secure channel not specified, Secure channel required, and Secure channel not required",
                      "items": {
                        "type": "string"
                      }
                    },
                    "TransportType": {
                      "type": "array",
                      "description": "Supported transport types that can be used for communication with the controller; possible values are TCP, RoCE, FC",
                      "items": {
                        "type": "string"
                      }
                    },
                    "TSAS": {
                      "type": "array",
                      "description": "Possible values are No Security and TLS",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "TransportAddressFamily",
                    "EKType",
                    "FailureReason",
                    "RegistrationType",
                    "ConnectionStatus",
                    "TREQ",
                    "TransportType",
                    "TSAS"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "TransportAddressFamily": [
                        "IPV4",
                        "IPV6"
                      ],
                      "EKType": [
                        "Port",
                        "TRADDR"
                      ],
                      "FailureReason": [
                        "NONE",
                        "KATO",
                        "Peer Closure"
                      ],
                      "RegistrationType": [
                        "Implicit",
                        "Explicit",
                        "Pull",
                        "Manual"
                      ],
                      "ConnectionStatus": [
                        "Offline",
                        "Online"
                      ],
                      "TREQ": [
                        "Secure channel Not specified",
                        "Secure Channel Required",
                        "Secure Channel Not required"
                      ],
                      "TransportType": [
                        "TCP"
                      ],
                      "TSAS": [
                        "No Security",
                        "TLS"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-https:-IP-redfish-v1-SFSS-Instance#-Hosts-Enums",
        "description": "This API retrieves a list of all supported enumerations for the host configuration.",
        "security": [
          {
            "basic": []
          }
        ]
      },
      "parameters": []
    },
    "/redfish/v1/SFSS/<InstanceID>/Subsystems?$expand=Subsystems": {
      "get": {
        "summary": "Get detailed subsystem information",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "Subsystems": [
                        {
                          "Id": "nqn.2014-08.org.nvmexpress:uuid:subsystem@1.1.1.1:V4:900:0:0:TCP",
                          "NQN": "nqn.2014-08.org.nvmexpress:uuid:subsystem",
                          "TransportAddress": "1.1.1.1",
                          "TransportAddressFamily": "IPV4",
                          "PortId": 5450,
                          "ControllerId": 65535,
                          "TransportType": "TCP",
                          "SubType": "NVM Subsystem",
                          "TREQ": "Secure channel Not specified",
                          "ASQZ": 32,
                          "TransportServiceId": "900",
                          "TSAS": "No Security",
                          "RcvdGenCounter": 0,
                          "RegistrationType": "Manual",
                          "ConnectionStatus": "Offline",
                          "EKType": "TRADDR",
                          "@odata.id": "/redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@1.1.1.1:V4:900:0:0:TCP')",
                          "@odata.type": "#Subsystems.Subsystems",
                          "@odata.context": "/redfish/v1/SFSS/1/$metadata#Subsystems/Subsystems/$entity"
                        },
                        {
                          "Id": "nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:900:0:0:TCP",
                          "NQN": "nqn.2014-08.org.nvmexpress:uuid:subsystem",
                          "TransportAddress": "3.3.3.3",
                          "TransportAddressFamily": "IPV4",
                          "PortId": 5453,
                          "ControllerId": 65535,
                          "TransportType": "TCP",
                          "SubType": "NVM Subsystem",
                          "TREQ": "Secure channel Not specified",
                          "ASQZ": 32,
                          "TransportServiceId": "900",
                          "TSAS": "No Security",
                          "RcvdGenCounter": 0,
                          "RegistrationType": "Manual",
                          "ConnectionStatus": "Offline",
                          "EKType": "TRADDR",
                          "@odata.id": "/redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:900:0:0:TCP')",
                          "@odata.type": "#Subsystems.Subsystems",
                          "@odata.context": "/redfish/v1/SFSS/1/$metadata#Subsystems/Subsystems/$entity"
                        },
                        {
                          "Id": "nqn.2014-08.org.nvmexpress:uuid:subsystem@2.2.2.2:V4:900:0:0:TCP",
                          "NQN": "nqn.2014-08.org.nvmexpress:uuid:subsystem",
                          "TransportAddress": "2.2.2.2",
                          "TransportAddressFamily": "IPV4",
                          "PortId": 5452,
                          "ControllerId": 65535,
                          "TransportType": "TCP",
                          "SubType": "NVM Subsystem",
                          "TREQ": "Secure channel Not specified",
                          "ASQZ": 32,
                          "TransportServiceId": "900",
                          "TSAS": "No Security",
                          "RcvdGenCounter": 0,
                          "RegistrationType": "Manual",
                          "ConnectionStatus": "Offline",
                          "EKType": "TRADDR",
                          "@odata.id": "/redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@2.2.2.2:V4:900:0:0:TCP')",
                          "@odata.type": "#Subsystems.Subsystems",
                          "@odata.context": "/redfish/v1/SFSS/1/$metadata#Subsystems/Subsystems/$entity"
                        }
                      ],
                      "Subsystems@odata.count": 3,
                      "@odata.id": "/redfish/v1/SFSS/1/Subsystems?$expand=Subsystems",
                      "@odata.context": "/redfish/v1/SFSS/1/$metadata#Subsystems",
                      "@odata.type": "#SubsystemsCollection.SubsystemsCollection"
                    }
                  },
                  "properties": {
                    "Subsystems": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "Subsystem information",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Id": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Unique Identity of the Entity - Fully Qualified Name (FQN) of the subsystem"
                          },
                          "NQN": {
                            "type": "string",
                            "minLength": 1,
                            "description": "NVMe Qualified Name (NQN) of the subsystem"
                          },
                          "TransportAddress": {
                            "type": "string",
                            "minLength": 1,
                            "description": "IP address of the subsystem"
                          },
                          "TransportAddressFamily": {
                            "type": "string",
                            "minLength": 1,
                            "description": "IP address family; possible values include IPv4 and IPv6"
                          },
                          "PortId": {
                            "type": "number",
                            "description": "Internal Port ID that is mapped to the NVMe Subsystem Port"
                          },
                          "ControllerId": {
                            "type": "number",
                            "description": "TCP controller ID, 65535"
                          },
                          "TransportType": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Supported transport types that can be used for communication with the controller; possible values are TCP, RoCE, FC"
                          },
                          "SubType": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Possible values include Reserved, Discovery Service, and NVM Subsystem"
                          },
                          "TREQ": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Transport Request Type (TREQ); possible values include Secure channel not specified, Secure channel required, and Secure channel not required"
                          },
                          "ASQZ": {
                            "type": "number",
                            "description": "Admin Queue Size"
                          },
                          "TransportServiceId": {
                            "type": "string",
                            "minLength": 1,
                            "description": "NVMe Transport Service Identifier as an ASCII string"
                          },
                          "TSAS": {
                            "type": "string",
                            "minLength": 1,
                            "description": "NVMe Transport Service Address SubType"
                          },
                          "RcvdGenCounter": {
                            "type": "number",
                            "description": "Generation Counter that is maintained for the last received Get Log Page command"
                          },
                          "RegistrationType": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Type of endpoint registration; possible values include Implicit, Explicit, Pull, and Manual"
                          },
                          "ConnectionStatus": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Status of the TCP connection between the subsystem and the CDC instance; possible values include Online and Offline"
                          },
                          "EKType": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Entity Key Type; possible values are Unknown, Port, and TRADDR"
                          },
                          "@odata.id": {
                            "type": "string",
                            "minLength": 1
                          },
                          "@odata.type": {
                            "type": "string",
                            "minLength": 1
                          },
                          "@odata.context": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "Id",
                          "NQN",
                          "TransportAddress",
                          "TransportAddressFamily",
                          "PortId",
                          "ControllerId",
                          "TransportType",
                          "SubType",
                          "TREQ",
                          "ASQZ",
                          "TransportServiceId",
                          "TSAS",
                          "RcvdGenCounter",
                          "RegistrationType",
                          "ConnectionStatus",
                          "EKType",
                          "@odata.id",
                          "@odata.type",
                          "@odata.context"
                        ]
                      }
                    },
                    "Subsystems@odata.count": {
                      "type": "number"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "Subsystems",
                    "Subsystems@odata.count",
                    "@odata.id",
                    "@odata.context",
                    "@odata.type"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Subsystems": [
                        {
                          "Id": "nqn.2014-08.org.nvmexpress:uuid:subsystem@1.1.1.1:V4:900:0:0:TCP",
                          "NQN": "nqn.2014-08.org.nvmexpress:uuid:subsystem",
                          "TransportAddress": "1.1.1.1",
                          "TransportAddressFamily": "IPV4",
                          "PortId": 5450,
                          "ControllerId": 65535,
                          "TransportType": "TCP",
                          "SubType": "NVM Subsystem",
                          "TREQ": "Secure channel Not specified",
                          "ASQZ": 32,
                          "TransportServiceId": "900",
                          "TSAS": "No Security",
                          "RcvdGenCounter": 0,
                          "RegistrationType": "Manual",
                          "ConnectionStatus": "Offline",
                          "EKType": "TRADDR",
                          "@odata.id": "/redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@1.1.1.1:V4:900:0:0:TCP')",
                          "@odata.type": "#Subsystems.Subsystems",
                          "@odata.context": "/redfish/v1/SFSS/1/$metadata#Subsystems/Subsystems/$entity"
                        },
                        {
                          "Id": "nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:900:0:0:TCP",
                          "NQN": "nqn.2014-08.org.nvmexpress:uuid:subsystem",
                          "TransportAddress": "3.3.3.3",
                          "TransportAddressFamily": "IPV4",
                          "PortId": 5453,
                          "ControllerId": 65535,
                          "TransportType": "TCP",
                          "SubType": "NVM Subsystem",
                          "TREQ": "Secure channel Not specified",
                          "ASQZ": 32,
                          "TransportServiceId": "900",
                          "TSAS": "No Security",
                          "RcvdGenCounter": 0,
                          "RegistrationType": "Manual",
                          "ConnectionStatus": "Offline",
                          "EKType": "TRADDR",
                          "@odata.id": "/redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:900:0:0:TCP')",
                          "@odata.type": "#Subsystems.Subsystems",
                          "@odata.context": "/redfish/v1/SFSS/1/$metadata#Subsystems/Subsystems/$entity"
                        },
                        {
                          "Id": "nqn.2014-08.org.nvmexpress:uuid:subsystem@2.2.2.2:V4:900:0:0:TCP",
                          "NQN": "nqn.2014-08.org.nvmexpress:uuid:subsystem",
                          "TransportAddress": "2.2.2.2",
                          "TransportAddressFamily": "IPV4",
                          "PortId": 5452,
                          "ControllerId": 65535,
                          "TransportType": "TCP",
                          "SubType": "NVM Subsystem",
                          "TREQ": "Secure channel Not specified",
                          "ASQZ": 32,
                          "TransportServiceId": "900",
                          "TSAS": "No Security",
                          "RcvdGenCounter": 0,
                          "RegistrationType": "Manual",
                          "ConnectionStatus": "Offline",
                          "EKType": "TRADDR",
                          "@odata.id": "/redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@2.2.2.2:V4:900:0:0:TCP')",
                          "@odata.type": "#Subsystems.Subsystems",
                          "@odata.context": "/redfish/v1/SFSS/1/$metadata#Subsystems/Subsystems/$entity"
                        }
                      ],
                      "Subsystems@odata.count": 3,
                      "@odata.id": "/redfish/v1/SFSS/1/Subsystems?$expand=Subsystems",
                      "@odata.context": "/redfish/v1/SFSS/1/$metadata#Subsystems",
                      "@odata.type": "#SubsystemsCollection.SubsystemsCollection"
                    }
                  },
                  "Filtering based on the condition :  $filter=TransportAddress eq 1.1.1.1 or TransportAddress eq 3.3.3.3": {
                    "value": {
                      "Subsystems": [
                        {
                          "Id": "nqn.2014-08.org.nvmexpress:uuid:subsystem@1.1.1.1:V4:900:0:0:TCP",
                          "NQN": "nqn.2014-08.org.nvmexpress:uuid:subsystem",
                          "TransportAddress": "1.1.1.1",
                          "TransportAddressFamily": "IPV4",
                          "PortId": 5450,
                          "ControllerId": 65535,
                          "TransportType": "TCP",
                          "SubType": "NVM Subsystem",
                          "TREQ": "Secure channel Not specified",
                          "ASQZ": 32,
                          "TransportServiceId": "900",
                          "TSAS": "No Security",
                          "RcvdGenCounter": 0,
                          "RegistrationType": "Manual",
                          "ConnectionStatus": "Offline",
                          "EKType": "TRADDR",
                          "@odata.id": "/redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@1.1.1.1:V4:900:0:0:TCP')",
                          "@odata.type": "#Subsystems.Subsystems",
                          "@odata.context": "/redfish/v1/SFSS/1/$metadata#Subsystems/Subsystems/$entity"
                        },
                        {
                          "Id": "nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:900:0:0:TCP",
                          "NQN": "nqn.2014-08.org.nvmexpress:uuid:subsystem",
                          "TransportAddress": "3.3.3.3",
                          "TransportAddressFamily": "IPV4",
                          "PortId": 5453,
                          "ControllerId": 65535,
                          "TransportType": "TCP",
                          "SubType": "NVM Subsystem",
                          "TREQ": "Secure channel Not specified",
                          "ASQZ": 32,
                          "TransportServiceId": "900",
                          "TSAS": "No Security",
                          "RcvdGenCounter": 0,
                          "RegistrationType": "Manual",
                          "ConnectionStatus": "Offline",
                          "EKType": "TRADDR",
                          "@odata.id": "/redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:900:0:0:TCP')",
                          "@odata.type": "#Subsystems.Subsystems",
                          "@odata.context": "/redfish/v1/SFSS/1/$metadata#Subsystems/Subsystems/$entity"
                        }
                      ],
                      "Subsystems@odata.count": 2,
                      "@odata.id": "/redfish/v1/SFSS/1/Subsystems?$expand=Subsystems&$filter=TransportAddress%20eq%201.1.1.1%20or%20TransportAddress%20eq%203.3.3.3",
                      "@odata.context": "/redfish/v1/SFSS/1/$metadata#Subsystems",
                      "@odata.type": "#SubsystemsCollection.SubsystemsCollection"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSS-Instance#-Subsystems?$expand=Subsystems",
        "security": [
          {
            "basic": []
          }
        ],
        "description": "This API retrieves detailed information about a list of subsystems that are registered with the specified CDC instance.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "&$filter=TransportAddress eq 1.1.1.1 or TransportAddress eq 3.3.3.3",
            "description": "Optional query param to filer based on the eq condition."
          }
        ]
      },
      "parameters": []
    },
    "/redfish/v1/SFSS/<InstanceID>/Subsystems/Enums": {
      "get": {
        "summary": "Get subsystem enums",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "TransportAddressFamily": [
                        "IPV4",
                        "IPV6"
                      ],
                      "EKType": [
                        "Port",
                        "TRADDR"
                      ],
                      "FailureReason": [
                        "NONE",
                        "KATO",
                        "Peer Closure"
                      ],
                      "RegistrationType": [
                        "Implicit",
                        "Explicit",
                        "Pull",
                        "Manual"
                      ],
                      "ConnectionStatus": [
                        "Offline",
                        "Online"
                      ],
                      "SubType": [
                        "Reserved",
                        "Discovery Service",
                        "NVM Subsystem"
                      ],
                      "TREQ": [
                        "Secure channel Not specified",
                        "Secure Channel Required",
                        "Secure Channel Not required"
                      ],
                      "TransportType": [
                        "TCP"
                      ],
                      "TSAS": [
                        "No Security",
                        "TLS"
                      ]
                    }
                  },
                  "properties": {
                    "TransportAddressFamily": {
                      "type": "array",
                      "description": "IP address family; possible values include IPv4 and IPv6",
                      "items": {
                        "type": "string"
                      }
                    },
                    "EKType": {
                      "type": "array",
                      "description": "Entity Key Type; possible values are Unknown, Port, and TRADDR",
                      "items": {
                        "type": "string"
                      }
                    },
                    "FailureReason": {
                      "type": "array",
                      "description": "Connection Failure Reason - Possible Values are NONE, Peer Closure,Dial Failure, KATO",
                      "items": {
                        "type": "string"
                      }
                    },
                    "RegistrationType": {
                      "type": "array",
                      "description": "Type of endpoint registration; possible values include Implicit, Explicit, Pull, and Manual",
                      "items": {
                        "type": "string"
                      }
                    },
                    "ConnectionStatus": {
                      "type": "array",
                      "description": "Status of the TCP connection between the subsystem and the CDC instance; possible values include Online and Offline",
                      "items": {
                        "type": "string"
                      }
                    },
                    "SubType": {
                      "type": "array",
                      "description": "Possible values include Reserved, Discovery Service, and NVM Subsystem",
                      "items": {
                        "type": "string"
                      }
                    },
                    "TREQ": {
                      "type": "array",
                      "description": "Transport Request Type (TREQ); possible values include Secure channel not specified, Secure channel required, and Secure channel not required",
                      "items": {
                        "type": "string"
                      }
                    },
                    "TransportType": {
                      "type": "array",
                      "description": "Supported transport types that can be used for communication with the controller; possible values are TCP, RoCE, FC",
                      "items": {
                        "type": "string"
                      }
                    },
                    "TSAS": {
                      "type": "array",
                      "description": "NVMe Transport Service Address SubType",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "TransportAddressFamily",
                    "EKType",
                    "FailureReason",
                    "RegistrationType",
                    "ConnectionStatus",
                    "SubType",
                    "TREQ",
                    "TransportType",
                    "TSAS"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "TransportAddressFamily": [
                        "IPV4",
                        "IPV6"
                      ],
                      "EKType": [
                        "Port",
                        "TRADDR"
                      ],
                      "FailureReason": [
                        "NONE",
                        "KATO",
                        "Peer Closure"
                      ],
                      "RegistrationType": [
                        "Implicit",
                        "Explicit",
                        "Pull",
                        "Manual"
                      ],
                      "ConnectionStatus": [
                        "Offline",
                        "Online"
                      ],
                      "SubType": [
                        "Reserved",
                        "Discovery Service",
                        "NVM Subsystem"
                      ],
                      "TREQ": [
                        "Secure channel Not specified",
                        "Secure Channel Required",
                        "Secure Channel Not required"
                      ],
                      "TransportType": [
                        "TCP"
                      ],
                      "TSAS": [
                        "No Security",
                        "TLS"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSS-Instance#-Subsystems-Enums",
        "description": "This API retrieves a list of all supported enumerations for the subsystem configuration. ",
        "security": [
          {
            "basic": []
          }
        ]
      },
      "parameters": []
    },
    "/redfish/v1/SFSS/<InstanceID>/DDCs": {
      "get": {
        "summary": "Get DDC",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "DDCs": [
                        {
                          "@odata.id": "/redfish/v1/SFSS/1/DDCs('@111.111.111.115:V4::0:5450:TCP')"
                        }
                      ],
                      "DDCs@odata.count": 1,
                      "@odata.id": "/redfish/v1/SFSS/1/DDCs",
                      "@odata.context": "/redfish/v1/SFSS/1/$metadata#DDCs",
                      "@odata.type": "#DDCsCollection.DDCsCollection"
                    }
                  },
                  "properties": {
                    "DDCs": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "Direct Discovery Controller (DDC) information",
                      "items": {
                        "type": "object",
                        "properties": {
                          "@odata.id": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "@odata.id"
                        ]
                      }
                    },
                    "DDCs@odata.count": {
                      "type": "number",
                      "description": "Number of DDCs configured in the CDC instance"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "DDCs",
                    "DDCs@odata.count",
                    "@odata.id",
                    "@odata.context",
                    "@odata.type"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "DDCs": [
                        {
                          "@odata.id": "/redfish/v1/SFSS/1/DDCs('@111.111.111.115:V4::0:5450:TCP')"
                        }
                      ],
                      "DDCs@odata.count": 1,
                      "@odata.id": "/redfish/v1/SFSS/1/DDCs",
                      "@odata.context": "/redfish/v1/SFSS/1/$metadata#DDCs",
                      "@odata.type": "#DDCsCollection.DDCsCollection"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-https:-IP-redfish-v1-SFSS-Instance-#-DDCs",
        "description": "This API retrieves a list of direct discovery controllers (DDCs) configured in the specified CDC instance.",
        "security": [
          {
            "basic": []
          }
        ]
      },
      "parameters": [],
      "post": {
        "summary": "Add DDC",
        "operationId": "post-redfish-v1-SFSS-Instance-#-DDCs",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "x-examples": {
                    "example-1": {
                      "Ids": [
                        {
                          "Id": "@100.94.72.1:V4::0:8009:TCP"
                        },
                        {
                          "Id": "@100.94.72.2:V4::0:4420:TCP"
                        }
                      ]
                    }
                  },
                  "anyOf": [
                    {
                      "properties": {
                        "Ids": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "properties": {
                        "Id": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "type": "object"
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Id": "@111.111.111.115:V4::0:5450:TCP"
                    }
                  },
                  "example-2": {
                    "value": {
                      "Ids": [
                        {
                          "Id": "@100.94.72.1:V4::0:8009:TCP"
                        },
                        {
                          "Id": "@100.94.72.2:V4::0:4420:TCP"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API adds direct discovery controllers (DDCs) in the specified CDC instance. ",
        "security": [
          {
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "x-examples": {
                  "example-1": {
                    "DDCs": [
                      {
                        "TransportAddress": "100.94.72.1",
                        "TransportAddressFamily": "IPV4",
                        "PortId": 8009,
                        "TransportType": "TCP",
                        "Activate": false
                      },
                      {
                        "TransportAddress": "100.94.72.2",
                        "TransportAddressFamily": "IPV4",
                        "PortId": 4420,
                        "TransportType": "TCP",
                        "Activate": true
                      }
                    ]
                  }
                },
                "anyOf": [
                  {
                    "properties": {
                      "DDCs": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "TransportAddress": {
                              "type": "string"
                            },
                            "TransportAddressFamily": {
                              "type": "string"
                            },
                            "PortId": {
                              "type": "integer"
                            },
                            "TransportType": {
                              "type": "string"
                            },
                            "Activate": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "properties": {
                      "TransportAddress": {
                        "type": "string"
                      },
                      "TransportAddressFamily": {
                        "type": "string"
                      },
                      "PortId": {
                        "type": "integer"
                      },
                      "TransportType": {
                        "type": "string"
                      },
                      "Activate": {
                        "type": "boolean"
                      }
                    }
                  }
                ],
                "type": "object"
              },
              "examples": {
                "example-1": {
                  "value": {
                    "TransportAddress": "string",
                    "TransportAddressFamily": "string",
                    "PortId": 0,
                    "TransportType": "string",
                    "Activate": true
                  }
                },
                "example-2": {
                  "value": {
                    "DDCs": [
                      {
                        "TransportAddress": "100.94.72.1",
                        "TransportAddressFamily": "IPV4",
                        "PortId": 8009,
                        "TransportType": "TCP",
                        "Activate": false
                      },
                      {
                        "TransportAddress": "100.94.72.2",
                        "TransportAddressFamily": "IPV4",
                        "PortId": 4420,
                        "TransportType": "TCP",
                        "Activate": true
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": []
      },
      "put": {
        "summary": "Update DDC",
        "operationId": "put-redfish-v1-SFSS-InstanceID-DDCs",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Id": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Ids": [
                        {
                          "Id": "@100.94.72.1:V4::0:8009:TCP"
                        },
                        {
                          "Id": "@100.94.72.2:V4::0:4420:TCP"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API updates information about multiple DDCs in the specified CDC instance.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "DDCs": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "Id": {
                          "type": "string"
                        },
                        "Activate": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "x-examples": {
                  "example-1": {
                    "DDCs": [
                      {
                        "Id": "@100.94.72.1:V4::0:8009:TCP",
                        "Activate": false
                      },
                      {
                        "Id": "@100.94.72.2:V4::0:4420:TCP",
                        "Activate": false
                      }
                    ]
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "DDCs": [
                      {
                        "Id": "@100.94.72.1:V4::0:8009:TCP",
                        "Activate": false
                      },
                      {
                        "Id": "@100.94.72.2:V4::0:4420:TCP",
                        "Activate": false
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete DDCs",
        "operationId": "delete-redfish-v1-SFSS-InstanceID-DDCs",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "DDCs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "DDCs": [
                        {
                          "Id": "@100.94.72.1:V4::0:8009:TCP"
                        },
                        {
                          "Id": "@100.94.72.2:V4::0:4420:TCP"
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "DDCs": [
                        {
                          "Id": "@100.94.72.1:V4::0:8009:TCP"
                        },
                        {
                          "Id": "@100.94.72.2:V4::0:4420:TCP"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API removes the specified DDCs from the CDC instance mentioned in this request.",
        "parameters": []
      }
    },
    "/redfish/v1/SFSS/<InstanceID>/DDCs('Id')": {
      "get": {
        "summary": "Get specific DDC",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "Id": "@111.111.111.115:V4::0:5450:TCP",
                      "TransportAddress": "111.111.111.115",
                      "TransportAddressFamily": "IPV4",
                      "PortId": 5450,
                      "TransportType": "TCP",
                      "Activate": false,
                      "ConfigType": "Manual",
                      "ConnectionStatus": "Offline",
                      "FailureReason": "NONE",
                      "@odata.id": "/redfish/v1/SFSS/1/DDCs('@111.111.111.115:V4::0:5450:TCP')",
                      "@odata.type": "#DDCs.DDCs",
                      "@odata.context": "/redfish/v1/SFSS/1/$metadata#DDCs/DDCs/$entity"
                    }
                  },
                  "properties": {
                    "Id": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Unique Identity of the Entity - Fully Qualified Name (FQN) of the Direct Discovery Controller(DDC)"
                    },
                    "TransportAddress": {
                      "type": "string",
                      "minLength": 1,
                      "description": "IP address of the DDC"
                    },
                    "TransportAddressFamily": {
                      "type": "string",
                      "minLength": 1,
                      "description": "IP address family; possible values include IPv4 and IPv6"
                    },
                    "PortId": {
                      "type": "number",
                      "description": "Port on which the DDC listens for CDC to connect to"
                    },
                    "TransportType": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Supported transport types that can be used for communication with the DDC; possible value is TCP and RoCE"
                    },
                    "Activate": {
                      "type": "boolean",
                      "description": "Activation of DDC that initiates a pull registration from CDC"
                    },
                    "ConfigType": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Configuration Type of DDC; possible values are Manual and KickStart"
                    },
                    "ConnectionStatus": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Status of the TCP connection between the DDC and the CDC instance. Possible values include Online/In-Progess:Connecting/Offline"
                    },
                    "FailureReason": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Reason for the DDC being offline"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "Id",
                    "TransportAddress",
                    "TransportAddressFamily",
                    "PortId",
                    "TransportType",
                    "Activate",
                    "ConfigType",
                    "ConnectionStatus",
                    "FailureReason",
                    "@odata.id",
                    "@odata.type",
                    "@odata.context"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Id": "@111.111.111.115:V4::0:5450:TCP",
                      "TransportAddress": "111.111.111.115",
                      "TransportAddressFamily": "IPV4",
                      "PortId": 5450,
                      "TransportType": "TCP",
                      "Activate": false,
                      "ConfigType": "Manual",
                      "ConnectionStatus": "Offline",
                      "FailureReason": "NONE",
                      "@odata.id": "/redfish/v1/SFSS/1/DDCs('@111.111.111.115:V4::0:5450:TCP')",
                      "@odata.type": "#DDCs.DDCs",
                      "@odata.context": "/redfish/v1/SFSS/1/$metadata#DDCs/DDCs/$entity"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSS-Instance#-DDCs('Id')",
        "description": "This API retrieves detailed information about a Direct Discovery Controller (DDC) registered with a CDC based on the specified CDC and DDC identifiers.",
        "security": [
          {
            "basic": []
          }
        ]
      },
      "parameters": [],
      "put": {
        "summary": "Update DDC",
        "operationId": "put-redfish-v1-SFSS-InstanceID-DDCs('Id')",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Id": {
                      "type": "string",
                      "description": "Unique Identity of the Entity - Fully Qualified Name (FQN) of the Direct Discovery Controller(DDC)"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Id": "@111.111.111.115:V4::0:5450:TCP"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API updates the direct discovery controller (DDC) information in the specified CDC instance based on the DDC identifier.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Activate": {
                    "type": "boolean"
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "Activate": false
                  }
                }
              }
            }
          },
          "description": ""
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "The DDC ID to be updated should be given.",
            "name": "Id"
          }
        ]
      },
      "delete": {
        "summary": "Delete DDC",
        "operationId": "delete-redfish-v1-SFSS-InstanceID-DDCs('Id')",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Id": {
                      "type": "string",
                      "description": "Unique Identity of the Entity - Fully Qualified Name (FQN) of the Direct Discovery Controller(DDC)"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Id": "@111.111.111.115:V4::0:5450:TCP"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API removes the specified DDC from the CDC instance mentioned in this request. ",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "Id",
            "description": "The IP address of the specific DDC to be removed must be given."
          }
        ]
      }
    },
    "/redfish/v1/SFSS/<InstanceID>/DDCs/Enums": {
      "get": {
        "summary": "Get DDC enums",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "TransportAddressFamily": [
                        "IPV4",
                        "IPV6"
                      ],
                      "ConfigType": [
                        "Implicit",
                        "Push",
                        "Pull",
                        "Manual",
                        "KDCC"
                      ],
                      "FailureReason": [
                        "NONE",
                        "KATO",
                        "Peer Closure"
                      ],
                      "ConnectionStatus": [
                        "Online",
                        "Offline"
                      ],
                      "TransportType": [
                        "TCP"
                      ]
                    }
                  },
                  "properties": {
                    "TransportAddressFamily": {
                      "type": "array",
                      "description": "IP address family; possible values include IPv4 and IPv6",
                      "items": {
                        "type": "string"
                      }
                    },
                    "ConfigType": {
                      "type": "array",
                      "description": "Configuration Type of DDC; possible values are Manual and KickStart",
                      "items": {
                        "type": "string"
                      }
                    },
                    "FailureReason": {
                      "type": "array",
                      "description": "Connection Failure Reason - Possible Values are NONE, Peer Closure,Dial Failure, KATO",
                      "items": {
                        "type": "string"
                      }
                    },
                    "ConnectionStatus": {
                      "type": "array",
                      "description": "Status of the TCP connection between the DDC and the CDC instance; possible values include Online, In-Progess:Connecting, Offline",
                      "items": {
                        "type": "string"
                      }
                    },
                    "TransportType": {
                      "type": "array",
                      "description": "Supported transport types that can be used for communication with the DDC; possible value is TCP and RoCE",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "TransportAddressFamily",
                    "ConfigType",
                    "FailureReason",
                    "ConnectionStatus",
                    "TransportType"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "TransportAddressFamily": [
                        "IPV4",
                        "IPV6"
                      ],
                      "ConfigType": [
                        "Implicit",
                        "Push",
                        "Pull",
                        "Manual",
                        "KDCC"
                      ],
                      "FailureReason": [
                        "NONE",
                        "KATO",
                        "Peer Closure"
                      ],
                      "ConnectionStatus": [
                        "Online",
                        "Offline"
                      ],
                      "TransportType": [
                        "TCP"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSS-Instance#-DDCs-Enums",
        "description": "This API retrieves a list of supported enumerations for DDC configuration.",
        "security": [
          {
            "basic": []
          }
        ]
      },
      "parameters": []
    },
    "/redfish/v1/SFSS/<InstanceID>/CDCInstance?$source=config": {
      "get": {
        "summary": "Get detailed CDC information",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "DiscoveryControllerPort": 8009,
                      "InstanceId": "1",
                      "NQN": "nqn.1988-11.com.dell:SFSS:1:20211007163204e8",
                      "UpTime": "2021-10-08 20:00:40.248345",
                      "Version": "1.0.0.0014",
                      "@odata.id": "/redfish/v1/SFSS/1/CDCInstance",
                      "@odata.type": "#CDCInstance.CDCInstance",
                      "@odata.context": "/redfish/v1/SFSS/1/$metadata#CDCInstance/CDCInstance/$entity"
                    }
                  },
                  "properties": {
                    "DiscoveryControllerPort": {
                      "type": "number",
                      "description": "The port that CDC listens on for mDNS queries"
                    },
                    "InstanceId": {
                      "type": "string",
                      "minLength": 1,
                      "description": "CDC instance identifier "
                    },
                    "NQN": {
                      "type": "string",
                      "minLength": 1,
                      "description": "NVMe Qualified Name (NQN) of the CDC instance"
                    },
                    "UpTime": {
                      "type": "string",
                      "minLength": 1
                    },
                    "Version": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "DiscoveryControllerPort",
                    "InstanceId",
                    "NQN",
                    "UpTime",
                    "Version",
                    "@odata.id",
                    "@odata.type",
                    "@odata.context"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSS-Instance#-CDCInstance?$source=config",
        "description": "This API retrieves detailed information about the specified CDC instance from the configuration database.",
        "security": [
          {
            "basic": []
          }
        ]
      },
      "parameters": []
    },
    "/redfish/v1/SFSS/<InstanceID>/ZoneDBs": {
      "get": {
        "summary": "Get zone database",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "ZoneDBs": [
                        {
                          "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('pending')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('active')"
                        }
                      ],
                      "ZoneDBs@odata.count": 2,
                      "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs",
                      "@odata.context": "/redfish/v1/SFSS/1/$metadata#ZoneDBs",
                      "@odata.type": "#ZoneDBsCollection.ZoneDBsCollection"
                    }
                  },
                  "properties": {
                    "ZoneDBs": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "Zone database",
                      "items": {
                        "type": "object",
                        "properties": {
                          "@odata.id": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "@odata.id"
                        ]
                      }
                    },
                    "ZoneDBs@odata.count": {
                      "type": "number",
                      "description": "Number of zone databases"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "ZoneDBs",
                    "ZoneDBs@odata.count",
                    "@odata.id",
                    "@odata.context",
                    "@odata.type"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "ZoneDBs": [
                        {
                          "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('pending')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('active')"
                        }
                      ],
                      "ZoneDBs@odata.count": 2,
                      "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs",
                      "@odata.context": "/redfish/v1/SFSS/1/$metadata#ZoneDBs",
                      "@odata.type": "#ZoneDBsCollection.ZoneDBsCollection"
                    }
                  },
                  "Example for $source=config optional params.": {
                    "value": {
                      "ZoneDBs": [
                        {
                          "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')"
                        }
                      ],
                      "ZoneDBs@odata.count": 1,
                      "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs?$source=config",
                      "@odata.context": "/redfish/v1/SFSS/1/$metadata#ZoneDBs",
                      "@odata.type": "#ZoneDBsCollection.ZoneDBsCollection"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSS-Instance#-ZoneDBs",
        "description": "This API retrieves zone database information from a CDC based on the specified CDC instance identifier.",
        "security": [
          {
            "basic": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "?$source=config",
            "description": "To fetch from configuration database"
          }
        ]
      },
      "parameters": []
    },
    "/redfish/v1/SFSS/<InstanceID>/ZoneDBs('config')": {
      "get": {
        "summary": "Get config database",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "NumberZoneGroups": 1,
                      "ZoneGroups": [
                        "config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8"
                      ],
                      "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')",
                      "@odata.type": "#ZoneDBs.ZoneDBs",
                      "@odata.context": "/redfish/v1/SFSS/1/$metadata#ZoneDBs/ZoneDBs/$entity"
                    }
                  },
                  "properties": {
                    "NumberZoneGroups": {
                      "type": "number",
                      "description": "Number of zone groups"
                    },
                    "ZoneGroups": {
                      "type": "array",
                      "description": "A set of zone groups",
                      "items": {
                        "type": "object"
                      }
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "NumberZoneGroups",
                    "ZoneGroups",
                    "@odata.id",
                    "@odata.type",
                    "@odata.context"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSS-Instance#-ZoneDBs('config')?$source=config",
        "security": [
          {
            "basic": []
          }
        ],
        "description": "This API retrieves zone group information from the specified CDC instance.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "?$source=config",
            "description": "This param is required to fetch the ZoneDB. The URL should looks like: /redfish/v1/SFSS/<Instance#>/ZoneDBs('config')?$source=config"
          }
        ]
      },
      "parameters": [],
      "delete": {
        "summary": "Delete zoning configuration",
        "operationId": "delete-redfish-v1-SFSS-Instance#-ZoneDBs('config')",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "EId": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "EId"
                  ],
                  "x-examples": {
                    "example-1": {
                      "EId": "config"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "EId": "config"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API removes all the zoning configuration from the specified CDC instance."
      }
    },
    "/redfish/v1/SFSS/<InstanceID>/ZoneDBs('active')": {
      "get": {
        "summary": "Get active database",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "NumberZoneGroups": 1,
                      "ZoneGroups": [
                        "active:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8"
                      ],
                      "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('active')",
                      "@odata.type": "#ZoneDBs.ZoneDBs",
                      "@odata.context": "/redfish/v1/SFSS/1/$metadata#ZoneDBs/ZoneDBs/$entity"
                    }
                  },
                  "properties": {
                    "NumberZoneGroups": {
                      "type": "number",
                      "description": "Number of zone groups"
                    },
                    "ZoneGroups": {
                      "type": "array",
                      "description": "A set of zone groups",
                      "items": {
                        "type": "object"
                      }
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "NumberZoneGroups",
                    "ZoneGroups",
                    "@odata.id",
                    "@odata.type",
                    "@odata.context"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "NumberZoneGroups": 0,
                      "ZoneGroups": [
                        {}
                      ],
                      "@odata.id": "string",
                      "@odata.type": "string",
                      "@odata.context": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSS-Instance#-ZoneDBs('active')",
        "description": "This API retrieves zone group information from the active database of the specified CDC instance. ",
        "security": [
          {
            "basic": []
          }
        ]
      },
      "parameters": []
    },
    "/redfish/v1/SFSS/<InstanceID>/ZoneDBs('config')/ZoneGroups('ID')": {
      "get": {
        "summary": "Get specific zone group",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "ZoneGroups": [
                        {
                          "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8')"
                        }
                      ],
                      "ZoneGroups@odata.count": 1,
                      "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups?$source=config",
                      "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneGroups",
                      "@odata.type": "#ZoneGroupsCollection.ZoneGroupsCollection"
                    }
                  },
                  "properties": {
                    "ZoneGroups": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "A set of zone groups",
                      "items": {
                        "type": "object",
                        "properties": {
                          "@odata.id": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "@odata.id"
                        ]
                      }
                    },
                    "ZoneGroups@odata.count": {
                      "type": "number",
                      "description": "Number of zone groups"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "ZoneGroups",
                    "ZoneGroups@odata.count",
                    "@odata.id",
                    "@odata.context",
                    "@odata.type"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "ZoneGroups": [
                        {
                          "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8')"
                        }
                      ],
                      "ZoneGroups@odata.count": 1,
                      "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups?$source=config",
                      "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneGroups",
                      "@odata.type": "#ZoneGroupsCollection.ZoneGroupsCollection"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneGroups?$source=config",
        "description": "This API retrieves zone group information from the config database based on the specified CDC instance and zone group identifiers.",
        "security": [
          {
            "basic": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "?$source=config",
            "description": "This parameter should be passed to fetch the Zone Groups"
          }
        ]
      },
      "parameters": [],
      "post": {
        "summary": "Add zone group",
        "operationId": "post-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneGroups",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "EId": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "EId"
                  ],
                  "x-examples": {
                    "example-1": {
                      "EId": "config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "EId": "config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API creates a zone group in the config database of the specified CDC instance.",
        "security": [
          {
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "ZoneDBType": "config",
                    "ZoneGroupName": "ZoneGrpDhana1111"
                  }
                },
                "properties": {
                  "ZoneDBType": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Type of zone database; possible values include Config and Running"
                  },
                  "ZoneGroupName": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Zone group name"
                  }
                },
                "required": [
                  "ZoneDBType",
                  "ZoneGroupName"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "ZoneDBType": "config",
                    "ZoneGroupName": "ZoneGrpDhana1111"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Activate (or deactivate) zone group",
        "operationId": "put-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneGroups",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "EId": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "EId"
                  ],
                  "x-examples": {
                    "example-1": {
                      "EId": "active:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "EId": "active:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API activates or deactivates a zone group in the specified CDC instance.",
        "security": [
          {
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "ActivateStatus": "Activate"
                  }
                },
                "properties": {
                  "ActivateStatus": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Zone group activation status; possible values include Activate or DeActivate"
                  }
                },
                "required": [
                  "ActivateStatus"
                ]
              },
              "examples": {
                "To Activate": {
                  "value": {
                    "ActivateStatus": "Activate"
                  }
                },
                "To Deactivate": {
                  "value": {
                    "ActivateStatus": "DeActivate"
                  }
                }
              }
            }
          },
          "description": "The URL should looks like: http://IPAddress//redfish/v1/SFSS/<Instance#>/ZoneDBs('config')/ZoneGroups('ID')"
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "('ID')",
            "description": "The ID of Zonegroup should be passed for PUT."
          }
        ]
      },
      "delete": {
        "summary": "Delete zone group",
        "operationId": "delete-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneGroups",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "EId": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "EId"
                  ],
                  "x-examples": {
                    "example-1": {
                      "EId": "config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "EId": "config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API removes a zone group from a CDC instance based on the specified CDC instance and zone group identifiers.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "('ZoneGroupID')",
            "description": "The Zone Group ID to be deleted should be passed to this API."
          }
        ]
      }
    },
    "/redfish/v1/SFSS/<InstanceID>/ZoneDBs('config')/ZoneGroups('ZoneGroupID'){expand}": {
      "get": {
        "summary": "Get specific zone group",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "ZoneDBType": "config",
                      "ZoneGroupId": "config:ZoneGroup1:nqn.1988-11.com.dell:SFSS:1:20210706164404e8",
                      "zoneGroupName": "ZoneGroup1",
                      "OriginatorNQN": "nqn.1988-11.com.dell:SFSS:1:20210706164404e8",
                      "Type": "Manual",
                      "ActivateStatus": "DeActivate",
                      "ActivationState": "NotActive",
                      "NumberZones": 0,
                      "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs(config)/ZoneGroups(config:ZoneGroup1:nqn.1988-11.com.dell:SFSS:1:20210706164404e8)",
                      "@odata.type": "#ZoneGroups.ZoneGroups",
                      "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs(config)/$metadata#ZoneGroups/ZoneGroups/$entity"
                    }
                  },
                  "properties": {
                    "ZoneDBType": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Type of zone database; possible values include Config and Running"
                    },
                    "ZoneGroupId": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Unique zone group identifier"
                    },
                    "zoneGroupName": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Zone group name"
                    },
                    "OriginatorNQN": {
                      "type": "string",
                      "minLength": 1,
                      "description": "NVMe Qualified Name (NQN) of the CDC instance"
                    },
                    "Type": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Type of zoning "
                    },
                    "ActivateStatus": {
                      "type": "string",
                      "minLength": 1
                    },
                    "ActivationState": {
                      "type": "string",
                      "minLength": 1
                    },
                    "NumberZones": {
                      "type": "number",
                      "description": "Number of zones"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "ZoneDBType",
                    "ZoneGroupId",
                    "zoneGroupName",
                    "OriginatorNQN",
                    "Type",
                    "ActivateStatus",
                    "ActivationState",
                    "NumberZones",
                    "@odata.id",
                    "@odata.type",
                    "@odata.context"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "ZoneDBType": "config",
                      "ZoneGroupId": "config:ZoneGroup1:nqn.1988-11.com.dell:SFSS:1:20210706164404e8",
                      "zoneGroupName": "ZoneGroup1",
                      "OriginatorNQN": "nqn.1988-11.com.dell:SFSS:1:20210706164404e8",
                      "Type": "Manual",
                      "ActivateStatus": "DeActivate",
                      "ActivationState": "NotActive",
                      "NumberZones": 0,
                      "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:ZoneGroup1:nqn.1988-11.com.dell:SFSS:1:20210706164404e8')",
                      "@odata.type": "#ZoneGroups.ZoneGroups",
                      "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneGroups/ZoneGroups/$entity"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneGroups('config:ZoneGroup1:nqn.1988-11.com.dell:SFSS:1:20210706164404e8')?$source=config",
        "description": "This API retrieves detailed information about a zone group based on the zone group identifier.",
        "security": [
          {
            "basic": []
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "expand",
          "in": "path",
          "description": "?$source=config",
          "required": true
        }
      ]
    },
    "/redfish/v1/SFSS/<InstanceID>/ZoneDBs/ZoneGroups/Enums": {
      "get": {
        "summary": "Get zone group enums",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "ActivateStatus": [
                        "Activate",
                        "DeActivate"
                      ],
                      "ActivationState": [
                        "Active",
                        "ReActivationNeeded",
                        "NotActive"
                      ],
                      "Type": [
                        "Manual",
                        "PULLANER",
                        "ANER"
                      ]
                    }
                  },
                  "properties": {
                    "ActivateStatus": {
                      "type": "array",
                      "description": "Zone group activation status; possible values include Activate and DeActivate ",
                      "items": {
                        "type": "string"
                      }
                    },
                    "ActivationState": {
                      "type": "array",
                      "description": "Current status of the zone group; possible values include NotActive, Active, ReActivationNeeded,     ActivationInprogress, and DeActivationInprogress",
                      "items": {
                        "type": "string"
                      }
                    },
                    "Type": {
                      "type": "array",
                      "description": "Zone group type",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "ActivateStatus",
                    "ActivationState",
                    "Type"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "ActivateStatus": [
                        "DeActivate",
                        "Activate"
                      ],
                      "ActivationState": [
                        "NotActive",
                        "Active",
                        "ReActivationNeeded",
                        "ActivationInprogress",
                        "DeActivationInprogress"
                      ],
                      "Type": [
                        "Manual",
                        "PULLANER",
                        "ANER"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSS-Instance#-ZoneDBs-ZoneGroups-Enums",
        "description": "This API retrieves a list of supported enumerations for the zone group configuration.",
        "security": [
          {
            "basic": []
          }
        ]
      },
      "parameters": []
    },
    "/redfish/v1/SFSS/<InstanceID>/ZoneDBs('config')/ZoneGroups('ZoneGrpID')/Zones('ZoneID')": {
      "get": {
        "summary": "Get all zones",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "Zones": [
                        {
                          "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8')/Zones('config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8:DhanaZone')"
                        }
                      ],
                      "Zones@odata.count": 1,
                      "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:ZoneGrpDhana1111:')/Zones?$source=config",
                      "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:ZoneGrpDhana1111:')/$metadata#Zones",
                      "@odata.type": "#ZonesCollection.ZonesCollection"
                    }
                  },
                  "properties": {
                    "Zones": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "A set of zones",
                      "items": {
                        "type": "object",
                        "properties": {
                          "@odata.id": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "@odata.id"
                        ]
                      }
                    },
                    "Zones@odata.count": {
                      "type": "number",
                      "description": "Number of zones"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "Zones",
                    "Zones@odata.count",
                    "@odata.id",
                    "@odata.context",
                    "@odata.type"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Zones": [
                        {
                          "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8')/Zones('config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8:DhanaZone')"
                        }
                      ],
                      "Zones@odata.count": 1,
                      "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:ZoneGrpDhana1111:')/Zones?$source=config",
                      "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:ZoneGrpDhana1111:')/$metadata#Zones",
                      "@odata.type": "#ZonesCollection.ZonesCollection"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneGroups('config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8')-Zones?$source=config",
        "security": [
          {
            "basic": []
          }
        ],
        "description": "This API retrieves a list of all the zones that belong to the specified CDC instance based on the zone group and zone identifiers.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "?$source=config",
            "description": "The API should looks like: /redfish/v1/SFSS/<Instance#>/ZoneDBs('config')/ZoneGroups('ZoneGrpID')/Zones?$source=config"
          }
        ]
      },
      "parameters": [],
      "post": {
        "summary": "Add zone",
        "operationId": "post-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneGroups('ZoneGrpID')-Zones?$source=config",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "EId": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "EId"
                  ],
                  "x-examples": {
                    "example-1": {
                      "EId": "config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8:DhanaZone"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "EId": "config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8:DhanaZone"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API creates a zone within the specified CDC instance and zone group.   ",
        "security": [
          {
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "ZoneName": "DhanaZone"
                  }
                },
                "properties": {
                  "ZoneName": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Name of the zone"
                  }
                },
                "required": [
                  "ZoneName"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "ZoneName": "DhanaZone"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete zone",
        "operationId": "delete-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneGroups('ZoneGrpID')-Zones",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "EId": "config:ZoneGrpDhana:nqn.1988-11.com.dell:SFSS:1:20210706164404e8:DhanaZone"
                    }
                  },
                  "properties": {
                    "EId": {
                      "type": "string",
                      "minLength": 1,
                      "description": "A unique NVMe Qualified Name (NQN) of the specified zone"
                    }
                  },
                  "required": [
                    "EId"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "EId": "config:ZoneGrpDhana:nqn.1988-11.com.dell:SFSS:1:20210706164404e8:DhanaZone"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API removes a zone from the specified CDC instance and zone group based on the zone identifier.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "('ZoneID')",
            "description": "The Zone ID to be deleted should be passed."
          }
        ]
      }
    },
    "/redfish/v1/SFSS/<InstanceID>/ZoneDBs('config')/ZoneGroups('ZoneGroupId')/Zones('ZoneID')/ZoneMembers('ZoneMemberID')": {
      "get": {
        "summary": "Get zone members",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "ZoneMembers": [
                        {
                          "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3000')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:AliasMemberIdDhana')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host')"
                        }
                      ],
                      "ZoneMembers@odata.count": 3,
                      "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers?$source=config",
                      "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers",
                      "@odata.type": "#ZoneMembersCollection.ZoneMembersCollection"
                    }
                  },
                  "properties": {
                    "ZoneMembers": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "A set of zone members",
                      "items": {
                        "type": "object",
                        "properties": {
                          "@odata.id": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "@odata.id"
                        ]
                      }
                    },
                    "ZoneMembers@odata.count": {
                      "type": "number",
                      "description": "Number of zone members"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "ZoneMembers",
                    "ZoneMembers@odata.count",
                    "@odata.id",
                    "@odata.context",
                    "@odata.type"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "ZoneMembers": [
                        {
                          "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3000')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:AliasMemberIdDhana')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host')"
                        }
                      ],
                      "ZoneMembers@odata.count": 3,
                      "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers?$source=config",
                      "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers",
                      "@odata.type": "#ZoneMembersCollection.ZoneMembersCollection"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-https:-IP-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')-Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')-ZoneMembers?$source=config",
        "description": "This API retrieves a list of zone members that are part of the specified CDC instance, zone group, and zone identifiers.",
        "security": [
          {
            "basic": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "?$source=config",
            "description": "This query param is mandatory. The request should looks like: /redfish/v1/SFSS/<Instance#>/ZoneDBs('config')/ZoneGroups('ZoneGroupId')/Zones('ZoneID')/ZoneMembers?$source=config"
          }
        ]
      },
      "parameters": [],
      "post": {
        "summary": "Add zone member",
        "operationId": "post-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneGroups('ZoneGroupId')-Zones('ZoneID')-ZoneMembers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "EId": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "EId"
                  ],
                  "x-examples": {
                    "example-1": {
                      "EId": "config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3000"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API creates a zone member in the specified CDC instance, zone group, and zone.",
        "security": [
          {
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "ZoneMemberId": "nqn.2014-08.org.nvmexpress:uuid:host",
                    "ZoneMemberType": "NQN",
                    "Role": "Host"
                  }
                },
                "properties": {
                  "ZoneMemberId": {
                    "type": "string",
                    "minLength": 1
                  },
                  "ZoneMemberType": {
                    "type": "string",
                    "minLength": 1
                  },
                  "Role": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "ZoneMemberId",
                  "ZoneMemberType"
                ]
              },
              "examples": {
                "For NQN based Zone Member": {
                  "value": {
                    "ZoneMemberId": "nqn.2014-08.org.nvmexpress:uuid:host",
                    "ZoneMemberType": "NQN",
                    "Role": "Host"
                  }
                },
                "Fully Qualified Name Payload Example.": {
                  "value": {
                    "ZoneMemberId": "nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3000",
                    "ZoneMemberType": "FullQualifiedName",
                    "Role": "Host"
                  }
                },
                "Adding Zone Member using Zone Alias.": {
                  "value": {
                    "ZoneMemberId": "AliasMemberIdDhana",
                    "ZoneMemberType": "ZoneAlias"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a zone member",
        "operationId": "delete-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneGroups('ZoneGroupId')-Zones('ZoneID')-ZoneMembers-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneGroups('ZoneGroupId')-Zones('ZoneID')-ZoneMembers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "EId": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "EId"
                  ],
                  "x-examples": {
                    "example-1": {
                      "EId": "config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8:DhanaZone:nqn.2014-08.org.nvmexpress:uuid:host"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "EId": "config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8:DhanaZone:nqn.2014-08.org.nvmexpress:uuid:host"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API removes a zone member from the specified CDC instance, zone group, and zone based on the zone member identifier.",
        "security": [
          {
            "basic": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "('ZoneMemberID')",
            "description": "The ZoneMember ID to be deleted."
          }
        ]
      },
      "put": {
        "summary": "Update a zone member",
        "operationId": "put-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneGroups('ZoneGroupId')-Zones('ZoneID')-ZoneMembers-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneGroups('ZoneGroupId')-Zones('ZoneID')-ZoneMembers",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "This API updates the zone member information based on the specified CDC instance, zone group, zone, and zone member identifiers.",
        "security": [
          {
            "basic": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "('ZoneMemberID')",
            "description": "The Zone Member ID to be updated."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "Role": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "Role"
                ],
                "x-examples": {
                  "example-1": {
                    "Role": "Subsystem"
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "Role": "Subsystem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/redfish/v1/SFSS/<InstanceID>/ZoneDBs('config')/ZoneGroups('ZoneGroupId')/Zones('ZoneID')/ZoneMembers{config}{zonemem}": {
      "get": {
        "summary": "Get zone members (detailed)",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "ZoneMembers": [
                        {
                          "Role": "Subsystem",
                          "ZoneMemberId": "config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3000",
                          "ZoneMemberType": "FullQualifiedName",
                          "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3000')",
                          "@odata.type": "#ZoneMembers.ZoneMembers",
                          "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers/ZoneMembers/$entity"
                        },
                        {
                          "Role": "Subsystem",
                          "ZoneMemberId": "config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:AliasMemberIdDhana",
                          "ZoneMemberType": "ZoneAlias",
                          "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:AliasMemberIdDhana')",
                          "@odata.type": "#ZoneMembers.ZoneMembers",
                          "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers/ZoneMembers/$entity"
                        },
                        {
                          "Role": "Subsystem",
                          "ZoneMemberId": "config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host",
                          "ZoneMemberType": "NQN",
                          "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host')",
                          "@odata.type": "#ZoneMembers.ZoneMembers",
                          "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers/ZoneMembers/$entity"
                        }
                      ],
                      "ZoneMembers@odata.count": 3,
                      "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers?$source=config&$expand=ZoneMembers",
                      "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers",
                      "@odata.type": "#ZoneMembersCollection.ZoneMembersCollection"
                    }
                  },
                  "properties": {
                    "ZoneMembers": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "A set of zone members",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Role": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Type of endpoint; possible values include host and subsystem"
                          },
                          "ZoneMemberId": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Unique zone member identifier"
                          },
                          "ZoneMemberType": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Possible values include NVMe Qualified Name (NQN) and Fully Qualified Name (FQN)"
                          },
                          "@odata.id": {
                            "type": "string",
                            "minLength": 1
                          },
                          "@odata.type": {
                            "type": "string",
                            "minLength": 1
                          },
                          "@odata.context": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "Role",
                          "ZoneMemberId",
                          "ZoneMemberType",
                          "@odata.id",
                          "@odata.type",
                          "@odata.context"
                        ]
                      }
                    },
                    "ZoneMembers@odata.count": {
                      "type": "number",
                      "description": "Number of zone members"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "ZoneMembers",
                    "ZoneMembers@odata.count",
                    "@odata.id",
                    "@odata.context",
                    "@odata.type"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "ZoneMembers": [
                        {
                          "Role": "Subsystem",
                          "ZoneMemberId": "config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3000",
                          "ZoneMemberType": "FullQualifiedName",
                          "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3000')",
                          "@odata.type": "#ZoneMembers.ZoneMembers",
                          "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers/ZoneMembers/$entity"
                        },
                        {
                          "Role": "Subsystem",
                          "ZoneMemberId": "config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:AliasMemberIdDhana",
                          "ZoneMemberType": "ZoneAlias",
                          "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:AliasMemberIdDhana')",
                          "@odata.type": "#ZoneMembers.ZoneMembers",
                          "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers/ZoneMembers/$entity"
                        },
                        {
                          "Role": "Subsystem",
                          "ZoneMemberId": "config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host",
                          "ZoneMemberType": "NQN",
                          "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host')",
                          "@odata.type": "#ZoneMembers.ZoneMembers",
                          "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers/ZoneMembers/$entity"
                        }
                      ],
                      "ZoneMembers@odata.count": 3,
                      "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers?$source=config&$expand=ZoneMembers",
                      "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers",
                      "@odata.type": "#ZoneMembersCollection.ZoneMembersCollection"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneGroups('ZoneGroupId')-Zones('ZoneID')-ZoneMembers('ZoneMemberID')?$source=config&$expand=ZoneMembers",
        "description": "This API retrieves detailed information about all zone members that belong to the specified CDC instance, zone group, and zone.",
        "security": [
          {
            "basic": []
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "config",
          "in": "path",
          "required": true,
          "description": "?$source=config"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "zonemem",
          "in": "path",
          "required": true,
          "description": "&$expand=ZoneMembers"
        }
      ]
    },
    "/redfish/v1/SFSS/<InstanceID>/ZoneDBs/ZoneGroups/Zones/ZoneMembers/Enums": {
      "get": {
        "summary": "Get zone member enums",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "Role": [
                        "ZoneAlias",
                        "Host",
                        "Subsystem"
                      ],
                      "ZoneMemberType": [
                        "NQN",
                        "FullQualifiedName",
                        "ZoneAlias"
                      ]
                    }
                  },
                  "properties": {
                    "Role": {
                      "type": "array",
                      "description": "Type of endpoint; possible values are host and subsystem ",
                      "items": {
                        "type": "string"
                      }
                    },
                    "ZoneMemberType": {
                      "type": "array",
                      "description": "Possible values include NVMe Qualified Name (NQN) and Fully Qualified Name (FQN)",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "Role",
                    "ZoneMemberType"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Role": [
                        "ZoneAlias",
                        "Host",
                        "Subsystem"
                      ],
                      "ZoneMemberType": [
                        "NQN",
                        "FullQualifiedName",
                        "ZoneAlias"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSS-Instance#-ZoneDBs-ZoneGroups-Zones-ZoneMembers-Enums",
        "description": "This API retrieves a list of supported enumerations for zone member configuration.",
        "security": [
          {
            "basic": []
          }
        ]
      },
      "parameters": []
    },
    "/redfish/v1/SFSS/<Instance#>/ZoneDBs('config')/ZoneGroups('ZoneGroupId')/Zones('ZoneID')/ZoneMembers('ZoneMemberID')": {
      "get": {
        "summary": "Get a zone member",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "Role": "Subsystem",
                      "ZoneMemberId": "config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host",
                      "ZoneMemberType": "NQN",
                      "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host')",
                      "@odata.type": "#ZoneMembers.ZoneMembers",
                      "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers/ZoneMembers/$entity"
                    }
                  },
                  "properties": {
                    "Role": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Type of endpoint; possible values include host and subsystem"
                    },
                    "ZoneMemberId": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Unique zone member identifier"
                    },
                    "ZoneMemberType": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Possible values include NVMe Qualified Name (NQN) and Fully Qualified Name (FQN)"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "Role",
                    "ZoneMemberId",
                    "ZoneMemberType",
                    "@odata.id",
                    "@odata.type",
                    "@odata.context"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Role": "Subsystem",
                      "ZoneMemberId": "config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host",
                      "ZoneMemberType": "NQN",
                      "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host')",
                      "@odata.type": "#ZoneMembers.ZoneMembers",
                      "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers/ZoneMembers/$entity"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneGroups('ZoneGroupId')-Zones('ZoneID')-ZoneMembers('ZoneMemberID')?$source=config",
        "description": "This API retrieves detailed information about a zone member that belong to the specified CDC instance, zone group, and zone.",
        "security": [
          {
            "basic": []
          }
        ]
      },
      "parameters": []
    },
    "/redfish/v1/SFSS/<InstanceID>/ZoneDBs('config')/ZoneAlias": {
      "get": {
        "summary": "Get zone alias",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "ZoneAlias": [
                        {
                          "ZoneAliasId": "config:DhanaSampleAlias",
                          "ZoneAliasName": "DhanaSampleAlias",
                          "NumberZoneMembers": "1",
                          "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')",
                          "@odata.type": "#ZoneAlias.ZoneAlias",
                          "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneAlias/ZoneAlias/$entity"
                        },
                        {
                          "ZoneAliasId": "config:DhanaSampleAliasTest",
                          "ZoneAliasName": "DhanaSampleAliasTest",
                          "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAliasTest')",
                          "@odata.type": "#ZoneAlias.ZoneAlias",
                          "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneAlias/ZoneAlias/$entity"
                        }
                      ],
                      "ZoneAlias@odata.count": 2,
                      "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias?$source=config&$expand=ZoneAlias",
                      "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneAlias",
                      "@odata.type": "#ZoneAliasCollection.ZoneAliasCollection"
                    }
                  },
                  "properties": {
                    "ZoneAlias": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "A set of zone aliases",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ZoneAliasId": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Unique zone alias identifier"
                          },
                          "ZoneAliasName": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Friendly name for the zone alias"
                          },
                          "NumberZoneMembers": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Number of zone members that are part of the zone alias"
                          },
                          "@odata.id": {
                            "type": "string",
                            "minLength": 1
                          },
                          "@odata.type": {
                            "type": "string",
                            "minLength": 1
                          },
                          "@odata.context": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "ZoneAliasId",
                          "ZoneAliasName",
                          "NumberZoneMembers",
                          "@odata.id",
                          "@odata.type",
                          "@odata.context"
                        ]
                      }
                    },
                    "ZoneAlias@odata.count": {
                      "type": "number",
                      "description": "Number of zone aliases"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "ZoneAlias",
                    "ZoneAlias@odata.count",
                    "@odata.id",
                    "@odata.context",
                    "@odata.type"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "ZoneAlias": [
                        {
                          "ZoneAliasId": "config:DhanaSampleAlias",
                          "ZoneAliasName": "DhanaSampleAlias",
                          "NumberZoneMembers": "1",
                          "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')",
                          "@odata.type": "#ZoneAlias.ZoneAlias",
                          "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneAlias/ZoneAlias/$entity"
                        },
                        {
                          "ZoneAliasId": "config:DhanaSampleAliasTest",
                          "ZoneAliasName": "DhanaSampleAliasTest",
                          "NumberZoneMembers": "1",
                          "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAliasTest')",
                          "@odata.type": "#ZoneAlias.ZoneAlias",
                          "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneAlias/ZoneAlias/$entity"
                        }
                      ],
                      "ZoneAlias@odata.count": 2,
                      "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias?$source=config&$expand=ZoneAlias",
                      "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneAlias",
                      "@odata.type": "#ZoneAliasCollection.ZoneAliasCollection"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneAlias?$source=config&$expand=ZoneAlias",
        "security": [
          {
            "basic": []
          }
        ],
        "description": "This API retrieves a list of zone aliases configured in the specified CDC instance.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "The query parameters should be passed. The URL should looks like http://IPAdress/redfish/v1/SFSS/<Instance#>/ZoneDBs('config')/ZoneAlias?$source=config&$expand=ZoneAlias",
            "name": "?$source=config&$expand=ZoneAlias"
          }
        ]
      },
      "post": {
        "summary": "Add a zone alias",
        "operationId": "post-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneAlias?$source=config&$expand=ZoneAlias",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "EId": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "EId"
                  ],
                  "x-examples": {
                    "example-1": {
                      "EId": "config:DhanaSampleAlias123"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "EId": "config:DhanaSampleAlias123"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API creates a zone alias in the specified CDC instance.",
        "security": [
          {
            "basic": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "ZoneDBType": "config",
                    "ZoneAliasName": "DhanaSampleAlias123"
                  }
                },
                "properties": {
                  "ZoneDBType": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Type of zone database; possible values include Config and Running"
                  },
                  "ZoneAliasName": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Friendly name for the zone alias"
                  }
                },
                "required": [
                  "ZoneDBType",
                  "ZoneAliasName"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "ZoneDBType": "config",
                    "ZoneAliasName": "DhanaSampleAlias123"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/redfish/v1/SFSS/<InstanceID>/ZoneDBs('config')/ZoneAlias('ZoneAliasId')": {
      "parameters": [],
      "delete": {
        "summary": "Delete a zone alias",
        "operationId": "delete-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneAlias",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "EId": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "EId"
                  ],
                  "x-examples": {
                    "example-1": {
                      "EId": "config:DhanaSampleAliasTest"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "EId": "config:DhanaSampleAliasTest"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API removes a zone alias from the specified CDC instance based on the zone alias identifier."
      }
    },
    "/redfish/v1/SFSS/<InstanceID>/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers": {
      "get": {
        "summary": "Get zone alias member",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "ZoneAliasMembers": [
                        {
                          "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3002')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host')"
                        }
                      ],
                      "ZoneAliasMembers@odata.count": 2,
                      "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers?$source=config",
                      "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/$metadata#ZoneAliasMembers",
                      "@odata.type": "#ZoneMembersCollection.ZoneMembersCollection"
                    }
                  },
                  "properties": {
                    "ZoneAliasMembers": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "A set of zone alias members",
                      "items": {
                        "type": "object",
                        "properties": {
                          "@odata.id": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "@odata.id"
                        ]
                      }
                    },
                    "ZoneAliasMembers@odata.count": {
                      "type": "number",
                      "description": "Number of zone alias members"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "ZoneAliasMembers",
                    "ZoneAliasMembers@odata.count",
                    "@odata.id",
                    "@odata.context",
                    "@odata.type"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "ZoneAliasMembers": [
                        {
                          "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3002')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host')"
                        }
                      ],
                      "ZoneAliasMembers@odata.count": 2,
                      "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers?$source=config",
                      "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/$metadata#ZoneAliasMembers",
                      "@odata.type": "#ZoneMembersCollection.ZoneMembersCollection"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneAlias('config:DhanaSampleAlias')-ZoneAliasMembers?$source=config",
        "description": "This API retrieves a list of zone alias members that belong to the specified CDC instance and zone alias.",
        "security": [
          {
            "basic": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "This query parameter should be passed to fetch details. The sample query looks like: http://IPAddress//redfish/v1/SFSS/<Instance#>/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers?$source=config",
            "name": "?$source=config"
          }
        ]
      },
      "post": {
        "summary": "Add zone alias member",
        "operationId": "post-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneAlias('config:DhanaSampleAlias')-ZoneAliasMembers?$source=config",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "EId": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "EId"
                  ],
                  "x-examples": {
                    "example-1": {
                      "EId": "config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3002"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "EId": "config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3002"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API creates a zone alias member in the specified CDC instance and zone alias.",
        "security": [
          {
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "ZoneAliasMemberId": "nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3002",
                    "ZoneAliasMemberType": "FullQualifiedName",
                    "Role": "Subsystem"
                  }
                },
                "properties": {
                  "ZoneAliasMemberId": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Unique zone alias member identifier"
                  },
                  "ZoneAliasMemberType": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Possible values include NVMe Qualified Name (NQN) and Fully Qualified Name (FQN)"
                  },
                  "Role": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Type of endpoint; possible values include host and subsystem"
                  }
                },
                "required": [
                  "ZoneAliasMemberId",
                  "ZoneAliasMemberType",
                  "Role"
                ]
              },
              "examples": {
                "Example for ZoneAlias using Fully Qualified Name.": {
                  "value": {
                    "ZoneAliasMemberId": "nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3002",
                    "ZoneAliasMemberType": "FullQualifiedName",
                    "Role": "Subsystem"
                  }
                },
                "Example for adding NQN based Zone Alias": {
                  "value": {
                    "ZoneAliasMemberId": "nqn.2014-08.org.nvmexpress:uuid:host",
                    "ZoneAliasMemberType": "NQN",
                    "Role": "Host"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/redfish/v1/SFSS/<InstanceID>/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('ZoneAliasMemberId')": {
      "put": {
        "summary": "Update zone alias member",
        "operationId": "put-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneAlias('config:DhanaSampleAlias')-ZoneAliasMembers?$source=config",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "EId": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "EId"
                  ],
                  "x-examples": {
                    "example-1": {
                      "EId": "config:SampleZoneAlias:nqn.2014-08.org.nvmexpress:uuid:host"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "EId": "config:SampleZoneAlias:nqn.2014-08.org.nvmexpress:uuid:host"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API updates zone alias member information in the specified CDC instance based on the zone alias member identifier. ",
        "security": [
          {
            "basic": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "Role": "Host"
                  }
                },
                "properties": {
                  "Role": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Type of endpoint; possible values include host and subsystem"
                  }
                },
                "required": [
                  "Role"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "Role": "Host"
                  }
                },
                "example-2": {
                  "value": {
                    "Role": "Subsystem"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [],
      "delete": {
        "summary": "Delete zone alias member",
        "operationId": "delete-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneAlias('config:DhanaSampleAlias')-ZoneAliasMembers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "EId": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "EId"
                  ],
                  "x-examples": {
                    "example-1": {
                      "EId": "config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3002"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "EId": "config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3002"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API removes a zone alias member from the specified CDC instance based on the zone alias member identifier."
      }
    },
    "/redfish/v1/SFSS/<InstanceID>/ZoneDBs('config')/ZoneAlias?$source=config&$expand=ZoneAlias": {
      "get": {
        "summary": "Get a zone alias",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "ZoneAliasId": "config:DhanaSampleAliasTest",
                      "ZoneAliasName": "DhanaSampleAliasTest",
                      "NumberZoneMembers": "1",
                      "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAliasTest')",
                      "@odata.type": "#ZoneAlias.ZoneAlias",
                      "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneAlias/ZoneAlias/$entity"
                    }
                  },
                  "properties": {
                    "ZoneAliasId": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Unique zone alias identifier"
                    },
                    "ZoneAliasName": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Zone alias name"
                    },
                    "NumberZoneMembers": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Number of zone members that are part of the zone alias"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "ZoneAliasId",
                    "ZoneAliasName",
                    "NumberZoneMembers",
                    "@odata.id",
                    "@odata.type",
                    "@odata.context"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "ZoneAliasId": "config:DhanaSampleAliasTest",
                      "ZoneAliasName": "DhanaSampleAliasTest",
                      "NumberZoneMembers": "1",
                      "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAliasTest')",
                      "@odata.type": "#ZoneAlias.ZoneAlias",
                      "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneAlias/ZoneAlias/$entity"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneAlias('config:DhanaSampleAliasTest')?$source=config",
        "description": "This API retrieves detailed information about a zone alias from the specified CDC instance based on the zone alias identifier.",
        "security": [
          {
            "basic": []
          }
        ]
      },
      "parameters": []
    },
    "/redfish/v1/SFSS/<InstanceID>/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host')": {
      "get": {
        "summary": "Get zone alias member",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "ZoneAliasMemberId": "config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host",
                      "ZoneAliasMemberType": "NQN",
                      "Role": "Host",
                      "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host')",
                      "@odata.type": "#ZoneAliasMembers.ZoneAliasMembers",
                      "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/$metadata#ZoneAliasMembers/ZoneAliasMembers/$entity"
                    }
                  },
                  "properties": {
                    "ZoneAliasMemberId": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Unique zone alias member identifier"
                    },
                    "ZoneAliasMemberType": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Possible values include NVMe Qualified Name (NQN) and Fully Qualified Name (FQN)"
                    },
                    "Role": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Type of endpoint; possible values include host and subsystem"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "ZoneAliasMemberId",
                    "ZoneAliasMemberType",
                    "Role",
                    "@odata.id",
                    "@odata.type",
                    "@odata.context"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "ZoneAliasMemberId": "config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host",
                      "ZoneAliasMemberType": "NQN",
                      "Role": "Host",
                      "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host')",
                      "@odata.type": "#ZoneAliasMembers.ZoneAliasMembers",
                      "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/$metadata#ZoneAliasMembers/ZoneAliasMembers/$entity"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneAlias('config:DhanaSampleAlias')-ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host')?$source=config",
        "description": "This API retrieves detailed information about a zone alias member from the specified CDC instance based on the zone alias member identifier. ",
        "security": [
          {
            "basic": []
          }
        ]
      },
      "parameters": []
    },
    "/redfish/v1/SFSS/<InstanceID>/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers{config}{zonealiasmem}": {
      "get": {
        "summary": "Get zone alias members",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "ZoneAliasMembers": [
                        {
                          "ZoneAliasMemberType": "FullQualifiedName",
                          "ZoneAliasMemberId": "config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3002",
                          "Role": "Host",
                          "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3002')",
                          "@odata.type": "#ZoneAliasMembers.ZoneAliasMembers",
                          "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/$metadata#ZoneAliasMembers/ZoneAliasMembers/$entity"
                        },
                        {
                          "ZoneAliasMemberId": "config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host",
                          "ZoneALiasMemberType": "NQN",
                          "Role": "Host",
                          "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host')",
                          "@odata.type": "#ZoneAliasMembers.ZoneAliasMembers",
                          "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/$metadata#ZoneAliasMembers/ZoneAliasMembers/$entity"
                        }
                      ],
                      "ZoneAliasMembers@odata.count": 2,
                      "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers?$source=config&$expand=ZoneAliasMembers",
                      "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/$metadata#ZoneAliasMembers",
                      "@odata.type": "#ZoneMembersCollection.ZoneMembersCollection"
                    }
                  },
                  "properties": {
                    "ZoneAliasMembers": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "A set of zone alias members",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ZoneAliasMemberType": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Possible values include NVMe Qualified Name (NQN) and Fully Qualified Name (FQN)"
                          },
                          "ZoneAliasMemberId": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Unique zone alias member identifier"
                          },
                          "Role": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Type of endpoint; possible values include host and subsystem"
                          },
                          "@odata.id": {
                            "type": "string",
                            "minLength": 1
                          },
                          "@odata.type": {
                            "type": "string",
                            "minLength": 1
                          },
                          "@odata.context": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "ZoneAliasMemberType",
                          "ZoneAliasMemberId",
                          "Role",
                          "@odata.id",
                          "@odata.type",
                          "@odata.context"
                        ]
                      }
                    },
                    "ZoneAliasMembers@odata.count": {
                      "type": "number",
                      "description": "Number of zone alias members"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "ZoneAliasMembers",
                    "ZoneAliasMembers@odata.count",
                    "@odata.id",
                    "@odata.context",
                    "@odata.type"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "ZoneAliasMembers": [
                        {
                          "ZoneAliasMemberType": "FullQualifiedName",
                          "ZoneAliasMemberId": "config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3002",
                          "Role": "Host",
                          "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3002')",
                          "@odata.type": "#ZoneAliasMembers.ZoneAliasMembers",
                          "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/$metadata#ZoneAliasMembers/ZoneAliasMembers/$entity"
                        }
                      ],
                      "ZoneAliasMembers@odata.count": 1,
                      "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers?$source=config&$expand=ZoneAliasMembers",
                      "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/$metadata#ZoneAliasMembers",
                      "@odata.type": "#ZoneMembersCollection.ZoneMembersCollection"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneAlias('config:DhanaSampleAlias')-ZoneAliasMembers?$source=config&$expand=ZoneAliasMembers",
        "description": "This API retrieves a list of all zone alias members from the specified CDC instance and zone alias.",
        "security": [
          {
            "basic": []
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "config",
          "in": "path",
          "required": true,
          "description": "?$source=config"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "zonealiasmem",
          "in": "path",
          "required": true,
          "description": "&$expand=ZoneAliasMembers"
        }
      ]
    },
    "/redfish/v1/SFSS/<InstanceID>/GlobalPolicies": {
      "get": {
        "summary": "Get global policies",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "ZoningPolicy": "Enable",
                      "NameServerEntityPurgeTOV": "4Hr",
                      "@odata.id": "/redfish/v1/stfs/1/GlobalPolicies",
                      "@odata.type": "#GlobalPolicies.GlobalPolicies",
                      "@odata.context": "/redfish/v1/stfs/1/$metadata#GlobalPolicies/GlobalPolicies/$entity"
                    }
                  },
                  "properties": {
                    "ZoningPolicy": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Global zoning policy that allows all hosts to communicate with all subsystems; disabled by default"
                    },
                    "NameServerEntityPurgeTOV": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Timeout value to remove endpoints (hosts and subsystems) that have lost connection with the CDC"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "ZoningPolicy",
                    "NameServerEntityPurgeTOV",
                    "@odata.id",
                    "@odata.type",
                    "@odata.context"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "ZoningPolicy": "Enable",
                      "NameServerEntityPurgeTOV": "4Hr",
                      "@odata.id": "/redfish/v1/stfs/1/GlobalPolicies",
                      "@odata.type": "#GlobalPolicies.GlobalPolicies",
                      "@odata.context": "/redfish/v1/stfs/1/$metadata#GlobalPolicies/GlobalPolicies/$entity"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSS-Instance-#-GlobalPolicies",
        "security": [
          {
            "basic": []
          }
        ],
        "description": "This API retrieves the global policies configured in the specified CDC instance."
      },
      "post": {
        "summary": "Configure global policies",
        "operationId": "post-redfish-v1-SFSS-Instance-#-GlobalPolicies",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "This API creates or updates the global policies in the specified CDC instance.",
        "security": [
          {
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "ZoningPolicy": "Disable",
                    "NameServerEntityPurgeTOV": "4Hr"
                  }
                },
                "properties": {
                  "ZoningPolicy": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Global zoning policy that allows all hosts to communicate with all subsystems; disabled by default"
                  },
                  "NameServerEntityPurgeTOV": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Timeout value to remove endpoints (hosts and subsystems) that have lost connection with the CDC"
                  }
                },
                "required": [
                  "ZoningPolicy",
                  "NameServerEntityPurgeTOV"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "ZoningPolicy": "Disable",
                    "NameServerEntityPurgeTOV": "4Hr"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/redfish/v1/SFSS/<InstanceID>/ZoneDBs/ZoneAlias/ZoneAliasMembers/Enums": {
      "get": {
        "summary": "Get zone alias member enums",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "Role": [
                        "Subsystem",
                        "Host"
                      ],
                      "ZoneMemberType": [
                        "NQN",
                        "FullQualifiedName"
                      ]
                    }
                  },
                  "properties": {
                    "Role": {
                      "type": "array",
                      "description": "A set of roles",
                      "items": {
                        "type": "string"
                      }
                    },
                    "ZoneMemberType": {
                      "type": "array",
                      "description": "Possible values include NVMe Qualified Name (NQN) or Fully Qualified Name (FQN)",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "Role",
                    "ZoneMemberType"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Role": [
                        "Subsystem",
                        "Host"
                      ],
                      "ZoneMemberType": [
                        "NQN",
                        "FullQualifiedName"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSS-Instance#-ZoneDBs-ZoneAlias-ZoneAliasMembers-Enums",
        "description": "This API retrieves a list of all supported enumerations for the zone alias member configuration.",
        "security": [
          {
            "basic": []
          }
        ]
      },
      "parameters": []
    },
    "/redfish/v1/SFSS/<InstanceID>/GlobalPolicies/Enums": {
      "get": {
        "summary": "Get global policy enums",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "ZoningPolicy": [
                        "Enable",
                        "Disable"
                      ],
                      "NameServerEntityPurgeTOV": [
                        "NoTimeout",
                        "5Sec",
                        "4Hr",
                        "8Hr",
                        "24Hr",
                        "48Hr",
                        "10Min"
                      ]
                    }
                  },
                  "properties": {
                    "ZoningPolicy": {
                      "type": "array",
                      "description": "Global zoning policy that allows all hosts to communicate with all subsystems; disabled by default",
                      "items": {
                        "type": "string"
                      }
                    },
                    "NameServerEntityPurgeTOV": {
                      "type": "array",
                      "description": "Timeout value to remove endpoints (hosts or subsystems) that have lost connection with the CDC",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "ZoningPolicy",
                    "NameServerEntityPurgeTOV"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "ZoningPolicy": [
                        "Enable",
                        "Disable"
                      ],
                      "NameServerEntityPurgeTOV": [
                        "NoTimeout",
                        "5Sec",
                        "4Hr",
                        "8Hr",
                        "24Hr",
                        "48Hr",
                        "10Min"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSS-Instance#-GlobalPolicies-Enums",
        "description": "This API retrieves a list of all supported enumerations for the global policy configuration.",
        "security": [
          {
            "basic": []
          }
        ]
      },
      "parameters": []
    }
  },
  "components": {
    "schemas": {
      "HostsGET": {
        "description": "This model contains host information.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "Hosts": [
              {
                "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@11.22.33.44:V4::0:0:TCP')"
              },
              {
                "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:V4::0:0:TCP')"
              },
              {
                "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@4.4.4.4:V4::0:0:TCP')"
              }
            ],
            "Hosts@odata.count": 3,
            "@odata.id": "/redfish/v1/SFSS/1/Hosts",
            "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts",
            "@odata.type": "#HostsCollection.HostsCollection"
          }
        },
        "examples": [
          {
            "Hosts": [
              {
                "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@11.22.33.44:V4::0:0:TCP')"
              },
              {
                "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:V4::0:0:TCP')"
              },
              {
                "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@4.4.4.4:V4::0:0:TCP')"
              }
            ],
            "Hosts@odata.count": 3,
            "@odata.id": "/redfish/v1/SFSS/1/Hosts",
            "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts",
            "@odata.type": "#HostsCollection.HostsCollection"
          }
        ],
        "title": "HostsGET",
        "properties": {
          "Hosts": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "description": "Host information",
            "items": {
              "type": "object",
              "properties": {
                "@odata.id": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "@odata.id"
              ]
            }
          },
          "Hosts@odata.count": {
            "type": "number",
            "description": "Number of hosts registered with the CDC instance"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "Hosts",
          "Hosts@odata.count",
          "@odata.id",
          "@odata.context",
          "@odata.type"
        ]
      },
      "HostsGET-ID": {
        "description": "This model contains information about the specified host based on the host ID.\n",
        "type": "object",
        "x-examples": {
          "example-1": {
            "Id": "nqn.2014-08.org.nvmexpress:uuid:host@4.4.4.4:V4::0:0:TCP",
            "NQN": "nqn.2014-08.org.nvmexpress:uuid:host",
            "TransportAddress": "4.4.4.4",
            "TransportAddressFamily": "IPV4",
            "TransportType": "TCP",
            "TREQ": "Secure channel Not specified",
            "TSAS": "No Security",
            "RegistrationType": "Manual",
            "ConnectionStatus": "Offline",
            "FailureReason": "NONE",
            "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@4.4.4.4:V4::0:0:TCP')",
            "@odata.type": "#Hosts.Hosts",
            "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity"
          }
        },
        "examples": [
          {
            "Id": "nqn.2014-08.org.nvmexpress:uuid:host@4.4.4.4:V4::0:0:TCP",
            "NQN": "nqn.2014-08.org.nvmexpress:uuid:host",
            "TransportAddress": "4.4.4.4",
            "TransportAddressFamily": "IPV4",
            "TransportType": "TCP",
            "TREQ": "Secure channel Not specified",
            "TSAS": "No Security",
            "RegistrationType": "Manual",
            "ConnectionStatus": "Offline",
            "FailureReason": "NONE",
            "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@4.4.4.4:V4::0:0:TCP')",
            "@odata.type": "#Hosts.Hosts",
            "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity"
          }
        ],
        "title": "HostsGET-ID",
        "properties": {
          "Id": {
            "type": "string",
            "minLength": 1,
            "description": "Unique Identity of the Entity - Fully Qualified Name (FQN) of the host"
          },
          "NQN": {
            "type": "string",
            "minLength": 1,
            "description": "NVMe Qualified Name (NQN) of the host"
          },
          "TransportAddress": {
            "type": "string",
            "minLength": 1,
            "description": "IP address of the host"
          },
          "TransportAddressFamily": {
            "type": "string",
            "minLength": 1,
            "description": "IP address family; possible values include IPv4 and IPv6"
          },
          "TransportType": {
            "type": "string",
            "minLength": 1,
            "description": "Protocol used for communication with the host; possible value is TCP"
          },
          "TREQ": {
            "type": "string",
            "minLength": 1,
            "description": "Transport Request Type (TREQ); possible values include Secure channel not specified, Secure channel required, and Secure channel not required"
          },
          "TSAS": {
            "type": "string",
            "minLength": 1,
            "description": "Possible values are No Security and TLS"
          },
          "RegistrationType": {
            "type": "string",
            "minLength": 1,
            "description": "Type of endpoint registration; possible values include Implicit, Explicit, Pull, and Manual"
          },
          "ConnectionStatus": {
            "type": "string",
            "minLength": 1,
            "description": "Status of the TCP connection between the host and the CDC instance; possible values include Online and Offline"
          },
          "FailureReason": {
            "type": "string",
            "minLength": 1,
            "description": "Reason for the host being offline; possible values include NONE, KATO, and Peer Closure"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "Id",
          "NQN",
          "TransportAddress",
          "TransportAddressFamily",
          "TransportType",
          "TREQ",
          "TSAS",
          "RegistrationType",
          "ConnectionStatus",
          "FailureReason",
          "@odata.id",
          "@odata.type",
          "@odata.context"
        ]
      },
      "HostsGET-Expand": {
        "description": "This model contains detailed information about the hosts that are registered with the CDC instance.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "Hosts": [
              {
                "Id": "nqn.2014-08.org.nvmexpress:uuid:host@11.22.33.44:V4::0:0:TCP",
                "NQN": "nqn.2014-08.org.nvmexpress:uuid:host",
                "TransportAddress": "11.22.33.44",
                "TransportAddressFamily": "IPV4",
                "TransportType": "TCP",
                "TREQ": "Secure channel Not specified",
                "TSAS": "No Security",
                "RegistrationType": "Manual",
                "ConnectionStatus": "Offline",
                "FailureReason": "NONE",
                "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@11.22.33.44:V4::0:0:TCP')",
                "@odata.type": "#Hosts.Hosts",
                "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity"
              },
              {
                "Id": "nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:V4::0:0:TCP",
                "NQN": "nqn.2014-08.org.nvmexpress:uuid:host",
                "TransportAddress": "1.2.3.4",
                "TransportAddressFamily": "IPV4",
                "TransportType": "TCP",
                "TREQ": "Secure channel Not specified",
                "TSAS": "No Security",
                "RegistrationType": "Manual",
                "ConnectionStatus": "Offline",
                "FailureReason": "NONE",
                "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:V4::0:0:TCP')",
                "@odata.type": "#Hosts.Hosts",
                "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity"
              },
              {
                "Id": "nqn.2014-08.org.nvmexpress:uuid:host@4.4.4.4:V4::0:0:TCP",
                "NQN": "nqn.2014-08.org.nvmexpress:uuid:host",
                "TransportAddress": "4.4.4.4",
                "TransportAddressFamily": "IPV4",
                "TransportType": "TCP",
                "TREQ": "Secure channel Not specified",
                "TSAS": "No Security",
                "RegistrationType": "Manual",
                "ConnectionStatus": "Offline",
                "FailureReason": "NONE",
                "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@4.4.4.4:V4::0:0:TCP')",
                "@odata.type": "#Hosts.Hosts",
                "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity"
              }
            ],
            "Hosts@odata.count": 3,
            "@odata.id": "/redfish/v1/SFSS/1/Hosts?$expand=Hosts",
            "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts",
            "@odata.type": "#HostsCollection.HostsCollection"
          }
        },
        "examples": [
          {
            "Hosts": [
              {
                "Id": "nqn.2014-08.org.nvmexpress:uuid:host@11.22.33.44:V4::0:0:TCP",
                "NQN": "nqn.2014-08.org.nvmexpress:uuid:host",
                "TransportAddress": "11.22.33.44",
                "TransportAddressFamily": "IPV4",
                "TransportType": "TCP",
                "TREQ": "Secure channel Not specified",
                "TSAS": "No Security",
                "RegistrationType": "Manual",
                "ConnectionStatus": "Offline",
                "FailureReason": "NONE",
                "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@11.22.33.44:V4::0:0:TCP')",
                "@odata.type": "#Hosts.Hosts",
                "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity"
              },
              {
                "Id": "nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:V4::0:0:TCP",
                "NQN": "nqn.2014-08.org.nvmexpress:uuid:host",
                "TransportAddress": "1.2.3.4",
                "TransportAddressFamily": "IPV4",
                "TransportType": "TCP",
                "TREQ": "Secure channel Not specified",
                "TSAS": "No Security",
                "RegistrationType": "Manual",
                "ConnectionStatus": "Offline",
                "FailureReason": "NONE",
                "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:V4::0:0:TCP')",
                "@odata.type": "#Hosts.Hosts",
                "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity"
              },
              {
                "Id": "nqn.2014-08.org.nvmexpress:uuid:host@4.4.4.4:V4::0:0:TCP",
                "NQN": "nqn.2014-08.org.nvmexpress:uuid:host",
                "TransportAddress": "4.4.4.4",
                "TransportAddressFamily": "IPV4",
                "TransportType": "TCP",
                "TREQ": "Secure channel Not specified",
                "TSAS": "No Security",
                "RegistrationType": "Manual",
                "ConnectionStatus": "Offline",
                "FailureReason": "NONE",
                "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@4.4.4.4:V4::0:0:TCP')",
                "@odata.type": "#Hosts.Hosts",
                "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity"
              }
            ],
            "Hosts@odata.count": 3,
            "@odata.id": "/redfish/v1/SFSS/1/Hosts?$expand=Hosts",
            "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts",
            "@odata.type": "#HostsCollection.HostsCollection"
          }
        ],
        "title": "HostsGET-Expand",
        "properties": {
          "Hosts": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "description": "Detailed host information",
            "items": {
              "type": "object",
              "properties": {
                "Id": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Unique Identity of the Entity - Fully Qualified Name (FQN) of the host"
                },
                "NQN": {
                  "type": "string",
                  "minLength": 1,
                  "description": "NVMe Qualified Name (NQN) of the host"
                },
                "TransportAddress": {
                  "type": "string",
                  "minLength": 1,
                  "description": "IP address of the host"
                },
                "TransportAddressFamily": {
                  "type": "string",
                  "minLength": 1,
                  "description": "IP address family; possible values include IPv4 and IPv6"
                },
                "TransportType": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Protocol used for communication with the host; possible value is TCP"
                },
                "TREQ": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Transport Request Type (TREQ); possible values include Secure channel not specified, Secure channel required, and Secure channel not required"
                },
                "TSAS": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Possible values are No Security and TLS"
                },
                "RegistrationType": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Type of endpoint registration; possible values include Implicit, Explicit, Pull, and Manual"
                },
                "ConnectionStatus": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Status of the TCP connection between the host and the CDC instance; possible values include Online and Offline"
                },
                "FailureReason": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Reason for the host being offline; possible values include NONE, KATO, and Peer Closure"
                },
                "@odata.id": {
                  "type": "string",
                  "minLength": 1
                },
                "@odata.type": {
                  "type": "string",
                  "minLength": 1
                },
                "@odata.context": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "Id",
                "NQN",
                "TransportAddress",
                "TransportAddressFamily",
                "TransportType",
                "TREQ",
                "TSAS",
                "RegistrationType",
                "ConnectionStatus",
                "FailureReason",
                "@odata.id",
                "@odata.type",
                "@odata.context"
              ]
            }
          },
          "Hosts@odata.count": {
            "type": "number",
            "description": "Number of hosts registered with the CDC instance"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "Hosts",
          "Hosts@odata.count",
          "@odata.id",
          "@odata.context",
          "@odata.type"
        ]
      },
      "Hosts-Enums": {
        "description": "This model contains supported enumerations for the host configuration.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "TransportAddressFamily": [
              "IPV4",
              "IPV6"
            ],
            "EKType": [
              "Port",
              "TRADDR"
            ],
            "FailureReason": [
              "NONE",
              "KATO",
              "Peer Closure"
            ],
            "RegistrationType": [
              "Implicit",
              "Explicit",
              "Pull",
              "Manual"
            ],
            "ConnectionStatus": [
              "Offline",
              "Online"
            ],
            "TREQ": [
              "Secure channel Not specified",
              "Secure Channel Required",
              "Secure Channel Not required"
            ],
            "TransportType": [
              "TCP"
            ],
            "TSAS": [
              "No Security",
              "TLS"
            ]
          }
        },
        "examples": [
          {
            "TransportAddressFamily": [
              "IPV4",
              "IPV6"
            ],
            "EKType": [
              "Port",
              "TRADDR"
            ],
            "FailureReason": [
              "NONE",
              "KATO",
              "Peer Closure"
            ],
            "RegistrationType": [
              "Implicit",
              "Explicit",
              "Pull",
              "Manual"
            ],
            "ConnectionStatus": [
              "Offline",
              "Online"
            ],
            "TREQ": [
              "Secure channel Not specified",
              "Secure Channel Required",
              "Secure Channel Not required"
            ],
            "TransportType": [
              "TCP"
            ],
            "TSAS": [
              "No Security",
              "TLS"
            ]
          }
        ],
        "title": "Hosts-Enums",
        "properties": {
          "TransportAddressFamily": {
            "type": "array",
            "description": "IP address family; possible values include IPv4 and IPv6",
            "items": {
              "type": "object"
            }
          },
          "EKType": {
            "type": "array",
            "description": "Entity Key Type; possible values are Unknown, Port, and TRADDR",
            "items": {
              "type": "object"
            }
          },
          "FailureReason": {
            "type": "array",
            "description": "Reason for the host being offline; possible values include NONE, KATO, and Peer Closure",
            "items": {
              "type": "object"
            }
          },
          "RegistrationType": {
            "type": "array",
            "description": "Type of endpoint registration; possible values include Implicit, Explicit, Pull, and Manual",
            "items": {
              "type": "object"
            }
          },
          "ConnectionStatus": {
            "type": "array",
            "description": "Status of the TCP connection between the host and the CDC instance; possible values include Online and Offline",
            "items": {
              "type": "object"
            }
          },
          "TREQ": {
            "type": "array",
            "description": "Transport Request Type (TREQ); possible values include Secure channel not specified, Secure channel required, and Secure channel not required",
            "items": {
              "type": "object"
            }
          },
          "TransportType": {
            "type": "array",
            "description": "Protocol used for communication with the host; possible value is TCP",
            "items": {
              "type": "object"
            }
          },
          "TSAS": {
            "type": "array",
            "description": "Possible values are No Security and TLS",
            "items": {
              "type": "object"
            }
          }
        },
        "required": [
          "TransportAddressFamily",
          "EKType",
          "FailureReason",
          "RegistrationType",
          "ConnectionStatus",
          "TREQ",
          "TransportType",
          "TSAS"
        ]
      },
      "SubsystemsGET": {
        "description": "This model contains information about the subsystems that are registered with the CDC instance.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "Subsystems": [
              {
                "@odata.id": "/redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@2.2.2.2:V4:600:0:0:TCP')"
              },
              {
                "@odata.id": "/redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:400:0:0:TCP')"
              },
              {
                "@odata.id": "/redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@1.1.1.1:V4:900:0:0:TCP')"
              }
            ],
            "Subsystems@odata.count": 3,
            "@odata.id": "/redfish/v1/SFSS/1/Subsystems",
            "@odata.context": "/redfish/v1/SFSS/1/$metadata#Subsystems",
            "@odata.type": "#SubsystemsCollection.SubsystemsCollection"
          }
        },
        "examples": [
          {
            "Subsystems": [
              {
                "@odata.id": "/redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@2.2.2.2:V4:600:0:0:TCP')"
              },
              {
                "@odata.id": "/redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:400:0:0:TCP')"
              },
              {
                "@odata.id": "/redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@1.1.1.1:V4:900:0:0:TCP')"
              }
            ],
            "Subsystems@odata.count": 3,
            "@odata.id": "/redfish/v1/SFSS/1/Subsystems",
            "@odata.context": "/redfish/v1/SFSS/1/$metadata#Subsystems",
            "@odata.type": "#SubsystemsCollection.SubsystemsCollection"
          }
        ],
        "title": "SubsystemsGET",
        "properties": {
          "Subsystems": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "description": "Subsystem information",
            "items": {
              "type": "object",
              "properties": {
                "@odata.id": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "@odata.id"
              ]
            }
          },
          "Subsystems@odata.count": {
            "type": "number",
            "description": "Number of subsystems registered with the CDC instance"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "Subsystems",
          "Subsystems@odata.count",
          "@odata.id",
          "@odata.context",
          "@odata.type"
        ]
      },
      "SubsystemsGET-ID": {
        "description": "This model contains information about the specified subsystem based on the subsystem identifier.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "Id": "nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:900:0:0:TCP",
            "NQN": "nqn.2014-08.org.nvmexpress:uuid:subsystem",
            "TransportAddress": "3.3.3.3",
            "TransportAddressFamily": "IPV4",
            "PortId": 5453,
            "ControllerId": 65535,
            "TransportType": "TCP",
            "SubType": "NVM Subsystem",
            "TREQ": "Secure channel Not specified",
            "ASQZ": 32,
            "TransportServiceId": "900",
            "TSAS": "No Security",
            "RcvdGenCounter": 0,
            "RegistrationType": "Manual",
            "ConnectionStatus": "Offline",
            "EKType": "TRADDR",
            "@odata.id": "/redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:900:0:0:TCP')",
            "@odata.type": "#Subsystems.Subsystems",
            "@odata.context": "/redfish/v1/SFSS/1/$metadata#Subsystems/Subsystems/$entity"
          }
        },
        "examples": [
          {
            "Id": "nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:900:0:0:TCP",
            "NQN": "nqn.2014-08.org.nvmexpress:uuid:subsystem",
            "TransportAddress": "3.3.3.3",
            "TransportAddressFamily": "IPV4",
            "PortId": 5453,
            "ControllerId": 65535,
            "TransportType": "TCP",
            "SubType": "NVM Subsystem",
            "TREQ": "Secure channel Not specified",
            "ASQZ": 32,
            "TransportServiceId": "900",
            "TSAS": "No Security",
            "RcvdGenCounter": 0,
            "RegistrationType": "Manual",
            "ConnectionStatus": "Offline",
            "EKType": "TRADDR",
            "@odata.id": "/redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:900:0:0:TCP')",
            "@odata.type": "#Subsystems.Subsystems",
            "@odata.context": "/redfish/v1/SFSS/1/$metadata#Subsystems/Subsystems/$entity"
          }
        ],
        "title": "SubsystemsGET-ID",
        "properties": {
          "Id": {
            "type": "string",
            "minLength": 1,
            "description": "Unique Identity of the Entity - Fully Qualified Name (FQN) of the subsystem"
          },
          "NQN": {
            "type": "string",
            "minLength": 1,
            "description": "NVMe Qualified Name (NQN) of the subsystem"
          },
          "TransportAddress": {
            "type": "string",
            "minLength": 1,
            "description": "IP address of the subsystem"
          },
          "TransportAddressFamily": {
            "type": "string",
            "minLength": 1,
            "description": "IP address family; possible values include IPv4 and IPv6"
          },
          "PortId": {
            "type": "number",
            "description": "Internal Port ID that is mapped to the NVMe Subsystem Port"
          },
          "ControllerId": {
            "type": "number",
            "description": "TCP controller ID, 65535"
          },
          "TransportType": {
            "type": "string",
            "minLength": 1,
            "description": "Protocol used for communication with the host; possible value is TCP"
          },
          "SubType": {
            "type": "string",
            "minLength": 1,
            "description": "Possible values include Reserved, Discovery Service, and NVM Subsystem"
          },
          "TREQ": {
            "type": "string",
            "minLength": 1,
            "description": "Transport Request Type (TREQ); possible values include Secure channel not specified, Secure channel required, and Secure channel not required"
          },
          "ASQZ": {
            "type": "number",
            "description": "Admin Queue Size"
          },
          "TransportServiceId": {
            "type": "string",
            "minLength": 1,
            "description": "NVMe Transport Service Identifier as an ASCII string"
          },
          "TSAS": {
            "type": "string",
            "minLength": 1,
            "description": "NVMe Transport Service Address SubType; possible values are No Security and TLS"
          },
          "RcvdGenCounter": {
            "type": "number",
            "description": "Generation Counter that is maintained for the last received Get Log Page command"
          },
          "RegistrationType": {
            "type": "string",
            "minLength": 1,
            "description": "Type of endpoint registration; possible values include Implicit, Explicit, Pull, and Manual"
          },
          "ConnectionStatus": {
            "type": "string",
            "minLength": 1,
            "description": "Status of the TCP connection between the subsystem and the CDC instance; possible values include Online and Offline"
          },
          "EKType": {
            "type": "string",
            "minLength": 1,
            "description": "Entity Key Type; possible values are Unknown, Port, and TRADDR"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "Id",
          "NQN",
          "TransportAddress",
          "TransportAddressFamily",
          "PortId",
          "ControllerId",
          "TransportType",
          "SubType",
          "TREQ",
          "ASQZ",
          "TransportServiceId",
          "TSAS",
          "RcvdGenCounter",
          "RegistrationType",
          "ConnectionStatus",
          "EKType",
          "@odata.id",
          "@odata.type",
          "@odata.context"
        ]
      },
      "SubsystemsGET-Expand": {
        "description": "This model contains detailed information about the subsystems.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "Subsystems": [
              {
                "Id": "nqn.2014-08.org.nvmexpress:uuid:subsystem@1.1.1.1:V4:900:0:0:TCP",
                "NQN": "nqn.2014-08.org.nvmexpress:uuid:subsystem",
                "TransportAddress": "1.1.1.1",
                "TransportAddressFamily": "IPV4",
                "PortId": 5450,
                "ControllerId": 65535,
                "TransportType": "TCP",
                "SubType": "NVM Subsystem",
                "TREQ": "Secure channel Not specified",
                "ASQZ": 32,
                "TransportServiceId": "900",
                "TSAS": "No Security",
                "RcvdGenCounter": 0,
                "RegistrationType": "Manual",
                "ConnectionStatus": "Offline",
                "EKType": "TRADDR",
                "@odata.id": "/redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@1.1.1.1:V4:900:0:0:TCP')",
                "@odata.type": "#Subsystems.Subsystems",
                "@odata.context": "/redfish/v1/SFSS/1/$metadata#Subsystems/Subsystems/$entity"
              },
              {
                "Id": "nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:900:0:0:TCP",
                "NQN": "nqn.2014-08.org.nvmexpress:uuid:subsystem",
                "TransportAddress": "3.3.3.3",
                "TransportAddressFamily": "IPV4",
                "PortId": 5453,
                "ControllerId": 65535,
                "TransportType": "TCP",
                "SubType": "NVM Subsystem",
                "TREQ": "Secure channel Not specified",
                "ASQZ": 32,
                "TransportServiceId": "900",
                "TSAS": "No Security",
                "RcvdGenCounter": 0,
                "RegistrationType": "Manual",
                "ConnectionStatus": "Offline",
                "EKType": "TRADDR",
                "@odata.id": "/redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:900:0:0:TCP')",
                "@odata.type": "#Subsystems.Subsystems",
                "@odata.context": "/redfish/v1/SFSS/1/$metadata#Subsystems/Subsystems/$entity"
              }
            ],
            "Subsystems@odata.count": 2,
            "@odata.id": "/redfish/v1/SFSS/1/Subsystems?$expand=Subsystems&$filter=TransportAddress%20eq%201.1.1.1%20or%20TransportAddress%20eq%203.3.3.3",
            "@odata.context": "/redfish/v1/SFSS/1/$metadata#Subsystems",
            "@odata.type": "#SubsystemsCollection.SubsystemsCollection"
          }
        },
        "examples": [
          {
            "Subsystems": [
              {
                "Id": "nqn.2014-08.org.nvmexpress:uuid:subsystem@1.1.1.1:V4:900:0:0:TCP",
                "NQN": "nqn.2014-08.org.nvmexpress:uuid:subsystem",
                "TransportAddress": "1.1.1.1",
                "TransportAddressFamily": "IPV4",
                "PortId": 5450,
                "ControllerId": 65535,
                "TransportType": "TCP",
                "SubType": "NVM Subsystem",
                "TREQ": "Secure channel Not specified",
                "ASQZ": 32,
                "TransportServiceId": "900",
                "TSAS": "No Security",
                "RcvdGenCounter": 0,
                "RegistrationType": "Manual",
                "ConnectionStatus": "Offline",
                "EKType": "TRADDR",
                "@odata.id": "/redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@1.1.1.1:V4:900:0:0:TCP')",
                "@odata.type": "#Subsystems.Subsystems",
                "@odata.context": "/redfish/v1/SFSS/1/$metadata#Subsystems/Subsystems/$entity"
              },
              {
                "Id": "nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:900:0:0:TCP",
                "NQN": "nqn.2014-08.org.nvmexpress:uuid:subsystem",
                "TransportAddress": "3.3.3.3",
                "TransportAddressFamily": "IPV4",
                "PortId": 5453,
                "ControllerId": 65535,
                "TransportType": "TCP",
                "SubType": "NVM Subsystem",
                "TREQ": "Secure channel Not specified",
                "ASQZ": 32,
                "TransportServiceId": "900",
                "TSAS": "No Security",
                "RcvdGenCounter": 0,
                "RegistrationType": "Manual",
                "ConnectionStatus": "Offline",
                "EKType": "TRADDR",
                "@odata.id": "/redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:900:0:0:TCP')",
                "@odata.type": "#Subsystems.Subsystems",
                "@odata.context": "/redfish/v1/SFSS/1/$metadata#Subsystems/Subsystems/$entity"
              }
            ],
            "Subsystems@odata.count": 2,
            "@odata.id": "/redfish/v1/SFSS/1/Subsystems?$expand=Subsystems&$filter=TransportAddress%20eq%201.1.1.1%20or%20TransportAddress%20eq%203.3.3.3",
            "@odata.context": "/redfish/v1/SFSS/1/$metadata#Subsystems",
            "@odata.type": "#SubsystemsCollection.SubsystemsCollection"
          }
        ],
        "title": "SubsystemsGET-Expand",
        "properties": {
          "Subsystems": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "description": "Detailed subsystem information ",
            "items": {
              "type": "object",
              "properties": {
                "Id": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Unique Identity of the Entity - Fully Qualified Name (FQN) of the subsystem"
                },
                "NQN": {
                  "type": "string",
                  "minLength": 1,
                  "description": "NVMe Qualified Name (NQN) of the subsystem"
                },
                "TransportAddress": {
                  "type": "string",
                  "minLength": 1,
                  "description": "IP address of the subsystem"
                },
                "TransportAddressFamily": {
                  "type": "string",
                  "minLength": 1,
                  "description": "IP address family; possible values include IPv4 and IPv6"
                },
                "PortId": {
                  "type": "number",
                  "description": "Internal Port ID that is mapped to the NVMe Subsystem Port"
                },
                "ControllerId": {
                  "type": "number",
                  "description": "TCP controller ID, 65535"
                },
                "TransportType": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Protocol used for communication with the host; possible values are TCP, RoCE, FC"
                },
                "SubType": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Possible values include Reserved, Discovery Service, and NVM Subsystem"
                },
                "TREQ": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Transport Request Type (TREQ); possible values include Secure channel not specified, Secure channel required, and Secure channel not required"
                },
                "ASQZ": {
                  "type": "number",
                  "description": "Admin Queue Size"
                },
                "TransportServiceId": {
                  "type": "string",
                  "minLength": 1,
                  "description": "NVMe Transport Service Identifier as an ASCII string"
                },
                "TSAS": {
                  "type": "string",
                  "minLength": 1,
                  "description": "NVMe Transport Service Address SubType; possible values are No Security and TLS"
                },
                "RcvdGenCounter": {
                  "type": "number",
                  "description": "Generation Counter that is maintained for the last received Get Log Page command"
                },
                "RegistrationType": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Type of endpoint registration; possible values include Implicit, Explicit, Pull, and Manual"
                },
                "ConnectionStatus": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Status of the TCP connection between the subsystem and the CDC instance; possible values include Online and Offline"
                },
                "EKType": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Entity Key Type; possible values are Unknown, Port, and TRADDR"
                },
                "@odata.id": {
                  "type": "string",
                  "minLength": 1
                },
                "@odata.type": {
                  "type": "string",
                  "minLength": 1
                },
                "@odata.context": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "Id",
                "NQN",
                "TransportAddress",
                "TransportAddressFamily",
                "PortId",
                "ControllerId",
                "TransportType",
                "SubType",
                "TREQ",
                "ASQZ",
                "TransportServiceId",
                "TSAS",
                "RcvdGenCounter",
                "RegistrationType",
                "ConnectionStatus",
                "EKType",
                "@odata.id",
                "@odata.type",
                "@odata.context"
              ]
            }
          },
          "Subsystems@odata.count": {
            "type": "number",
            "description": "Number of subsystems registered with the CDC instance"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "Subsystems",
          "Subsystems@odata.count",
          "@odata.id",
          "@odata.context",
          "@odata.type"
        ]
      },
      "Subsystems-Enums": {
        "description": "This model contains supported enumerations for the subsystem configuration.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "TransportAddressFamily": [
              "IPV4",
              "IPV6"
            ],
            "EKType": [
              "Port",
              "TRADDR"
            ],
            "FailureReason": [
              "NONE",
              "KATO",
              "Peer Closure"
            ],
            "RegistrationType": [
              "Implicit",
              "Explicit",
              "Pull",
              "Manual"
            ],
            "ConnectionStatus": [
              "Offline",
              "Online"
            ],
            "SubType": [
              "Reserved",
              "Discovery Service",
              "NVM Subsystem"
            ],
            "TREQ": [
              "Secure channel Not specified",
              "Secure Channel Required",
              "Secure Channel Not required"
            ],
            "TransportType": [
              "TCP"
            ],
            "TSAS": [
              "No Security",
              "TLS"
            ]
          }
        },
        "examples": [
          {
            "TransportAddressFamily": [
              "IPV4",
              "IPV6"
            ],
            "EKType": [
              "Port",
              "TRADDR"
            ],
            "FailureReason": [
              "NONE",
              "KATO",
              "Peer Closure"
            ],
            "RegistrationType": [
              "Implicit",
              "Explicit",
              "Pull",
              "Manual"
            ],
            "ConnectionStatus": [
              "Offline",
              "Online"
            ],
            "SubType": [
              "Reserved",
              "Discovery Service",
              "NVM Subsystem"
            ],
            "TREQ": [
              "Secure channel Not specified",
              "Secure Channel Required",
              "Secure Channel Not required"
            ],
            "TransportType": [
              "TCP"
            ],
            "TSAS": [
              "No Security",
              "TLS"
            ]
          }
        ],
        "title": "Subsystems-Enums",
        "properties": {
          "TransportAddressFamily": {
            "type": "array",
            "description": "IP address family; possible values include IPv4 and IPv6",
            "items": {
              "type": "object"
            }
          },
          "EKType": {
            "type": "array",
            "description": "Entity Key Type; possible values are Unknown, Port, and TRADDR",
            "items": {
              "type": "object"
            }
          },
          "FailureReason": {
            "type": "array",
            "description": "Connection Failure Reason - Possible Values are NONE, Peer Closure,Dial Failure, KATO",
            "items": {
              "type": "object"
            }
          },
          "RegistrationType": {
            "type": "array",
            "description": "Type of endpoint registration; possible values include Implicit, Explicit, Pull, and Manual",
            "items": {
              "type": "object"
            }
          },
          "ConnectionStatus": {
            "type": "array",
            "description": "Status of the TCP connection between the subsystem and the CDC instance; possible values include Online and Offline",
            "items": {
              "type": "object"
            }
          },
          "SubType": {
            "type": "array",
            "description": "Possible values include Reserved, Discovery Service, and NVM Subsystem",
            "items": {
              "type": "object"
            }
          },
          "TREQ": {
            "type": "array",
            "description": "Transport Request Type (TREQ); possible values include Secure channel not specified, Secure channel required, and Secure channel not required",
            "items": {
              "type": "object"
            }
          },
          "TransportType": {
            "type": "array",
            "description": "Protocol used for communication with the host; possible values are TCP, RoCE, FC",
            "items": {
              "type": "object"
            }
          },
          "TSAS": {
            "type": "array",
            "description": "NVMe Transport Service Address SubType; possible values are No Security and TLS",
            "items": {
              "type": "object"
            }
          }
        },
        "required": [
          "TransportAddressFamily",
          "EKType",
          "FailureReason",
          "RegistrationType",
          "ConnectionStatus",
          "SubType",
          "TREQ",
          "TransportType",
          "TSAS"
        ]
      },
      "CDCInstanceGET": {
        "description": "This model lists the number of CDC instances configured in SFSS.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "DiscoveryControllerPort": 8009,
            "InstanceId": "1",
            "NQN": "nqn.1988-11.com.dell:SFSS:1:20211007163204e8",
            "UpTime": "2021-10-08 20:00:40.248345",
            "Version": "1.0.0.0014",
            "@odata.id": "/redfish/v1/SFSS/1/CDCInstance",
            "@odata.type": "#CDCInstance.CDCInstance",
            "@odata.context": "/redfish/v1/SFSS/1/$metadata#CDCInstance/CDCInstance/$entity"
          }
        },
        "examples": [
          {
            "DiscoveryControllerPort": 8009,
            "InstanceId": "1",
            "NQN": "nqn.1988-11.com.dell:SFSS:1:20211007163204e8",
            "UpTime": "2021-10-08 20:00:40.248345",
            "Version": "1.0.0.0014",
            "@odata.id": "/redfish/v1/SFSS/1/CDCInstance",
            "@odata.type": "#CDCInstance.CDCInstance",
            "@odata.context": "/redfish/v1/SFSS/1/$metadata#CDCInstance/CDCInstance/$entity"
          }
        ],
        "title": "CDCInstanceGET",
        "properties": {
          "DiscoveryControllerPort": {
            "type": "number",
            "description": "Port that CDC listens on for mDNS queries"
          },
          "InstanceId": {
            "type": "string",
            "minLength": 1,
            "description": "CDC instance identifier "
          },
          "NQN": {
            "type": "string",
            "minLength": 1,
            "description": "NVMe Qualified Name (NQN) of the CDC instance"
          },
          "UpTime": {
            "type": "string",
            "minLength": 1
          },
          "Version": {
            "type": "string",
            "minLength": 1
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "DiscoveryControllerPort",
          "InstanceId",
          "NQN",
          "UpTime",
          "Version",
          "@odata.id",
          "@odata.type",
          "@odata.context"
        ]
      },
      "DDCGET": {
        "description": "This model lists all the Direct Discovery Controllers (DDCs) configured in the CDC instance.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "DDCs": [
              {
                "@odata.id": "/redfish/v1/SFSS/1/DDCs('@111.111.111.115:V4::0:5450:TCP')"
              }
            ],
            "DDCs@odata.count": 1,
            "@odata.id": "/redfish/v1/SFSS/1/DDCs",
            "@odata.context": "/redfish/v1/SFSS/1/$metadata#DDCs",
            "@odata.type": "#DDCsCollection.DDCsCollection"
          }
        },
        "examples": [
          {
            "DDCs": [
              {
                "@odata.id": "/redfish/v1/SFSS/1/DDCs('@111.111.111.115:V4::0:5450:TCP')"
              }
            ],
            "DDCs@odata.count": 1,
            "@odata.id": "/redfish/v1/SFSS/1/DDCs",
            "@odata.context": "/redfish/v1/SFSS/1/$metadata#DDCs",
            "@odata.type": "#DDCsCollection.DDCsCollection"
          }
        ],
        "title": "DDC GET",
        "properties": {
          "DDCs": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "description": "Direct Discovery Controller (DDC) information",
            "items": {
              "type": "object",
              "properties": {
                "@odata.id": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "@odata.id"
              ]
            }
          },
          "DDCs@odata.count": {
            "type": "number",
            "description": "Number of DDCs configured in the CDC instance"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "DDCs",
          "DDCs@odata.count",
          "@odata.id",
          "@odata.context",
          "@odata.type"
        ]
      },
      "DDCGET-ID": {
        "description": "This model lists information about a DDC based on the DDC ID.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "Id": "@111.111.111.115:V4::0:5450:TCP",
            "TransportAddress": "111.111.111.115",
            "TransportAddressFamily": "IPV4",
            "PortId": 5450,
            "TransportType": "TCP",
            "Activate": false,
            "ConfigType": "Manual",
            "ConnectionStatus": "Offline",
            "FailureReason": "NONE",
            "@odata.id": "/redfish/v1/SFSS/1/DDCs('@111.111.111.115:V4::0:5450:TCP')",
            "@odata.type": "#DDCs.DDCs",
            "@odata.context": "/redfish/v1/SFSS/1/$metadata#DDCs/DDCs/$entity"
          }
        },
        "examples": [
          {
            "Id": "@111.111.111.115:V4::0:5450:TCP",
            "TransportAddress": "111.111.111.115",
            "TransportAddressFamily": "IPV4",
            "PortId": 5450,
            "TransportType": "TCP",
            "Activate": false,
            "ConfigType": "Manual",
            "ConnectionStatus": "Offline",
            "FailureReason": "NONE",
            "@odata.id": "/redfish/v1/SFSS/1/DDCs('@111.111.111.115:V4::0:5450:TCP')",
            "@odata.type": "#DDCs.DDCs",
            "@odata.context": "/redfish/v1/SFSS/1/$metadata#DDCs/DDCs/$entity"
          }
        ],
        "title": "DDCGET -ID",
        "properties": {
          "Id": {
            "type": "string",
            "minLength": 1,
            "description": "Unique Identity of the Entity - Fully Qualified Name (FQN) of the Direct Discovery Controller(DDC)"
          },
          "TransportAddress": {
            "type": "string",
            "minLength": 1,
            "description": "IP address of the DDC"
          },
          "TransportAddressFamily": {
            "type": "string",
            "minLength": 1,
            "description": "IP address family; possible values include IPv4 and IPv6"
          },
          "PortId": {
            "type": "number",
            "description": "Port on which the DDC listens for CDC to connect to"
          },
          "TransportType": {
            "type": "string",
            "minLength": 1,
            "description": "Protocol used for communication with the DDC; possible value is TCP"
          },
          "Activate": {
            "type": "boolean",
            "description": "Activation of DDC that initiates a pull registration from CDC"
          },
          "ConfigType": {
            "type": "string",
            "minLength": 1,
            "description": "Configuration Type of DDC; possible values are Manual and KickStart"
          },
          "ConnectionStatus": {
            "type": "string",
            "minLength": 1,
            "description": "Status of the TCP connection between the DDC and the CDC instance. Possible values include Online/In-Progess:Connecting/Offline"
          },
          "FailureReason": {
            "type": "string",
            "minLength": 1,
            "description": "Reason for the DDC being offline"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "Id",
          "TransportAddress",
          "TransportAddressFamily",
          "PortId",
          "TransportType",
          "Activate",
          "ConfigType",
          "ConnectionStatus",
          "FailureReason",
          "@odata.id",
          "@odata.type",
          "@odata.context"
        ]
      },
      "DDC-ENUMS": {
        "description": "This model lists the supported enumerations for the DDC configuration.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "TransportAddressFamily": [
              "IPV4",
              "IPV6"
            ],
            "ConfigType": [
              "Implicit",
              "Push",
              "Pull",
              "Manual",
              "KDCC"
            ],
            "FailureReason": [
              "NONE",
              "KATO",
              "Peer Closure"
            ],
            "ConnectionStatus": [
              "Online",
              "Offline"
            ],
            "TransportType": [
              "TCP"
            ]
          }
        },
        "examples": [
          {
            "TransportAddressFamily": [
              "IPV4",
              "IPV6"
            ],
            "ConfigType": [
              "Implicit",
              "Push",
              "Pull",
              "Manual",
              "KDCC"
            ],
            "FailureReason": [
              "NONE",
              "KATO",
              "Peer Closure"
            ],
            "ConnectionStatus": [
              "Online",
              "Offline"
            ],
            "TransportType": [
              "TCP"
            ]
          }
        ],
        "title": "DDC- ENUMS",
        "properties": {
          "TransportAddressFamily": {
            "type": "array",
            "description": "IP address family; possible values include IPv4 and IPv6",
            "items": {
              "type": "object"
            }
          },
          "ConfigType": {
            "type": "array",
            "description": "Configuration Type of DDC; possible values are Manual and KickStart",
            "items": {
              "type": "object"
            }
          },
          "FailureReason": {
            "type": "array",
            "description": "Connection Failure Reason - Possible Values are NONE, Peer Closure,Dial Failure, KATO",
            "items": {
              "type": "object"
            }
          },
          "ConnectionStatus": {
            "type": "array",
            "description": "Status of the TCP connection between the DDC and the CDC instance; possible values include Online/In-Progess:Connecting/Offline",
            "items": {
              "type": "object"
            }
          },
          "TransportType": {
            "type": "array",
            "description": "Protocol used for communication with the DDC; possible value is TCP",
            "items": {
              "type": "object"
            }
          }
        },
        "required": [
          "TransportAddressFamily",
          "ConfigType",
          "FailureReason",
          "ConnectionStatus",
          "TransportType"
        ]
      },
      "ZoneDBGET": {
        "description": "This model lists information about the zone database.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "ZoneDBs": [
              {
                "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('pending')"
              },
              {
                "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('active')"
              }
            ],
            "ZoneDBs@odata.count": 2,
            "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs",
            "@odata.context": "/redfish/v1/SFSS/1/$metadata#ZoneDBs",
            "@odata.type": "#ZoneDBsCollection.ZoneDBsCollection"
          }
        },
        "examples": [
          {
            "ZoneDBs": [
              {
                "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('pending')"
              },
              {
                "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('active')"
              }
            ],
            "ZoneDBs@odata.count": 2,
            "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs",
            "@odata.context": "/redfish/v1/SFSS/1/$metadata#ZoneDBs",
            "@odata.type": "#ZoneDBsCollection.ZoneDBsCollection"
          }
        ],
        "properties": {
          "ZoneDBs": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "description": "Zone Database",
            "items": {
              "type": "object",
              "properties": {
                "@odata.id": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "@odata.id"
              ]
            }
          },
          "ZoneDBs@odata.count": {
            "type": "number",
            "description": "Number of zone databases"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "ZoneDBs",
          "ZoneDBs@odata.count",
          "@odata.id",
          "@odata.context",
          "@odata.type"
        ]
      },
      "ZoneConfigDBGET": {
        "description": "This model lists the zones present in the zoning configuration database.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "NumberZoneGroups": 1,
            "ZoneGroups": [
              "config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8"
            ],
            "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')",
            "@odata.type": "#ZoneDBs.ZoneDBs",
            "@odata.context": "/redfish/v1/SFSS/1/$metadata#ZoneDBs/ZoneDBs/$entity"
          }
        },
        "examples": [
          {
            "NumberZoneGroups": 1,
            "ZoneGroups": [
              "config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8"
            ],
            "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')",
            "@odata.type": "#ZoneDBs.ZoneDBs",
            "@odata.context": "/redfish/v1/SFSS/1/$metadata#ZoneDBs/ZoneDBs/$entity"
          }
        ],
        "title": "ZoneConfigDBGET",
        "properties": {
          "NumberZoneGroups": {
            "type": "number"
          },
          "ZoneGroups": {
            "type": "array",
            "description": "Set of zone groups",
            "items": {
              "type": "object"
            }
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "NumberZoneGroups",
          "ZoneGroups",
          "@odata.id",
          "@odata.type",
          "@odata.context"
        ]
      },
      "ZoneGroupGET": {
        "description": "This model lists the zone groups present in the zoning configuration database.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "ZoneGroups": [
              {
                "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8')"
              }
            ],
            "ZoneGroups@odata.count": 1,
            "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups?$source=config",
            "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneGroups",
            "@odata.type": "#ZoneGroupsCollection.ZoneGroupsCollection"
          }
        },
        "examples": [
          {
            "ZoneGroups": [
              {
                "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8')"
              }
            ],
            "ZoneGroups@odata.count": 1,
            "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups?$source=config",
            "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneGroups",
            "@odata.type": "#ZoneGroupsCollection.ZoneGroupsCollection"
          }
        ],
        "title": "ZoneGroupGET",
        "properties": {
          "ZoneGroups": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "description": "Set of zone groups",
            "items": {
              "type": "object",
              "properties": {
                "@odata.id": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "@odata.id"
              ]
            }
          },
          "ZoneGroups@odata.count": {
            "type": "number",
            "description": "Number of zone groups"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "ZoneGroups",
          "ZoneGroups@odata.count",
          "@odata.id",
          "@odata.context",
          "@odata.type"
        ]
      },
      "ZoneGroupGET-iD": {
        "description": "This model lists the zone group based on the zone group ID.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "ZoneDBType": "config",
            "ZoneGroupId": "config:ZoneGroup1:nqn.1988-11.com.dell:SFSS:1:20210706164404e8",
            "zoneGroupName": "ZoneGroup1",
            "OriginatorNQN": "nqn.1988-11.com.dell:SFSS:1:20210706164404e8",
            "Type": "Manual",
            "ActivateStatus": "DeActivate",
            "ActivationState": "NotActive",
            "NumberZones": 0,
            "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs(config)/ZoneGroups(config:ZoneGroup1:nqn.1988-11.com.dell:SFSS:1:20210706164404e8)",
            "@odata.type": "#ZoneGroups.ZoneGroups",
            "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs(config)/$metadata#ZoneGroups/ZoneGroups/$entity"
          }
        },
        "examples": [
          {
            "ZoneDBType": "config",
            "ZoneGroupId": "config:ZoneGroup1:nqn.1988-11.com.dell:SFSS:1:20210706164404e8",
            "zoneGroupName": "ZoneGroup1",
            "OriginatorNQN": "nqn.1988-11.com.dell:SFSS:1:20210706164404e8",
            "Type": "Manual",
            "ActivateStatus": "DeActivate",
            "ActivationState": "NotActive",
            "NumberZones": 0,
            "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs(config)/ZoneGroups(config:ZoneGroup1:nqn.1988-11.com.dell:SFSS:1:20210706164404e8)",
            "@odata.type": "#ZoneGroups.ZoneGroups",
            "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs(config)/$metadata#ZoneGroups/ZoneGroups/$entity"
          }
        ],
        "title": "ZoneGroupGET-ID",
        "properties": {
          "ZoneDBType": {
            "type": "string",
            "minLength": 1,
            "description": "Type of zone database; possible values include Config and Running"
          },
          "ZoneGroupId": {
            "type": "string",
            "minLength": 1,
            "description": "Unique zone group identifier"
          },
          "zoneGroupName": {
            "type": "string",
            "minLength": 1,
            "description": "Zone group name"
          },
          "OriginatorNQN": {
            "type": "string",
            "minLength": 1,
            "description": "NVMe Qualified Name (NQN) of the CDC instance"
          },
          "Type": {
            "type": "string",
            "minLength": 1
          },
          "ActivateStatus": {
            "type": "string",
            "minLength": 1
          },
          "ActivationState": {
            "type": "string",
            "minLength": 1
          },
          "NumberZones": {
            "type": "number",
            "description": "Number of zones within the zonegroup"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "ZoneDBType",
          "ZoneGroupId",
          "zoneGroupName",
          "OriginatorNQN",
          "Type",
          "ActivateStatus",
          "ActivationState",
          "NumberZones",
          "@odata.id",
          "@odata.type",
          "@odata.context"
        ]
      },
      "ZoneGET": {
        "description": "This model lists all the zones present in the configuration database.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "Zones": [
              {
                "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8')/Zones('config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8:DhanaZone')"
              }
            ],
            "Zones@odata.count": 1,
            "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:ZoneGrpDhana1111:')/Zones?$source=config",
            "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:ZoneGrpDhana1111:')/$metadata#Zones",
            "@odata.type": "#ZonesCollection.ZonesCollection"
          }
        },
        "examples": [
          {
            "Zones": [
              {
                "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8')/Zones('config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8:DhanaZone')"
              }
            ],
            "Zones@odata.count": 1,
            "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:ZoneGrpDhana1111:')/Zones?$source=config",
            "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:ZoneGrpDhana1111:')/$metadata#Zones",
            "@odata.type": "#ZonesCollection.ZonesCollection"
          }
        ],
        "title": "ZoneGET",
        "properties": {
          "Zones": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "description": "A set of zones",
            "items": {
              "type": "object",
              "properties": {
                "@odata.id": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "@odata.id"
              ]
            }
          },
          "Zones@odata.count": {
            "type": "number",
            "description": "Number of zones"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "Zones",
          "Zones@odata.count",
          "@odata.id",
          "@odata.context",
          "@odata.type"
        ]
      },
      "ZoneMemberGET-ID": {
        "description": "This model lists detailed information about the zone member based on the zone member ID.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "Role": "Subsystem",
            "ZoneMemberId": "config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host",
            "ZoneMemberType": "NQN",
            "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host')",
            "@odata.type": "#ZoneMembers.ZoneMembers",
            "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers/ZoneMembers/$entity"
          }
        },
        "examples": [
          {
            "Role": "Subsystem",
            "ZoneMemberId": "config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host",
            "ZoneMemberType": "NQN",
            "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host')",
            "@odata.type": "#ZoneMembers.ZoneMembers",
            "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers/ZoneMembers/$entity"
          }
        ],
        "title": "ZoneMemberGET-ID",
        "properties": {
          "Role": {
            "type": "string",
            "minLength": 1,
            "description": "Type of endpoint; possible value includes host and subsystem"
          },
          "ZoneMemberId": {
            "type": "string",
            "minLength": 1,
            "description": "Unique zone member identifier"
          },
          "ZoneMemberType": {
            "type": "string",
            "minLength": 1,
            "description": "Possible values include NVMe qualified name (NQN) and Fully Qualified Name (FQN)"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "Role",
          "ZoneMemberId",
          "ZoneMemberType",
          "@odata.id",
          "@odata.type",
          "@odata.context"
        ]
      },
      "ZoneMemberGET": {
        "description": "This model lists all the configured zone members. ",
        "type": "object",
        "x-examples": {
          "example-1": {
            "ZoneMembers": [
              {
                "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3000')"
              },
              {
                "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:AliasMemberIdDhana')"
              },
              {
                "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host')"
              }
            ],
            "ZoneMembers@odata.count": 3,
            "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers?$source=config",
            "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers",
            "@odata.type": "#ZoneMembersCollection.ZoneMembersCollection"
          }
        },
        "examples": [
          {
            "ZoneMembers": [
              {
                "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3000')"
              },
              {
                "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:AliasMemberIdDhana')"
              },
              {
                "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host')"
              }
            ],
            "ZoneMembers@odata.count": 3,
            "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers?$source=config",
            "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers",
            "@odata.type": "#ZoneMembersCollection.ZoneMembersCollection"
          }
        ],
        "title": "ZoneMemberGET",
        "properties": {
          "ZoneMembers": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "description": "A set of zone members",
            "items": {
              "type": "object",
              "properties": {
                "@odata.id": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "@odata.id"
              ]
            }
          },
          "ZoneMembers@odata.count": {
            "type": "number",
            "description": "Number of zone members"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "ZoneMembers",
          "ZoneMembers@odata.count",
          "@odata.id",
          "@odata.context",
          "@odata.type"
        ]
      },
      "ZoneMemberGET-EXPAND": {
        "description": "This model lists detailed information about all the configured zone members.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "ZoneMembers": [
              {
                "Role": "Subsystem",
                "ZoneMemberId": "config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3000",
                "ZoneMemberType": "FullQualifiedName",
                "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3000')",
                "@odata.type": "#ZoneMembers.ZoneMembers",
                "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers/ZoneMembers/$entity"
              },
              {
                "Role": "Subsystem",
                "ZoneMemberId": "config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:AliasMemberIdDhana",
                "ZoneMemberType": "ZoneAlias",
                "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:AliasMemberIdDhana')",
                "@odata.type": "#ZoneMembers.ZoneMembers",
                "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers/ZoneMembers/$entity"
              },
              {
                "Role": "Subsystem",
                "ZoneMemberId": "config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host",
                "ZoneMemberType": "NQN",
                "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host')",
                "@odata.type": "#ZoneMembers.ZoneMembers",
                "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers/ZoneMembers/$entity"
              }
            ],
            "ZoneMembers@odata.count": 3,
            "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers?$source=config&$expand=ZoneMembers",
            "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers",
            "@odata.type": "#ZoneMembersCollection.ZoneMembersCollection"
          }
        },
        "examples": [
          {
            "ZoneMembers": [
              {
                "Role": "Subsystem",
                "ZoneMemberId": "config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3000",
                "ZoneMemberType": "FullQualifiedName",
                "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3000')",
                "@odata.type": "#ZoneMembers.ZoneMembers",
                "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers/ZoneMembers/$entity"
              },
              {
                "Role": "Subsystem",
                "ZoneMemberId": "config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:AliasMemberIdDhana",
                "ZoneMemberType": "ZoneAlias",
                "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:AliasMemberIdDhana')",
                "@odata.type": "#ZoneMembers.ZoneMembers",
                "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers/ZoneMembers/$entity"
              },
              {
                "Role": "Subsystem",
                "ZoneMemberId": "config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host",
                "ZoneMemberType": "NQN",
                "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host')",
                "@odata.type": "#ZoneMembers.ZoneMembers",
                "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers/ZoneMembers/$entity"
              }
            ],
            "ZoneMembers@odata.count": 3,
            "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers?$source=config&$expand=ZoneMembers",
            "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers",
            "@odata.type": "#ZoneMembersCollection.ZoneMembersCollection"
          }
        ],
        "title": "ZoneMemberGET-Expand",
        "properties": {
          "ZoneMembers": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "description": "A set of zone members",
            "items": {
              "type": "object",
              "properties": {
                "Role": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Type of zone member; possible values include host and subsystem"
                },
                "ZoneMemberId": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Unique zone member identifier"
                },
                "ZoneMemberType": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Possible values include NVMe Qualified Name (NQN) and Fully Qualified Name (FQN)"
                },
                "@odata.id": {
                  "type": "string",
                  "minLength": 1
                },
                "@odata.type": {
                  "type": "string",
                  "minLength": 1
                },
                "@odata.context": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "Role",
                "ZoneMemberId",
                "ZoneMemberType",
                "@odata.id",
                "@odata.type",
                "@odata.context"
              ]
            }
          },
          "ZoneMembers@odata.count": {
            "type": "number",
            "description": "Number of zone members"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "ZoneMembers",
          "ZoneMembers@odata.count",
          "@odata.id",
          "@odata.context",
          "@odata.type"
        ]
      },
      "ZoneMemeber-ENUMS": {
        "description": "This model lists the supported enumerations for the zone member configuration.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "Role": [
              "ZoneAlias",
              "Host",
              "Subsystem"
            ],
            "ZoneMemberType": [
              "NQN",
              "FullQualifiedName",
              "ZoneAlias"
            ]
          }
        },
        "examples": [
          {
            "Role": [
              "ZoneAlias",
              "Host",
              "Subsystem"
            ],
            "ZoneMemberType": [
              "NQN",
              "FullQualifiedName",
              "ZoneAlias"
            ]
          }
        ],
        "title": "ZoneMembers-Enums",
        "properties": {
          "Role": {
            "type": "array",
            "description": "Type of endpoint; possible values include host and subsystem",
            "items": {
              "type": "object"
            }
          },
          "ZoneMemberType": {
            "type": "array",
            "description": "Possible values include NVMe Qualified Name (NQN) and Fully Qualified Name (FQN)",
            "items": {
              "type": "object"
            }
          }
        },
        "required": [
          "Role",
          "ZoneMemberType"
        ]
      },
      "ZoneAlias-GET-EXPAND": {
        "description": "This model lists detailed information about the configured zone aliases.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "ZoneAlias": [
              {
                "ZoneAliasId": "config:DhanaSampleAlias",
                "ZoneAliasName": "DhanaSampleAlias",
                "NumberZoneMembers": "1",
                "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')",
                "@odata.type": "#ZoneAlias.ZoneAlias",
                "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneAlias/ZoneAlias/$entity"
              },
              {
                "ZoneAliasId": "config:DhanaSampleAliasTest",
                "ZoneAliasName": "DhanaSampleAliasTest",
                "NumberZoneMembers": "1",
                "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAliasTest')",
                "@odata.type": "#ZoneAlias.ZoneAlias",
                "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneAlias/ZoneAlias/$entity"
              }
            ],
            "ZoneAlias@odata.count": 2,
            "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias?$source=config&$expand=ZoneAlias",
            "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneAlias",
            "@odata.type": "#ZoneAliasCollection.ZoneAliasCollection"
          }
        },
        "examples": [
          {
            "ZoneAlias": [
              {
                "ZoneAliasId": "config:DhanaSampleAlias",
                "ZoneAliasName": "DhanaSampleAlias",
                "NumberZoneMembers": "1",
                "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')",
                "@odata.type": "#ZoneAlias.ZoneAlias",
                "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneAlias/ZoneAlias/$entity"
              },
              {
                "ZoneAliasId": "config:DhanaSampleAliasTest",
                "ZoneAliasName": "DhanaSampleAliasTest",
                "NumberZoneMembers": "1",
                "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAliasTest')",
                "@odata.type": "#ZoneAlias.ZoneAlias",
                "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneAlias/ZoneAlias/$entity"
              }
            ],
            "ZoneAlias@odata.count": 2,
            "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias?$source=config&$expand=ZoneAlias",
            "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneAlias",
            "@odata.type": "#ZoneAliasCollection.ZoneAliasCollection"
          }
        ],
        "title": "ZoneAliasGET-Expand",
        "properties": {
          "ZoneAlias": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "ZoneAliasId": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Unique zone alias identifier"
                },
                "ZoneAliasName": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Friendly name for the zone alias"
                },
                "NumberZoneMembers": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Number of endpoints (members) in the zone alias"
                },
                "@odata.id": {
                  "type": "string",
                  "minLength": 1
                },
                "@odata.type": {
                  "type": "string",
                  "minLength": 1
                },
                "@odata.context": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "ZoneAliasId",
                "ZoneAliasName",
                "NumberZoneMembers",
                "@odata.id",
                "@odata.type",
                "@odata.context"
              ]
            }
          },
          "ZoneAlias@odata.count": {
            "type": "number",
            "description": "Number of zone aliases configured in the CDC instance"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "ZoneAlias",
          "ZoneAlias@odata.count",
          "@odata.id",
          "@odata.context",
          "@odata.type"
        ]
      },
      "ZoneAliasMemberGET": {
        "description": "This model lists the configured zone alias members.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "ZoneAliasMembers": [
              {
                "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3002')"
              },
              {
                "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host')"
              }
            ],
            "ZoneAliasMembers@odata.count": 2,
            "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers?$source=config",
            "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/$metadata#ZoneAliasMembers",
            "@odata.type": "#ZoneMembersCollection.ZoneMembersCollection"
          }
        },
        "examples": [
          {
            "ZoneAliasMembers": [
              {
                "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3002')"
              },
              {
                "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host')"
              }
            ],
            "ZoneAliasMembers@odata.count": 2,
            "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers?$source=config",
            "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/$metadata#ZoneAliasMembers",
            "@odata.type": "#ZoneMembersCollection.ZoneMembersCollection"
          }
        ],
        "title": "ZoneAliasMemberGET",
        "properties": {
          "ZoneAliasMembers": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "description": "Zone  alias members",
            "items": {
              "type": "object",
              "properties": {
                "@odata.id": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "@odata.id"
              ]
            }
          },
          "ZoneAliasMembers@odata.count": {
            "type": "number",
            "description": "Number of zone alias members"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "ZoneAliasMembers",
          "ZoneAliasMembers@odata.count",
          "@odata.id",
          "@odata.context",
          "@odata.type"
        ]
      },
      "ZoneAliasGET-ID": {
        "description": "This model lists the zone alias information based on the specified zone alias ID.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "ZoneAliasId": "config:DhanaSampleAliasTest",
            "ZoneAliasName": "DhanaSampleAliasTest",
            "NumberZoneMembers": "1",
            "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAliasTest')",
            "@odata.type": "#ZoneAlias.ZoneAlias",
            "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneAlias/ZoneAlias/$entity"
          }
        },
        "examples": [
          {
            "ZoneAliasId": "config:DhanaSampleAliasTest",
            "ZoneAliasName": "DhanaSampleAliasTest",
            "NumberZoneMembers": "1",
            "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAliasTest')",
            "@odata.type": "#ZoneAlias.ZoneAlias",
            "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneAlias/ZoneAlias/$entity"
          }
        ],
        "title": "ZoneAliasGET-ID",
        "properties": {
          "ZoneAliasId": {
            "type": "string",
            "minLength": 1,
            "description": "Unique zone alias identifier "
          },
          "ZoneAliasName": {
            "type": "string",
            "minLength": 1,
            "description": "Friendly name for the zone alias"
          },
          "NumberZoneMembers": {
            "type": "string",
            "minLength": 1,
            "description": "Number of zone members that are part of the zone alias"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "ZoneAliasId",
          "ZoneAliasName",
          "NumberZoneMembers",
          "@odata.id",
          "@odata.type",
          "@odata.context"
        ]
      },
      "ZoneAliasMemberGET-ID": {
        "description": "This model lists the zone alias member information based on the zone alias member ID. ",
        "type": "object",
        "x-examples": {
          "example-1": {
            "ZoneAliasMemberId": "config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host",
            "ZoneAliasMemberType": "NQN",
            "Role": "Host",
            "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host')",
            "@odata.type": "#ZoneAliasMembers.ZoneAliasMembers",
            "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/$metadata#ZoneAliasMembers/ZoneAliasMembers/$entity"
          }
        },
        "examples": [
          {
            "ZoneAliasMemberId": "config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host",
            "ZoneAliasMemberType": "NQN",
            "Role": "Host",
            "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host')",
            "@odata.type": "#ZoneAliasMembers.ZoneAliasMembers",
            "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/$metadata#ZoneAliasMembers/ZoneAliasMembers/$entity"
          }
        ],
        "title": "ZoneAliasMemberGET-ID",
        "properties": {
          "ZoneAliasMemberId": {
            "type": "string",
            "minLength": 1,
            "description": "Unique identifier of the zone alias member (host or subsystem)"
          },
          "ZoneAliasMemberType": {
            "type": "string",
            "minLength": 1,
            "description": "Type of endpoint; possible values include host and subsystem"
          },
          "Role": {
            "type": "string",
            "minLength": 1
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "ZoneAliasMemberId",
          "ZoneAliasMemberType",
          "Role",
          "@odata.id",
          "@odata.type",
          "@odata.context"
        ]
      },
      "ZoneAliasMemberGET-EXPAND": {
        "description": "This model lists detailed information about all the zone alias members.",
        "type": "object",
        "properties": {
          "ZoneAliasMembers": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "required": [
                "ZoneAliasMemberType",
                "ZoneAliasMemberId",
                "Role",
                "@odata.id",
                "@odata.type",
                "@odata.context"
              ],
              "properties": {
                "ZoneAliasMemberType": {
                  "type": "string",
                  "minLength": 1
                },
                "ZoneAliasMemberId": {
                  "type": "string",
                  "minLength": 1
                },
                "Role": {
                  "type": "string",
                  "minLength": 1
                },
                "@odata.id": {
                  "type": "string",
                  "minLength": 1
                },
                "@odata.type": {
                  "type": "string",
                  "minLength": 1
                },
                "@odata.context": {
                  "type": "string",
                  "minLength": 1
                }
              }
            }
          },
          "ZoneAliasMembers@odata.count": {
            "type": "number"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "ZoneAliasMembers",
          "ZoneAliasMembers@odata.count",
          "@odata.id",
          "@odata.context",
          "@odata.type"
        ],
        "x-examples": {
          "example-1": {
            "ZoneAliasMembers": [
              {
                "ZoneAliasMemberType": "FullQualifiedName",
                "ZoneAliasMemberId": "config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3002",
                "Role": "Host",
                "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3002')",
                "@odata.type": "#ZoneAliasMembers.ZoneAliasMembers",
                "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/$metadata#ZoneAliasMembers/ZoneAliasMembers/$entity"
              },
              {
                "ZoneAliasMemberId": "config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host",
                "ZoneMemberType": "NQN",
                "Role": "Host",
                "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host')",
                "@odata.type": "#ZoneAliasMembers.ZoneAliasMembers",
                "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/$metadata#ZoneAliasMembers/ZoneAliasMembers/$entity"
              }
            ],
            "ZoneAliasMembers@odata.count": 2,
            "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers?$source=config&$expand=ZoneAliasMembers",
            "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/$metadata#ZoneAliasMembers",
            "@odata.type": "#ZoneMembersCollection.ZoneMembersCollection"
          }
        },
        "examples": [
          {
            "ZoneAliasMembers": [
              {
                "ZoneAliasMemberType": "FullQualifiedName",
                "ZoneAliasMemberId": "config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3002",
                "Role": "Host",
                "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3002')",
                "@odata.type": "#ZoneAliasMembers.ZoneAliasMembers",
                "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/$metadata#ZoneAliasMembers/ZoneAliasMembers/$entity"
              },
              {
                "ZoneAliasMemberId": "config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host",
                "ZoneMemberType": "NQN",
                "Role": "Host",
                "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host')",
                "@odata.type": "#ZoneAliasMembers.ZoneAliasMembers",
                "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/$metadata#ZoneAliasMembers/ZoneAliasMembers/$entity"
              }
            ],
            "ZoneAliasMembers@odata.count": 2,
            "@odata.id": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers?$source=config&$expand=ZoneAliasMembers",
            "@odata.context": "/redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/$metadata#ZoneAliasMembers",
            "@odata.type": "#ZoneMembersCollection.ZoneMembersCollection"
          }
        ],
        "title": "ZoneAliasMemberGET-EXPAND"
      },
      "GlobalPolicies-ENUMS": {
        "description": "This model lists the supported enumerations for the global policy configuration.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "ZoningPolicy": [
              "Enable",
              "Disable"
            ],
            "NameServerEntityPurgeTOV": [
              "NoTimeout",
              "5Sec",
              "4Hr",
              "8Hr",
              "24Hr",
              "48Hr",
              "10Min"
            ]
          }
        },
        "examples": [
          {
            "ZoningPolicy": [
              "Enable",
              "Disable"
            ],
            "NameServerEntityPurgeTOV": [
              "NoTimeout",
              "5Sec",
              "4Hr",
              "8Hr",
              "24Hr",
              "48Hr",
              "10Min"
            ]
          }
        ],
        "title": "GlobalPolicies-ENUMS",
        "properties": {
          "ZoningPolicy": {
            "type": "array",
            "description": "Global zoning policy that allows all hosts to communicate with all subsystems; disabled by default",
            "items": {
              "type": "object"
            }
          },
          "NameServerEntityPurgeTOV": {
            "type": "array",
            "description": "Timeout value to remove endpoints (hosts or subsystems) that have lost connection with the CDC ",
            "items": {
              "type": "object"
            }
          }
        },
        "required": [
          "ZoningPolicy",
          "NameServerEntityPurgeTOV"
        ]
      },
      "GlobalPoliciesGET": {
        "description": "This model lists all the configured global policies.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "ZoningPolicy": "Enable",
            "NameServerEntityPurgeTOV": "4Hr",
            "@odata.id": "/redfish/v1/stfs/1/GlobalPolicies",
            "@odata.type": "#GlobalPolicies.GlobalPolicies",
            "@odata.context": "/redfish/v1/stfs/1/$metadata#GlobalPolicies/GlobalPolicies/$entity"
          }
        },
        "examples": [
          {
            "ZoningPolicy": "Enable",
            "NameServerEntityPurgeTOV": "4Hr",
            "@odata.id": "/redfish/v1/stfs/1/GlobalPolicies",
            "@odata.type": "#GlobalPolicies.GlobalPolicies",
            "@odata.context": "/redfish/v1/stfs/1/$metadata#GlobalPolicies/GlobalPolicies/$entity"
          }
        ],
        "title": "GlobalPoliciesGET",
        "properties": {
          "ZoningPolicy": {
            "type": "string",
            "minLength": 1,
            "description": "Global zoning policy that allows all hosts to communicate with all subsystems; disabled by default"
          },
          "NameServerEntityPurgeTOV": {
            "type": "string",
            "minLength": 1,
            "description": "Timeout value to remove endpoints (hosts or subsystems) that have lost connection with the CDC "
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "ZoningPolicy",
          "NameServerEntityPurgeTOV",
          "@odata.id",
          "@odata.type",
          "@odata.context"
        ]
      },
      "DDCPOST": {
        "description": "This model configures a Direct Discovery Controller (DDC).",
        "type": "object",
        "properties": {
          "TransportAddress": {
            "type": "string",
            "minLength": 1
          },
          "TransportAddressFamily": {
            "type": "string",
            "minLength": 1
          },
          "PortId": {
            "type": "number"
          },
          "TransportType": {
            "type": "string",
            "minLength": 1
          },
          "Activate": {
            "type": "boolean"
          }
        },
        "required": [
          "TransportAddress",
          "TransportAddressFamily",
          "PortId",
          "TransportType",
          "Activate"
        ],
        "x-examples": {
          "example-1": {
            "TransportAddress": "111.111.111.115",
            "TransportAddressFamily": "IPV4",
            "PortId": 5450,
            "TransportType": "TCP",
            "Activate": true
          }
        },
        "title": "DDCPOST",
        "examples": [
          {
            "TransportAddress": "111.111.111.115",
            "TransportAddressFamily": "IPV4",
            "PortId": 5450,
            "TransportType": "TCP",
            "Activate": true
          }
        ]
      },
      "DDCPUT": {
        "description": "This model updates DDC configuration.",
        "type": "object",
        "properties": {
          "Activate": {
            "type": "boolean"
          }
        },
        "required": [
          "Activate"
        ],
        "x-examples": {
          "example-1": {
            "Activate": false
          }
        },
        "examples": [
          {
            "Activate": false
          }
        ],
        "title": "DDCPUT"
      },
      "HostPOST": {
        "description": "This model configures a host.",
        "type": "object",
        "properties": {
          "NQN": {
            "type": "string",
            "minLength": 1
          },
          "TransportAddress": {
            "type": "string",
            "minLength": 1
          },
          "TransportAddressFamily": {
            "type": "string",
            "minLength": 1
          },
          "TransportType": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "NQN",
          "TransportAddress",
          "TransportAddressFamily",
          "TransportType"
        ],
        "x-examples": {
          "example-1": {
            "NQN": "nqn.2014-08.org.nvmexpress:uuid:host",
            "TransportAddress": "11.22.33.44",
            "TransportAddressFamily": "IPV4",
            "TransportType": "TCP"
          }
        },
        "examples": [
          {
            "NQN": "nqn.2014-08.org.nvmexpress:uuid:host",
            "TransportAddress": "11.22.33.44",
            "TransportAddressFamily": "IPV4",
            "TransportType": "TCP"
          }
        ],
        "title": "HostPOST"
      },
      "SubsystemPOST": {
        "description": "This model configures a subsystem.",
        "type": "object",
        "properties": {
          "NQN": {
            "type": "string",
            "minLength": 1
          },
          "TransportAddress": {
            "type": "string",
            "minLength": 1
          },
          "TransportAddressFamily": {
            "type": "string",
            "minLength": 1
          },
          "PortId": {
            "type": "number"
          },
          "TransportType": {
            "type": "string",
            "minLength": 1
          },
          "TransportServiceId": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "NQN",
          "TransportAddress",
          "TransportAddressFamily",
          "PortId",
          "TransportType",
          "TransportServiceId"
        ],
        "x-examples": {
          "example-1": {
            "NQN": "nqn.2014-08.org.nvmexpress:uuid:subsystem",
            "TransportAddress": "1.1.1.1",
            "TransportAddressFamily": "IPV4",
            "PortId": 5450,
            "TransportType": "TCP",
            "TransportServiceId": "900"
          }
        },
        "examples": [
          {
            "NQN": "nqn.2014-08.org.nvmexpress:uuid:subsystem",
            "TransportAddress": "1.1.1.1",
            "TransportAddressFamily": "IPV4",
            "PortId": 5450,
            "TransportType": "TCP",
            "TransportServiceId": "900"
          }
        ],
        "title": "SubsystemPOST"
      },
      "ZoneGroupPOST": {
        "description": "This model configures a zone group.",
        "type": "object",
        "properties": {
          "ZoneDBType": {
            "type": "string",
            "minLength": 1
          },
          "ZoneGroupName": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "ZoneDBType",
          "ZoneGroupName"
        ],
        "x-examples": {
          "example-1": {
            "ZoneDBType": "config",
            "ZoneGroupName": "ZoneGrpDhana1111"
          }
        },
        "examples": [
          {
            "ZoneDBType": "config",
            "ZoneGroupName": "ZoneGrpDhana1111"
          }
        ],
        "title": "ZoneGroup POST"
      },
      "ZoneGroupPUT": {
        "description": "This model updates zone group configuration.",
        "type": "object",
        "properties": {
          "ActivateStatus": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "ActivateStatus"
        ],
        "x-examples": {
          "example-1": {
            "ActivateStatus": "DeActivate"
          }
        },
        "examples": [
          {
            "ActivateStatus": "DeActivate"
          }
        ],
        "title": "ZoneGroupPUT"
      },
      "ZonePOST-Payload": {
        "description": "This model configures a zone.",
        "type": "object",
        "properties": {
          "ZoneName": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "ZoneName"
        ],
        "x-examples": {
          "example-1": {
            "ZoneName": "DhanaZone"
          }
        },
        "examples": [
          {
            "ZoneName": "DhanaZone"
          }
        ],
        "title": "ZonePOST"
      },
      "ZoneMemberPOST-Payload": {
        "description": "This model configures a zone member.",
        "type": "object",
        "properties": {
          "ZoneMemberId": {
            "type": "string",
            "minLength": 1
          },
          "ZoneMemberType": {
            "type": "string",
            "minLength": 1
          },
          "Role": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "ZoneMemberId",
          "ZoneMemberType",
          "Role"
        ],
        "x-examples": {
          "example-1": {
            "ZoneMemberId": "nqn.2014-08.org.nvmexpress:uuid:host",
            "ZoneMemberType": "NQN",
            "Role": "Host"
          }
        },
        "examples": [
          {
            "ZoneMemberId": "nqn.2014-08.org.nvmexpress:uuid:host",
            "ZoneMemberType": "NQN",
            "Role": "Host"
          },
          {
            "ZoneMemberId": "nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3000",
            "ZoneMemberType": "FullQualifiedName",
            "Role": "Host"
          }
        ],
        "title": "ZoneMemberPOST"
      },
      "ZoneMemberPUT-Payload": {
        "description": "This model updates zone member configuration.",
        "type": "object",
        "properties": {
          "Role": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "Role"
        ],
        "x-examples": {
          "example-1": {
            "Role": "Subsystem"
          }
        },
        "examples": [
          {
            "Role": "Subsystem"
          }
        ],
        "title": "ZoneMemberPUT"
      },
      "ZoneAliasPOST-Payload": {
        "description": "This model configures a zone alias.",
        "type": "object",
        "properties": {
          "ZoneDBType": {
            "type": "string",
            "minLength": 1
          },
          "ZoneAliasName": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "ZoneDBType",
          "ZoneAliasName"
        ],
        "x-examples": {
          "example-1": {
            "ZoneDBType": "config",
            "ZoneAliasName": "DhanaSampleAlias123"
          }
        },
        "examples": [
          {
            "ZoneDBType": "config",
            "ZoneAliasName": "DhanaSampleAlias123"
          }
        ],
        "title": "ZoneAliasPOST"
      },
      "ZoneAliasMemberPOST-Payload": {
        "description": "This model configures a zone alias member.",
        "type": "object",
        "properties": {
          "ZoneAliasMemberId": {
            "type": "string",
            "minLength": 1
          },
          "ZoneAliasMemberType": {
            "type": "string",
            "minLength": 1
          },
          "Role": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "ZoneAliasMemberId",
          "ZoneAliasMemberType",
          "Role"
        ],
        "x-examples": {
          "example-1": {
            "ZoneAliasMemberId": "nqn.2014-08.org.nvmexpress:uuid:host",
            "ZoneAliasMemberType": "NQN",
            "Role": "Host"
          }
        },
        "examples": [
          {
            "ZoneAliasMemberId": "nqn.2014-08.org.nvmexpress:uuid:host",
            "ZoneAliasMemberType": "NQN",
            "Role": "Host"
          },
          {
            "ZoneAliasMemberId": "nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3002",
            "ZoneAliasMemberType": "FullQualifiedName",
            "Role": "Subsystem"
          }
        ],
        "title": "ZoneAliasMemberPOST"
      },
      "ZoneAliasMemberPUT-Payload": {
        "description": "This model updates a zone alias member configuration.",
        "type": "object",
        "properties": {
          "Role": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "Role"
        ],
        "x-examples": {
          "example-1": {
            "Role": "Host"
          }
        },
        "examples": [
          {
            "Role": "Host"
          }
        ],
        "title": "ZoneAliasMemberPUT"
      },
      "GlobalPoliciesPOST-Payload": {
        "description": "This model configures the global policy in SFSS.",
        "type": "object",
        "properties": {
          "ZoningPolicy": {
            "type": "string",
            "minLength": 1
          },
          "NameServerEntityPurgeTOV": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "ZoningPolicy",
          "NameServerEntityPurgeTOV"
        ],
        "x-examples": {
          "example-1": {
            "ZoningPolicy": "Disable",
            "NameServerEntityPurgeTOV": "4Hr"
          }
        },
        "examples": [
          {
            "ZoningPolicy": "Disable",
            "NameServerEntityPurgeTOV": "4Hr"
          }
        ],
        "title": "GlobalPoliciesPOST"
      }
    },
    "securitySchemes": {
      "basic": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "API Key - 1": []
    }
  ]
}