{
  "openapi": "3.1.0",
  "info": {
    "title": "SmartFabric Storage Software Application REST APIs",
    "version": "1.0",
    "summary": "SFSS App APIs",
    "description": "REST APIs used for managing SFSS application are captured in this section."
  },
  "servers": [
    {
      "url": "http://IPAddress"
    }
  ],
  "paths": {
    "/redfish/v1/SFSSApp": {
      "parameters": [],
      "get": {
        "summary": "Get SFSS application details",
        "operationId": "Get-redfish-v1-SFSSApp",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "DeploymentModel": "StandAlone",
                      "Version": "1.0.0",
                      "@odata.id": "/redfish/v1/SFSSApp",
                      "@odata.type": "#SFSSApp.SFSSApp",
                      "@odata.context": "/redfish/v1/$metadata#SFSSApp/SFSSApp/$entity"
                    }
                  },
                  "properties": {
                    "DeploymentModel": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Deployment model"
                    },
                    "Version": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Version of the SFSS application"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "DeploymentModel",
                    "Version",
                    "@odata.id",
                    "@odata.type",
                    "@odata.context"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "DeploymentModel": "StandAlone",
                      "Version": "1.0.0",
                      "@odata.id": "/redfish/v1/SFSSApp",
                      "@odata.type": "#SFSSApp.SFSSApp",
                      "@odata.context": "/redfish/v1/$metadata#SFSSApp/SFSSApp/$entity"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [],
        "description": "This API retrieves information about the SFSS application."
      },
      "put": {
        "summary": "Upgrade SFSS application",
        "operationId": "PUT-redfish-v1-SFSSApp",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "Version": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "Version"
                  ],
                  "x-examples": {
                    "example-1": {
                      "Version": "1.2.0"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Version": "1.2.0"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API upgrades the SFSS application to the specified version.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "Version": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "Version"
                ],
                "x-examples": {
                  "example-1": {
                    "Version": "1.2.0"
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "Version": "1.2.0"
                  }
                }
              }
            }
          },
          "description": "{\n    \"Version\": \"1.2.0\"\n}"
        },
        "security": [
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/redfish/v1/SFSSApp/Licenses": {
      "parameters": [],
      "get": {
        "summary": "Get license count",
        "operationId": "Get-redfish-v1-SFSSApp-Licenses",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "Licenses": [
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/Licenses('1')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/Licenses('2')"
                        }
                      ],
                      "Licenses@odata.count": 2,
                      "@odata.id": "/redfish/v1/SFSSApp/Licenses",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#Licenses",
                      "@odata.type": "#LicensesCollection.LicensesCollection"
                    }
                  },
                  "properties": {
                    "Licenses": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "A set of licenses",
                      "items": {
                        "type": "object",
                        "properties": {
                          "@odata.id": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "@odata.id"
                        ]
                      }
                    },
                    "Licenses@odata.count": {
                      "type": "number",
                      "description": "Number of licenses"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "Licenses",
                    "Licenses@odata.count",
                    "@odata.id",
                    "@odata.context",
                    "@odata.type"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Licenses": [
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/Licenses('1')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/Licenses('2')"
                        }
                      ],
                      "Licenses@odata.count": 2,
                      "@odata.id": "/redfish/v1/SFSSApp/Licenses",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#Licenses",
                      "@odata.type": "#LicensesCollection.LicensesCollection"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "description": "This API retrieves information about the number of licenses installed in SFSS application."
      },
      "put": {
        "summary": "Accept EULA",
        "operationId": "PUT-redfish-v1-SFSSApp-Licenses",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "Identifier": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "Identifier"
                  ],
                  "x-examples": {
                    "example-1": {
                      "Identifier": "2"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Identifier": "2"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API is used to accept the End User License Agreement (EULA) for the partner license.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "Identifier": "2",
                    "EULA": "Agreed"
                  }
                },
                "properties": {
                  "Identifier": {
                    "type": "string",
                    "minLength": 1,
                    "description": "License identifier"
                  },
                  "EULA": {
                    "type": "string",
                    "minLength": 1,
                    "description": "End User License Agreement"
                  }
                },
                "required": [
                  "Identifier",
                  "EULA"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "Identifier": "2",
                    "EULA": "Agreed"
                  }
                }
              }
            }
          },
          "description": "{\n\"Identifier\": \"2\",\n\"EULA\": \"Agreed\"\n}"
        },
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": []
      },
      "post": {
        "summary": "Install a license",
        "operationId": "Post-redfish-v1-SFSSApp-Licenses",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "Identifier": "1"
                    }
                  },
                  "properties": {
                    "Identifier": {
                      "type": "string",
                      "minLength": 1,
                      "description": "License identifier"
                    }
                  },
                  "required": [
                    "Identifier"
                  ]
                },
                "examples": {
                  "Example Response for Base License.": {
                    "value": {
                      "Identifier": "1"
                    }
                  },
                  "Example Response for Partner License": {
                    "value": {
                      "Identifier": "2",
                      "EULA": "This End User License Agreement (“EULA”) is between the individual consumer or business entity that will use the Software (“You”) and the applicable entity identified in the “Licensor Table” located at www.dell.com/swlicensortable (“Licensor”).\n\nThis EULA governs Your use of: (a) the object code version of Dell branded software that is preinstalled on Dell hardware or otherwise provided to You pursuant to a purchase contract, quote, order form, invoice or online procurement process (each, an “Order”); (b) associated software license keys, if any (“License Keys”);\n(c) updates to such software (“Updates”); (d) the documentation for such software; and (e) all copies of the foregoing (collectively, “Software”). If You accept this EULA, or if You install or use the Software, then You agree to this EULA unless You already have a signed agreement with Dell Marketing L.P. or one of its affiliates (“Dell”) that includes licensing terms that govern Your use of the Software (“Pre-Existing Agreement”). If You accept this EULA or install or use the Software on behalf of a business entity, then You represent that You have authority to take those actions, and this EULA will be binding on that business entity unless the entity already has a Pre-Existing Agreement. If You do not agree to this EULA, do not install or use the Software.\n\nIf You are a business entity and You purchase Software from a third party (“Reseller”) who sublicenses the Software to You under the terms of an agreement between You and such Reseller (a “Sublicense Agreement”), then the terms of Your Sublicense Agreement with the Reseller shall govern Your use of the Software and not this EULA. Resellers may only grant rights, and must pass through conditions, consistent with this EULA. Thus, even though Your Sublicense Agreement is between you and the Reseller, by installing or using the Software, You acknowledge and agree that: (a) any license rights in the Sublicense Agreement that are greater than the license rights in this EULA shall not apply; (b) any license conditions in this EULA that are not contained in the Sublicense Agreement apply to You; (c) the limitations of liability set forth in this EULA will apply in favor of Licensor, its affiliates and suppliers despite the existence of a Sublicense Agreement; and (d) Licensor is a third-party beneficiary of the Sublicense Agreement and is entitled to exercise and enforce all of the Reseller’s rights and benefits under that Sublicense Agreement.\n\nIf You purchase Software as an individual consumer, nothing in this EULA affects your statutory rights if the laws of your state or country do not permit it to do so.\n\n1. License Grant.\n\n1.1. Right to Use. Subject to and in consideration of your full compliance with the terms and conditions of this EULA, Licensor grants to You a personal, non-exclusive license to use the Software during the period stated in the applicable Order (if no period is specified, You may use the Software perpetually). If You are an individual consumer, this license grant allows You to use the Software in connection with Your own personal use. If You are a business entity, this license grant allows You to use the Software in connection with the internal business operations of Your entity. In addition, You may make a reasonable number of copies of the Software solely as needed for backup or archival purposes. Additional license terms for certain Software may be included in the Offering Specific Terms Table located at www.dell.com/offeringspecificterms (“OST Table”), and additional terms for Software that is licensed to You for a limited time (“Subscription Software”) are located at www.dellemc.com/subscription_terms (“Subscription Terms”).\n\n1.2. Third Party Use. If You are a business entity, You may allow Your contractors (each, a “Permitted Third Party”) to use the Software solely for the purpose of providing services to You, provided that such use is in compliance with this EULA. You are liable for any breach of this EULA by any Permitted Third Party.\n\n1.3. Rights Reserved. The Software is licensed and not sold. Except for the license expressly granted in this EULA, Licensor, on behalf of itself and its affiliates and suppliers, retains all rights in and to the Software and in all related materials (“Works”). The rights in these Works are valid and protected in all forms, media and technologies existing now or hereafter developed. Any use of Works other than as expressly set forth herein is strictly prohibited.\n\n1.4. Ownership. Licensor, on behalf of itself and its affiliates, retains ownership of the Works and all related intellectual property rights. If Software is provided to You on removable media (e.g., CD, DVD or USB drive), You may own the media on which the Software is recorded.\n\n2. License Conditions.\n\n2.1. You and Your Permitted Third Parties must do the following:\n\nA. Run the Software only on the hardware for which it was intended to operate, when applicable;\nB. Use License Keys (if applicable) only from Licensor or an authorized Dell License Key provider;\nC. Treat the Software as Dell confidential information;\nD. Use the Software only on as many computers or devices that You purchased, in such configurations permitted by Dell or Licensor, and/or in accordance with the applicable unit of measure, each as may be specified on Your Order. For Software licensed via a unit of measure, the terms and descriptions of each unit of measure are located at www.dellemc.com/UOM_terms (“UOM Terms”);\nE. Abide by the export control and economic sanctions laws of the United States, the European Union and other applicable jurisdictions. Under these laws, the Software must not be used, sold, leased, exported, imported, re-exported or transferred except in compliance with such laws, including, without limitation, export licensing requirements, end user, end-use and end-destination restrictions, prohibitions on dealings with sanctioned individuals and entities, including but not limited to persons on the Office of Foreign Assets Control's Specially Designated Nationals and Blocked Persons List, or the U.S. Department of Commerce Denied Persons List. You represent and warrant that You are not the subject or target of, and that You are not located in a country or territory (including without limitation, North Korea, Cuba, Iran, Syria, and Crimea) that is the subject or target of economic sanctions of the United States, European Union or other applicable jurisdictions; and\nF. Comply with all Third Party Terms (as defined in Section 5 below).\n\n2.2. Except as otherwise permitted by this EULA or by mandatory law (meaning a law that the parties cannot change by contract), You must not, and must not allow Your Permitted Third Parties, to do the following:\n\nA. Modify or remove any proprietary notices or markings on or in the Software;\nB. Transfer License Keys to any other person or entity;\nC. Download Updates from Licensor or an authorized provider unless You have a valid support agreement;\nD. Install Updates on Enterprise Products (e.g., server, networking, storage, integrated solutions, and data protection appliances) that have gone end of service life unless Licensor otherwise agrees in writing;\nE. Install and operate counterfeit versions of Software (i.e. software provided by anyone other than Dell or an authorized representative of Dell) on Dell hardware;\nF. Violate or circumvent any technological use restrictions in the Software;\nG. Sell, loan, rent, lease, sublicense, distribute or encumber (e.g., by lien, security interest, etc.) the Software;\nH. Use any trademarks or service marks of Licensor, its affiliates or suppliers;\nI. Provide access to the Software or allow use by any third party, other than Permitted Third Parties, without Licensor's prior written consent;\nJ. Copy, republish, upload, post or transmit the Software in any way;\nK. Modify or create derivative works based upon the Software, or decompile, disassemble, reverse engineer, or otherwise attempt to derive source code from the Software, in whole or in part;\nL. Attack or attempt to undermine the security, integrity, authentication or intended operation of the Software;\nM. Use the Software on a service bureau, rental or managed services basis;\nN. Create or permit others to create Internet \"links\" to the Software or \"frame\" or \"mirror\" the Software on any other server, wireless or Internet-based device;\nO. Use the Software to create a competitive offering;\nP. Use the Software to create other software, products or technologies unless the Software contains Development Tools as described in Section 7;\nQ. Share or publish the results of any benchmarking of the Software without Dell’s prior written consent;\nR. Use the Software for high risk activities, including without limitation online control systems, or use in hazardous environments requiring fail-safe performance, such as in the operation of nuclear facilities, aircraft navigation or communications systems, air traffic control, life support, weapons systems or in any other device or system in which function or malfunction of the Software could result in death, personal injury or physical or environmental damage;\nS. Use the Software for activities related to weapons of mass destruction, including but not limited to, activities related to the design, development, production or use of nuclear materials, nuclear facilities, nuclear weapons, missiles or support of missile projects, or chemical or biological weapons; and\nT. Assign this EULA, or any right or obligation under this EULA, or delegate any performance, without Dell’s prior written consent, unless You are transferring the Software in accordance with the Transferability Section 3 below. Even if Dell consents to an assignment, You remain responsible for all obligations under this EULA that You incurred prior to the effective date of the assignment.\n\n3. Transferability. If You are an individual consumer, You may transfer the Software on a permanent basis as part of the sale or transfer of the hardware system on which the Software is loaded, provided that You retain no copies of any version of the Software. If You are a business entity, You may not transfer the Software to another person or entity without the express written permission of Dell, unless allowed by applicable law stating that transfer may not be restricted (note that a transfer fee may be charged by Dell).\n\n4. Compliance Verification. If You are a business entity, You must: (a) maintain and use systems and procedures that allow You to accurately track Your use of the Software; (b) certify to Dell in writing, at Dell’s request, that Your use of Software fully complies with this EULA, indicating the number of Software licenses deployed at that time; and (c) cooperate fully and timely with Dell and its auditors if Dell notifies You that it will conduct an audit to confirm Your compliance with this EULA. Any such audit will be conducted during normal business hours. If Dell determines that You have over-deployed Software, You agree to immediately purchase licenses at the then-current list price to bring Your use into compliance. If You over-deployed Software by 5% or more, then You agree to pay the total cost of the audit, in addition to any other liabilities You may have.\n\n5. Third Party Software. “Third Party Software” is software, including open source software, that is contained in or provided with the Software and is licensed by a third party under its own terms of use (“Third Party Terms”). Third Party Software is governed solely by the applicable Third Party Terms and not by this EULA. Third Party Terms may be provided with the Third Party Software or may be included in the OST Table. For certain open source software, the applicable Third Party Terms may entitle You to obtain the corresponding source files. You may find corresponding source files for such open source software at //opensource.dell.com/ or in the “About” or “Read Me” file of Software, or other locations that Licensor may specify.\n\n6. Free Software. “Free Software” means Software that is provided to You without additional charge (e.g., scripts that enable customer installation; code that enables You to monitor Your use of Dell products; etc.). You may only use Free Software on or with equipment or in the operating environments for which Dell has designed that Free Software to operate. Licensor may terminate any license to Free Software at any time in its sole discretion. You may not transfer Free Software to anyone else.\n\n7. Development Tools. If the Software includes development tools, such as scripting tools, APIs or sample scripts (collectively “Development Tools”), and unless there is a separate agreement between You and Dell or Licensor for the Development Tools, You may use such Development Tools to create new scripts and code for the purpose of customizing Your use of the Software (within the parameters set forth in this EULA and in the Development Tools themselves) and for no other purpose.\n\n8. Evaluation Software. This EULA does not license use of Software for evaluation purposes (“Evaluation Software”) except to the extent these terms may be invoked by the separate license terms and conditions accompanying that Evaluation Software.\n\n9. Support Services Not Included. If You purchase maintenance and support for Software, such services are identified in Your Order and will be provided under a separate services agreement.\n\n10. Termination. For Subscription Software, this EULA automatically terminates at the end of Your subscription period unless You renew Your rights. Licensor may terminate this EULA if You or a Permitted Third Party commits a material breach of this EULA and fails to cure such breach within thirty (30) days following Your receipt of notice of the breach from Dell. This right to terminate applies accordingly if Dell or the Reseller from whom You made Your purchase does not receive timely payment for the licenses to the Software or for the hardware on which the Software is loaded, if any. When this EULA terminates, all licenses granted automatically terminate and You must immediately cease use of the Software and return or destroy all copies of the Software. Except as otherwise agreed by Dell, You will not get a refund from Dell if this EULA is terminated. Rights and obligations under Sections of this EULA that, by their nature should survive, will survive termination, as well as obligations for payment.\n\n11. Warranty Disclaimer. Under this EULA, Licensor provides neither any warranties for the Software nor does it provide support for the Software. Your rights under any warranties and any support entitlements for Software acquired for a fee are solely between You and the Reseller or Dell entity from whom You procured the Software and related support, and are defined under the commercial terms agreed between You and such selling entity. Accordingly, except as otherwise offered by Dell, the Software is provided by Licensor under this EULA “As Is” without any warranties or conditions. To the maximum extent permitted by applicable law, Licensor, on behalf of itself and its affiliates and suppliers: (a) makes no express warranties or conditions related to the Software; (b) disclaims all implied warranties and conditions related to the Software, including merchantability, fitness for a particular purpose, title, and non-infringement; and (c) disclaims any warranty or condition arising by statute, operation of law, course of dealing or performance, or usage of trade. Licensor does not warrant uninterrupted or error-free operation of the Software. This Section does not affect or modify any of the statutory warranty rights that are available to consumers.\n\n12. Limitation of Liability.\n\n12.1. Limitations on Damages. The limitations, exclusions and disclaimers set forth in a Pre-Existing Agreement or Dell Terms of Sale that applies your Order (in each case, the “Order Terms”) shall apply to all disputes, claims or controversies (whether in contract, tort or otherwise) between You and Licensor or Dell related to or arising out of: (a) this EULA; (b) the breach, termination or validity of this EULA; or (c) any Orders (each, a “Dispute”). In the absence of applicable Order Terms, the terms set forth in this Section shall apply to all Disputes.\n \nThe terms of this Section are agreed allocations of risk constituting part of the consideration for Licensor’s licensing of Software to You and will apply even if there is a failure of the essential purpose of any limited remedy, and regardless of whether a party has been advised of the possibility of the liabilities. If applicable law prohibits any portion of the limits on liability stated below, the parties agree that such limitation will be automatically modified, but only to the extent required to make the limitation compliant with applicable law.\n\nA. Limitation on Direct Damages. Except for Your obligation to pay for the Software, or for Your violation of the License Grant and License Conditions set forth herein or of Licensor’s or Dell’s intellectual property rights, the total liability of You and Licensor (including Licensor’s affiliates and suppliers) arising out of any Dispute is limited to the amount You paid for the Software that is the subject of the Dispute, but excluding amounts received as reimbursement of expenses or payment of taxes. Notwithstanding anything otherwise set forth above, Licensor and its affiliates have no liability for any direct damages resulting from Your use or attempted use of Third Party Software, Free Software or Development Tools.\n\nB. Disclaimer of Certain Other Damages. Except for Your obligation to pay for the Software, or for Your violation of the License Grant and License Conditions set forth herein or of Licensor’s or Dell’s intellectual property rights, neither You nor Licensor (including Licensor’s affiliates and suppliers) shall have any liability under this EULA for special, consequential, exemplary, punitive, incidental or indirect damages, or for lost profits, loss of revenue, loss or corruption of data, loss of use or procurement of substitute products or services.\n\n12.2. Regular Backups. You are solely responsible for Your data. You must back up Your data before Licensor or a third party performs any remedial, upgrade or other work on Your production systems. You acknowledge that it is a best practice to have more than one back up copy of Your data. If applicable law prohibits exclusion of liability for lost data, then Licensor will only be liable for the cost of the typical effort to recover the lost data from Your last available back up.\n\n12.3. Limitation Period. Except as stated in this Section, all claims must be made within the period specified by applicable law. If the law allows the parties to specify a shorter period for bringing claims, or the law does not provide a time at all, then claims must be made within 18 months after the cause of action accrues.\n\n13. Additional Terms.\n\n13.1. Notices. The parties will provide all notices under this EULA in writing. Unless provided otherwise in an Order, You must provide notices to the local Dell entity in Your Order, or, if Your Order is not with a Dell entity, by e-mail to Dell_Legal_Notices@dell.com.\n\n13.2. Waiver and Severability. Failure to enforce a provision of this EULA will not constitute a waiver of that or any other provision of this EULA. If a court of competent jurisdiction determines that any part of this EULA or document that incorporates this EULA by reference is unenforceable, that ruling will not affect the validity of all remaining parts.\n\n13.3. Modifications. This EULA may only be modified in writing signed by both parties; provided, however, that Licensor may, in its sole discretion, update the Licensor Table, the OST Table, the UOM Terms and the Subscription Terms at any time. Any changes that Licensor makes to the Licensor Table, the OST Table, the UOM Terms or the Subscription Terms will only apply to Orders that occur after Licensor posts those changes online.\n \n13.4. Governing Law and Jurisdiction. If You obtained the Software directly from Dell, then the governing law and jurisdiction provisions set forth in Your Order Terms shall apply to this EULA. Otherwise the following shall apply:\n\nA. Subject to Section 13.4 D and 13.5, if You are domiciled in the United States or Canada: (1) this EULA and any Dispute is governed by the laws of the State of Texas (excluding the conflicts of law rules) and the federal laws of the United States; and (2) to the extent permitted by law, the state and federal courts located in Texas will have exclusive jurisdiction for any Dispute. Both parties agree to submit to the personal jurisdiction of the state and federal courts located within Travis or Williamson County, Texas, and agree to waive any and all objections to the exercise of jurisdiction over the parties by those courts and to venue in those courts.\n\nB. Subject to Section 13.4 D, if You are domiciled outside of the United States or Canada: (1) this EULA and any Dispute is governed by the substantive laws in force in the country in which the Licensor is located (as indicated in the Licensor Table located at www.dell.com/swlicensortable), without regard to its conflict of law rules; and (2) the exclusive place of jurisdiction for any Dispute shall be in such country.\n\nC. In any event, neither the U.N. Convention on Contracts for the International Sale of Goods, nor the Uniform Computer Information Transaction Act shall apply to this EULA or any Dispute.\n\nD. If You are an individual consumer, this Section 13.4 does not deprive You of the protection afforded to You by the provisions of mandatory consumer protections laws that are applicable to You, nor does it prevent you from seeking remedies or enforcing your rights as a consumer under such laws.\n\n13.5. Dispute Resolution and Binding Individual (non-class) Arbitration. This Section only applies if You are an individual consumer that resides in (or obtained the Software in) the United States or Canada. All Disputes shall be resolved exclusively and finally by binding individual arbitration. This means You and Licensor waive any right to litigate disputes in a court or before a jury and neither You nor Licensor shall be entitled to join, consolidate, or include any claims belonging to or alleged or arising from, by or on behalf of any third party to an arbitration brought hereunder, or to arbitrate any claim as a class action, class representative, class member, or in a private attorney general capacity. If You reside in (or obtained the Software in) the United States, the arbitration will be administered by the American Arbitration Association (AAA), or JAMS. If You reside in (or obtained the Software in) Canada, arbitration will be at ADR Chambers pursuant to the general ADR Chambers Rules for Arbitration located at www.adrchambers.com. The arbitration shall be conducted in the English language. The arbitration panel shall have exclusive authority to resolve any arbitrability issues including any dispute over this EULA or this arbitration provision’s scope, application, meaning and enforceability. The arbitration panel shall be empowered to grant whatever relief would be available in court, including without limitation preliminary relief, injunctive relief and specific performance. Any award of the arbitration panel shall be final and binding immediately when rendered, and judgment on the award may be entered in any court of competent jurisdiction. If any portion of this arbitration agreement is found unenforceable, the unenforceable portion shall be severed and the remaining arbitration terms shall be enforced (but in no event will there be a class arbitration). Consumer claimants (individuals whose transaction is intended for personal, family or household use) may elect to pursue their claims in small-claims court rather than arbitration. Licensor will be responsible for paying any individual consumer's arbitration/arbitrator fees. Notwithstanding the foregoing, Licensor may apply to any relevant government agency or any court of competent jurisdiction to preserve its rights under this EULA and to obtain any injunctive or preliminary relief, or any award of specific performance, to which it may be entitled, either against You or against a non-party; provided, however, that no such administrative or judicial authority shall have the right or power to render a judgment or award (or to enjoin the rendering of an arbitral award) for damages that may be due to or from either party under this EULA, which right and power shall be reserved exclusively to an arbitration panel proceeding in accordance herewith.\n\n13.6. Third Party Rights. Other than as expressly set out in this EULA, this EULA does not create any rights for any person who is not a party to it, and no person who is not a party to this EULA may enforce any of its terms or rely on any exclusion or limitation contained in it.\n\n13.7 Entire Agreement. You acknowledge that You have read this EULA, that You understand it, that You agree to be bound by its terms, and that this EULA, along with the Order Terms into which this EULA may be incorporated (as applicable), is the complete and exclusive statement of the agreement between You and Licensor regarding Your use of the Software. All content referenced in this EULA by hyperlink is incorporated into this EULA in its entirety and is available to You in hardcopy form upon Your request. The pre-printed terms of Your purchase order or any other document that is not issued or signed by Licensor or Dell do not apply to Software. You represent that You did not rely on any representations or statements that do not appear in this EULA when accepting this EULA.\n\n\n\n(Dell EULA rev 24FEB2020)"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API installs a license in SFSS application.",
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "LicenseContent": "Actual XML-LicenseContent",
                    "LicenseFileName": "BaseLicense.lic"
                  }
                },
                "properties": {
                  "LicenseContent": {
                    "type": "string",
                    "minLength": 1,
                    "description": "License information"
                  },
                  "LicenseFileName": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Name of the license file"
                  }
                },
                "required": [
                  "LicenseContent",
                  "LicenseFileName"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "LicenseContent": "Actual XML-LicenseContent",
                    "LicenseFileName": "BaseLicense.lic"
                  }
                }
              }
            }
          },
          "description": "{\n\n  \"LicenseContent\" :\"Actual XML-LicenseContent\",\n\n   \"LicenseFileName\": \"BaseLicense.lic\"\n\n}"
        }
      }
    },
    "/redfish/v1/SFSSApp/CDCInstanceManagers": {
      "parameters": [],
      "get": {
        "summary": "Get all CDCs",
        "operationId": "Get-redfish-v1-SFSSApp-CDCInstanceManagers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "CDCInstanceManagers": [
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/CDCInstanceManagers('1')"
                        }
                      ],
                      "CDCInstanceManagers@odata.count": 1,
                      "@odata.id": "/redfish/v1/SFSSApp/CDCInstanceManagers",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#CDCInstanceManagers",
                      "@odata.type": "#CDCInstanceManagersCollection.CDCInstanceManagersCollection"
                    }
                  },
                  "properties": {
                    "CDCInstanceManagers": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "A set of CDC instances",
                      "items": {
                        "type": "object",
                        "properties": {
                          "@odata.id": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "@odata.id"
                        ]
                      }
                    },
                    "CDCInstanceManagers@odata.count": {
                      "type": "number",
                      "description": "Number of CDC instances"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "CDCInstanceManagers",
                    "CDCInstanceManagers@odata.count",
                    "@odata.id",
                    "@odata.context",
                    "@odata.type"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "CDCInstanceManagers": [
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/CDCInstanceManagers('1')"
                        }
                      ],
                      "CDCInstanceManagers@odata.count": 1,
                      "@odata.id": "/redfish/v1/SFSSApp/CDCInstanceManagers",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#CDCInstanceManagers",
                      "@odata.type": "#CDCInstanceManagersCollection.CDCInstanceManagersCollection"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API retrieves details about all the Centralized Discovery Controller (CDC) instances configured in SFSS application.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "$expand",
            "description": "CDCInstanceManagers"
          }
        ]
      },
      "post": {
        "summary": "Configure CDC instance",
        "operationId": "Post-redfish-v1-SFSSApp-FabricManagerInfo-post",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "InstanceIdentifier": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "InstanceIdentifier"
                  ],
                  "x-examples": {
                    "example-1": {
                      "InstanceIdentifier": "1"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "InstanceIdentifier": "1"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [],
        "description": "This API creates a CDC instance.",
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "InstanceIdentifier": "1",
                    "Interfaces": [
                      "ens192"
                    ],
                    "CDCAdminState": "Enable",
                    "DiscoverySvcAdminState": "Enable"
                  }
                },
                "properties": {
                  "InstanceIdentifier": {
                    "type": "string",
                    "minLength": 1,
                    "description": "CDC instance identifier; possible values are 1 through 16"
                  },
                  "Interfaces": {
                    "type": "array",
                    "description": "Interface(s) assigned to the CDC instance",
                    "items": {
                      "type": "string"
                    }
                  },
                  "CDCAdminState": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Administrative state of the CDC instance"
                  },
                  "DiscoverySvcAdminState": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Administrative state of the discovery service"
                  }
                },
                "required": [
                  "InstanceIdentifier",
                  "Interfaces",
                  "CDCAdminState",
                  "DiscoverySvcAdminState"
                ]
              },
              "examples": {
                "This is an example payload for VM deployment.": {
                  "value": {
                    "InstanceIdentifier": "1",
                    "Interfaces": [
                      "ens192"
                    ],
                    "CDCAdminState": "Enable",
                    "DiscoverySvcAdminState": "Enable"
                  }
                }
              }
            }
          },
          "description": "{\n    \"InstanceIdentifier\": \"1\",\n    \"Interfaces\": [\"ens192\"],\n    \"CDCAdminState\":\"Enable\",\n    \"DiscoverySvcAdminState\":\"Enable\"\n}"
        }
      },
      "put": {
        "summary": "Update CDC instance",
        "operationId": "Put-redfish-v1-SFSSApp-CDCInstanceManagers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "InstanceIdentifier": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "InstanceIdentifier"
                  ],
                  "x-examples": {
                    "example-1": {
                      "InstanceIdentifier": "1"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "InstanceIdentifier": "1"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "\"InstanceIdentifier\": \"1\""
          }
        },
        "description": "This API updates CDC instance information based on the specified instance identifier.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "InstanceIdentifier": "1",
                    "Interfaces": [
                      "ens192"
                    ],
                    "CDCAdminState": "Enable",
                    "DiscoverySvcAdminState": "Disable"
                  }
                },
                "properties": {
                  "InstanceIdentifier": {
                    "type": "string",
                    "minLength": 1,
                    "description": "CDC instance identifier"
                  },
                  "Interfaces": {
                    "type": "array",
                    "description": "Interface(s) assigned to the CDC instance",
                    "items": {
                      "type": "string"
                    }
                  },
                  "CDCAdminState": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Administrative state of the CDC instance"
                  },
                  "DiscoverySvcAdminState": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Administrative state of the discovery service"
                  }
                },
                "required": [
                  "InstanceIdentifier",
                  "Interfaces",
                  "CDCAdminState",
                  "DiscoverySvcAdminState"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "InstanceIdentifier": "1",
                    "Interfaces": [
                      "ens192"
                    ],
                    "CDCAdminState": "Enable",
                    "DiscoverySvcAdminState": "Disable"
                  }
                }
              }
            }
          },
          "description": "{\n    \"InstanceIdentifier\": \"1\",\n    \"Interfaces\": [\"ens192\"],\n    \"CDCAdminState\":\"Enable\",\n    \"DiscoverySvcAdminState\":\"Disable\"\n}"
        },
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "('1')",
            "description": "InstanceIdentifier"
          }
        ]
      },
      "delete": {
        "summary": "Delete CDC instance",
        "operationId": "Delete-redfish-v1-SFSSApp-CDCInstanceManagers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "InstanceIdentifier": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "InstanceIdentifier"
                  ],
                  "x-examples": {
                    "example-1": {
                      "InstanceIdentifier": "1"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "InstanceIdentifier": "1"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API removes the specified CDC instance.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "('1')",
            "description": "InstanceIdentifier"
          }
        ],
        "security": [
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/redfish/v1/SFSSApp/CDCInstanceManagers('InstanceId')": {
      "parameters": [],
      "get": {
        "summary": "Get specific CDC information",
        "operationId": "Get-redfish-v1-SFSSApp-CDCInstanceManagers-ID",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "CDCAdminState": "Enable",
                      "DiscoverySvcAdminState": "Enable",
                      "InstanceIdentifier": "1",
                      "Interfaces": [
                        "ens161"
                      ],
                      "IpAddresses": [
                        "100.94.72.181"
                      ],
                      "@odata.id": "/redfish/v1/SFSSApp/CDCInstanceManagers(\"1\")",
                      "@odata.type": "#CDCInstanceManagers.CDCInstanceManagers",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#CDCInstanceManagers/CDCInstanceManagers/$entity"
                    }
                  },
                  "properties": {
                    "CDCAdminState": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Administrative state of the CDC instance"
                    },
                    "DiscoverySvcAdminState": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Administrative state of the discovery service"
                    },
                    "InstanceIdentifier": {
                      "type": "string",
                      "minLength": 1,
                      "description": "CDC instance identifier"
                    },
                    "Interfaces": {
                      "type": "array",
                      "description": "Interface(s) assigned to the CDC instance ",
                      "items": {
                        "type": "string"
                      }
                    },
                    "IpAddresses": {
                      "type": "array",
                      "description": "IP address assigned to the interface",
                      "items": {
                        "type": "string"
                      }
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "CDCAdminState",
                    "DiscoverySvcAdminState",
                    "InstanceIdentifier",
                    "Interfaces",
                    "IpAddresses",
                    "@odata.id",
                    "@odata.type",
                    "@odata.context"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "CDCAdminState": "Enable",
                      "DiscoverySvcAdminState": "Enable",
                      "InstanceIdentifier": "1",
                      "Interfaces": [
                        "ens161"
                      ],
                      "IpAddresses": [
                        "100.94.72.181"
                      ],
                      "@odata.id": "/redfish/v1/SFSSApp/CDCInstanceManagers('1')",
                      "@odata.type": "#CDCInstanceManagers.CDCInstanceManagers",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#CDCInstanceManagers/CDCInstanceManagers/$entity"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API retrieves information about the CDC instance based on the specified instance identifier.",
        "parameters": []
      }
    },
    "/redfish/v1/SFSSApp/SFSSImages": {
      "parameters": [],
      "get": {
        "summary": "Get all images",
        "operationId": "get-redfish-v1-SFSSApp",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "SFSSImages": [
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/SFSSImages('1.0.0')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/SFSSImages('1.0.1')"
                        }
                      ],
                      "SFSSImages@odata.count": 2,
                      "@odata.id": "/redfish/v1/SFSSApp/SFSSImages",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#SFSSImages",
                      "@odata.type": "#SFSSImagesCollection.SFSSImagesCollection"
                    }
                  },
                  "properties": {
                    "SFSSImages": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "A set of SFSS images",
                      "items": {
                        "type": "object",
                        "properties": {
                          "@odata.id": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "@odata.id"
                        ]
                      }
                    },
                    "SFSSImages@odata.count": {
                      "type": "number",
                      "description": "Number of SFSS images"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "SFSSImages",
                    "SFSSImages@odata.count",
                    "@odata.id",
                    "@odata.context",
                    "@odata.type"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "SFSSImages": [
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/SFSSImages('1.0.0')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/SFSSImages('1.0.1')"
                        }
                      ],
                      "SFSSImages@odata.count": 2,
                      "@odata.id": "/redfish/v1/SFSSApp/SFSSImages",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#SFSSImages",
                      "@odata.type": "#SFSSImagesCollection.SFSSImagesCollection"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API retrieves all the SFSS images available in the system."
      },
      "put": {
        "summary": "Upgrade application",
        "operationId": "Put-redfish-v1-SFSSApp",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "ImageId": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "ImageId"
                  ],
                  "x-examples": {
                    "example-1": {
                      "ImageId": "7cb748e4-8d52-4195-bee3-bb948190fd09"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "ImageId": "7cb748e4-8d52-4195-bee3-bb948190fd09"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API upgrades the SFSS application to the specified version from the list of available images.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "ImageServerUserName": "dell",
                    "ImageServerPassword": "New_Password",
                    "ImageServerLocation": "100.94.72.166:/home/dell/new_location/SFSS-1.2.0.deb",
                    "TransportType": "SCP"
                  }
                },
                "properties": {
                  "ImageServerUserName": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Username to access the remote server"
                  },
                  "ImageServerPassword": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Password to access the image in the remote server"
                  },
                  "ImageServerLocation": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Location of the SFSS image in the remote server; SFSS supports only IPv4 communication with remote servers"
                  },
                  "TransportType": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Transport type used to copy the image from the remote repository; possible values include SCP, SFTP, HTTP, and HTTPS"
                  }
                },
                "required": [
                  "ImageServerUserName",
                  "ImageServerPassword",
                  "ImageServerLocation",
                  "TransportType"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "ImageServerUserName": "dell",
                    "ImageServerPassword": "New_Password",
                    "ImageServerLocation": "100.94.72.166:/home/dell/new_location/SFSS-1.2.0.deb",
                    "TransportType": "SCP"
                  }
                }
              }
            }
          },
          "description": "{\n    \"ImageServerUserName\" : \"dell\",\n    \"ImageServerPassword\" : \"New_Password\",\n    \"ImageServerLocation\" : \"100.94.72.166:/home/dell/new_location/SFSS-1.2.0.deb\",\n    \"TransportType\" : \"SCP\"\n}"
        },
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "\"7cb748e4-8d52-4195-bee3-bb948190fd09\"",
            "description": "ImageId "
          }
        ]
      },
      "post": {
        "summary": "Add image",
        "operationId": "Post-redfish-v1-SFSSApp-SFSSImages",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "ImageId": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "ImageId"
                  ],
                  "x-examples": {
                    "example-1": {
                      "ImageId": "7cb748e4-8d52-4195-bee3-bb948190fd09"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "ImageId": "7cb748e4-8d52-4195-bee3-bb948190fd09"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API adds an SFSS image to the SFSS application.",
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "ImageServerUserName": "dell",
                    "ImageServerPassword": "force10",
                    "ImageServerLocation": "100.94.72.166:/home/dell/temp_images/SFSS-1.2.0.deb",
                    "TransportType": "SCP"
                  }
                },
                "properties": {
                  "ImageServerUserName": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Username to access the remote server"
                  },
                  "ImageServerPassword": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Password to access the image in the remote server"
                  },
                  "ImageServerLocation": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Location of the SFSS image in the remote server; SFSS supports only IPv4 communication with remote servers"
                  },
                  "TransportType": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Transport type used to copy the image from the remote server; possible values include SCP, SFTP, HTTP, and HTTPS"
                  }
                },
                "required": [
                  "ImageServerUserName",
                  "ImageServerPassword",
                  "ImageServerLocation",
                  "TransportType"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "ImageServerUserName": "dell",
                    "ImageServerPassword": "force10",
                    "ImageServerLocation": "100.94.72.166:/home/dell/temp_images/SFSS-1.2.0.deb",
                    "TransportType": "SCP"
                  }
                }
              }
            }
          },
          "description": ""
        }
      },
      "delete": {
        "summary": "Delete image",
        "operationId": "Delete-redfish-v1-SFSSApp-SFSSImages",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "ImageId": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "ImageId"
                  ],
                  "x-examples": {
                    "example-1": {
                      "ImageId": "7cb748e4-8d52-4195-bee3-bb948190fd09"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "ImageId": "7cb748e4-8d52-4195-bee3-bb948190fd09"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API is used to delete the specified image from the SFSS application.",
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "\"7cb748e4-8d52-4195-bee3-bb948190fd09\"",
            "description": "ImageId"
          }
        ]
      }
    },
    "/redfish/v1/SFSSApp/SFSSImages('version')": {
      "parameters": [],
      "get": {
        "summary": "Get specific image",
        "operationId": "Get-ID-redfish-v1-SFSSApp",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "ImageServerLocation": "somelocation",
                      "StatusMessage": "Download and Installation Success",
                      "ImageServerPassword": "*******",
                      "Status": "Success",
                      "TransportType": "SCP",
                      "ImageServerUserName": "",
                      "Version": "1.0.0",
                      "@odata.id": "/redfish/v1/SFSSApp/SFSSImages('1.0.0')",
                      "@odata.type": "#SFSSImages.SFSSImages",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#SFSSImages/SFSSImages/$entity"
                    }
                  },
                  "properties": {
                    "ImageServerLocation": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Location of the SFSS image in the remote server; SFSS supports only IPv4 communication with remote servers"
                    },
                    "StatusMessage": {
                      "type": "string",
                      "minLength": 1,
                      "description": "A detailed status message about the add image operation"
                    },
                    "ImageServerPassword": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Password to access the image in the remote server"
                    },
                    "Status": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Status of the add image operation"
                    },
                    "TransportType": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Transport type used to copy the image from the remote server; possible values include SCP, SFTP, HTTP, and HTTPS"
                    },
                    "ImageServerUserName": {
                      "type": "string",
                      "description": "Username to access the remote server"
                    },
                    "Version": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Version of the SFSS image"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "ImageServerLocation",
                    "StatusMessage",
                    "ImageServerPassword",
                    "Status",
                    "TransportType",
                    "ImageServerUserName",
                    "Version",
                    "@odata.id",
                    "@odata.type",
                    "@odata.context"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "ImageServerLocation": "somelocation",
                      "StatusMessage": "Download and Installation Success",
                      "ImageServerPassword": "*******",
                      "Status": "Success",
                      "TransportType": "SCP",
                      "ImageServerUserName": "",
                      "Version": "1.0.0",
                      "@odata.id": "/redfish/v1/SFSSApp/SFSSImages('1.0.0')",
                      "@odata.type": "#SFSSImages.SFSSImages",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#SFSSImages/SFSSImages/$entity"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API retrieves information about the specified SFSS image.",
        "security": [
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/redfish/v1/SFSSApp/SFSSImages/Enums": {
      "parameters": [],
      "get": {
        "summary": "Get image enums",
        "operationId": "Get-redfish-v1-SFSSApp-Enums",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "Status": [
                        "Failure",
                        "InProgress",
                        "Success",
                        "NotStarted"
                      ],
                      "TransportType": [
                        "SFTP",
                        "HTTPS",
                        "SCP",
                        "HTTP"
                      ]
                    }
                  },
                  "properties": {
                    "Status": {
                      "type": "array",
                      "description": "Status of the add image operation; possible values include Failure, InProgress, Success, and NotStarted",
                      "items": {
                        "type": "string"
                      }
                    },
                    "TransportType": {
                      "type": "array",
                      "description": "Transport type that is used to copy the SFSS image from the remote server; possible values include SCP, HTTP, HTTPS, and SFTP",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "Status",
                    "TransportType"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Status": [
                        "Failure",
                        "InProgress",
                        "Success",
                        "NotStarted"
                      ],
                      "TransportType": [
                        "SFTP",
                        "HTTPS",
                        "SCP",
                        "HTTP"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API lists all the supported enumerations for the SFSS image.",
        "security": [
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/redfish/v1/SFSSApp/Alerts": {
      "parameters": [],
      "post": {
        "summary": "Add alert",
        "operationId": "Post-redfish-v1-SFSSApp-Alerts",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "Identifier": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "Identifier"
                  ],
                  "x-examples": {
                    "example-1": {
                      "Identifier": "uuid1"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Identifier": "uuid1"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [],
        "description": "This API creates an alert in the SFSS application.",
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "Protocol": "redfish",
                    "Context": "SomeSubscription",
                    "EventTypes": [
                      "Alert"
                    ],
                    "CdcInstances": [
                      "APP"
                    ],
                    "HttpHeaders": [
                      "Authorization: Basic ZG52dXNlcjpAIThwSU1vSQ==",
                      "ExternalServerRequiredHeader: ItsValue"
                    ],
                    "Destination": "https://[ipv4/ipv6]/external/Server/eventHandler"
                  }
                },
                "properties": {
                  "Protocol": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Protocol supported for alerts; possible value is redfish"
                  },
                  "Context": {
                    "type": "string",
                    "minLength": 1
                  },
                  "EventTypes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "CdcInstances": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "HttpHeaders": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "Destination": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "Protocol",
                  "Context",
                  "EventTypes",
                  "CdcInstances",
                  "HttpHeaders",
                  "Destination"
                ]
              },
              "examples": {
                "Example.": {
                  "value": {
                    "Protocol": "redfish",
                    "Context": "SomeSubscription",
                    "EventTypes": [
                      "Alert"
                    ],
                    "CdcInstances": [
                      "APP"
                    ],
                    "HttpHeaders": [
                      "Authorization: Basic ZG52dXNlcjpAIThwSU1vSQ==",
                      "ExternalServerRequiredHeader: ItsValue"
                    ],
                    "Destination": "https://[ipv4/ipv6]/external/Server/eventHandler"
                  }
                }
              }
            }
          },
          "description": "{\n    \"Protocol\": \"redfish\",\n    \"Context\": \"SomeSubscription\",\n    \"EventTypes\": [\n\n        \"Alert\"\n\n    ],\n\n   \"CdcInstances\": [\n        \"APP\"\n    ],\n    \"HttpHeaders\": [\n        \"Authorization: Basic ZG52dXNlcjpAIThwSU1vSQ==\",\n        \"ExternalServerRequiredHeader: ItsValue\"\n    ],\n    \"Destination\": \"https://[ipv4/ipv6]/external/Server/eventHandler\"\n\n}"
        }
      }
    },
    "/redfish/v1/SFSSApp/Alerts('uuid')": {
      "parameters": [],
      "put": {
        "summary": "Update alert",
        "operationId": "Put-redfish-v1-SFSSApp-Alerts",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "Identifier": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "Identifier"
                  ],
                  "x-examples": {
                    "example-1": {
                      "Identifier": "uuid1"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Identifier": "uuid1"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "\"InstanceIdentifier\": \"1\""
          }
        },
        "description": "This API updates an existing alert in the SFSS application based on the alert identifier.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "Protocol": {
                    "type": "string",
                    "minLength": 1
                  },
                  "Identifier": {
                    "type": "string",
                    "minLength": 1
                  },
                  "Context": {
                    "type": "string",
                    "minLength": 1
                  },
                  "EventTypes": {
                    "type": "array",
                    "items": {
                      "required": [],
                      "properties": {}
                    }
                  },
                  "CdcInstances": {
                    "type": "array",
                    "items": {
                      "required": [],
                      "properties": {}
                    }
                  },
                  "HttpHeaders": {
                    "type": "array",
                    "items": {
                      "required": [],
                      "properties": {}
                    }
                  },
                  "Destination": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "Protocol",
                  "Identifier",
                  "Context",
                  "EventTypes",
                  "CdcInstances",
                  "HttpHeaders",
                  "Destination"
                ],
                "x-examples": {
                  "example-1": {
                    "Protocol": "redfish",
                    "Identifier": "uuid",
                    "Context": "NewSubscription",
                    "EventTypes": [
                      "Alert"
                    ],
                    "CdcInstances": [
                      "APP"
                    ],
                    "HttpHeaders": [
                      "Authorization: Basic ZG52dXNlcjpAIThwSU1vSQ==",
                      "ExternalServerRequiredHeader: ItsValue"
                    ],
                    "Destination": "https://[ipv4/ipv6]/external/Server/NeweventHandler"
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "Protocol": "redfish",
                    "Identifier": "uuid",
                    "Context": "NewSubscription",
                    "EventTypes": [
                      "Alert"
                    ],
                    "CdcInstances": [
                      "APP"
                    ],
                    "HttpHeaders": [
                      "Authorization: Basic ZG52dXNlcjpAIThwSU1vSQ==",
                      "ExternalServerRequiredHeader: ItsValue"
                    ],
                    "Destination": "https://[ipv4/ipv6]/external/Server/NeweventHandler"
                  }
                }
              }
            }
          },
          "description": "{\n    \"Protocol\": \"redfish\",\n\n    \"Identifier\": \"uuid\",\n\n    \"Context\": \"NewSubscription\",\n    \"EventTypes\": [\n\n        \"Alert\"\n\n    ],\n   \"CdcInstances\": [\n        \"APP\"\n    ],\n\n    \"HttpHeaders\": [\n        \"Authorization: Basic ZG52dXNlcjpAIThwSU1vSQ==\",\n        \"ExternalServerRequiredHeader: ItsValue\"\n    ],\n    \"Destination\": \"https://[ipv4/ipv6]/external/Server/NeweventHandler\"\n\n}"
        },
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "(\"uuid\")",
            "description": "Alert UUID"
          }
        ]
      },
      "delete": {
        "summary": "Delete alert",
        "operationId": "Delete-redfish-v1-SFSSApp-AlertsCDCInstanceManagers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "Identifier": "uuid1"
                    }
                  },
                  "properties": {
                    "Identifier": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Alert identifier"
                    }
                  },
                  "required": [
                    "Identifier"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Identifier": "uuid1"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API removes the specified alert from the SFSS application based on the alert identifier.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "(\"uuid\")",
            "description": "Alert UUID"
          }
        ],
        "security": [
          {
            "BasicAuth": []
          }
        ]
      },
      "get": {
        "summary": "Get specific alert",
        "operationId": "get-redfish-v1-SFSSApp-Alerts('AlertId')",
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "CdcInstances": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "required": [],
                        "properties": {}
                      }
                    },
                    "Identifier": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "Protocol": {
                      "type": "string",
                      "minLength": 1
                    },
                    "Context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "EventTypes": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "required": [],
                        "properties": {}
                      }
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "HttpHeaders": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "required": [],
                        "properties": {}
                      }
                    },
                    "Destination": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "CdcInstances",
                    "Identifier",
                    "@odata.context",
                    "@odata.id",
                    "Protocol",
                    "Context",
                    "EventTypes",
                    "@odata.type",
                    "HttpHeaders",
                    "Destination"
                  ],
                  "x-examples": {
                    "example-1": {
                      "CdcInstances": [
                        {}
                      ],
                      "Identifier": "string",
                      "@odata.context": "string",
                      "@odata.id": "string",
                      "Protocol": "string",
                      "Context": "string",
                      "EventTypes": [
                        {}
                      ],
                      "@odata.type": "string",
                      "HttpHeaders": [
                        {}
                      ],
                      "Destination": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "CdcInstances": [
                        {}
                      ],
                      "Identifier": "string",
                      "@odata.context": "string",
                      "@odata.id": "string",
                      "Protocol": "string",
                      "Context": "string",
                      "EventTypes": [
                        {}
                      ],
                      "@odata.type": "string",
                      "HttpHeaders": [
                        {}
                      ],
                      "Destination": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API retrieves information about a specific alert based on the alert identifier."
      }
    },
    "/redfish/v1/SFSSApp/CDCInstanceManagers/Enums": {
      "parameters": [],
      "get": {
        "summary": "Get CDC enums",
        "operationId": "get-redfish-v1-SFSSApp-CDCInstanceManagers-Enums",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "CDCAdminState": [
                        "Enable",
                        "Disable"
                      ],
                      "DiscoverySvcAdminState": [
                        "Enable",
                        "Disable"
                      ],
                      "Status": [
                        "INIT",
                        "INPROGRESS",
                        "SUCCESS",
                        "FAIL",
                        "ABORT"
                      ]
                    }
                  },
                  "properties": {
                    "CDCAdminState": {
                      "type": "array",
                      "description": "Administrative state of the CDC instance",
                      "items": {
                        "type": "string"
                      }
                    },
                    "DiscoverySvcAdminState": {
                      "type": "array",
                      "description": "Administrative state of the discovery service",
                      "items": {
                        "type": "string"
                      }
                    },
                    "Status": {
                      "type": "array",
                      "description": "Status of Add CDC operation; possible values include INIT, INPROGRESS, SUCCESS, FAIL, and ABORT ",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "CDCAdminState",
                    "DiscoverySvcAdminState",
                    "Status"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "CDCAdminState": [
                        "Enable",
                        "Disable"
                      ],
                      "DiscoverySvcAdminState": [
                        "Enable",
                        "Disable"
                      ],
                      "Status": [
                        "INIT",
                        "INPROGRESS",
                        "SUCCESS",
                        "FAIL",
                        "ABORT"
                      ]
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "{\n    \"CDCAdminState\": [\n        \"Enable\",\n        \"Disable\"\n    ],\n    \"DiscoverySvcAdminState\": [\n        \"Enable\",\n        \"Disable\"\n    ],\n    \"Status\": [\n        \"INIT\",\n        \"INPROGRESS\",\n        \"SUCCESS\",\n        \"FAIL\",\n        \"ABORT\"\n    ]\n}"
          }
        },
        "description": "This API retrieves all the supported enumerations for the CDC instance manager.",
        "parameters": [],
        "security": [
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/redfish/v1/SFSSApp/AuthenticationSequence": {
      "get": {
        "summary": "Get authentication sequence",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "AuthenticationSequence": [
                        "tacacs+",
                        "local"
                      ],
                      "@odata.id": "/redfish/v1/SFSSApp/AuthenticationSequence",
                      "@odata.type": "#AuthenticationSequence.AuthenticationSequence",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#AuthenticationSequence/AuthenticationSequence/$entity"
                    }
                  },
                  "properties": {
                    "AuthenticationSequence": {
                      "type": "array",
                      "description": "Defines a set of authentication servers (local and remote) configured in SFSS and the order in which SFSS looks up user information in these servers",
                      "items": {
                        "type": "string"
                      }
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "AuthenticationSequence",
                    "@odata.id",
                    "@odata.type",
                    "@odata.context"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "AuthenticationSequence": [
                        "tacacs+",
                        "local"
                      ],
                      "@odata.id": "/redfish/v1/SFSSApp/AuthenticationSequence",
                      "@odata.type": "#AuthenticationSequence.AuthenticationSequence",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#AuthenticationSequence/AuthenticationSequence/$entity"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "Get-redfish-v1-SFSSApp-AuthenticationSequence",
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "description": "This API retrieves authentication sequence information for SFSS application authentication."
      },
      "post": {
        "summary": "Add authentication sequence",
        "operationId": "Post-redfish-v1-SFSSApp-AuthenticationSequence",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "AuthenticationSequence": "tacacs+,local"
                    }
                  },
                  "properties": {
                    "AuthenticationSequence": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Defines a set of authentication servers (local and remote) configured in SFSS and the order in which SFSS looks up user information in these servers"
                    }
                  },
                  "required": [
                    "AuthenticationSequence"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "AuthenticationSequence": "tacacs+,local"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API creates an authentication sequence in SFSS application.",
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "AuthenticationSequence": [
                      "tacacs+",
                      "local"
                    ]
                  }
                },
                "properties": {
                  "AuthenticationSequence": {
                    "type": "array",
                    "description": "Defines a set of authentication servers (local and remote) configured in SFSS and the order in which SFSS looks up user information in these servers",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "AuthenticationSequence"
                ]
              },
              "examples": {
                "Valid values are : local , radius , tacacs+": {
                  "value": {
                    "AuthenticationSequence": [
                      "tacacs+",
                      "local"
                    ]
                  }
                }
              }
            }
          },
          "description": "{\n\n\"AuthenticationSequence\": [\n        \"tacacs+\",\n        \"local\"\n    ]\n\n}"
        }
      }
    },
    "/redfish/v1/SFSSApp/TacacsServers": {
      "get": {
        "summary": "Get all TACACS+ servers",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "TacacsServers": [
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/TacacsServers('111.1.1.1')"
                        }
                      ],
                      "TacacsServers@odata.count": 1,
                      "@odata.id": "/redfish/v1/SFSSApp/TacacsServers",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#TacacsServers",
                      "@odata.type": "#TacacsServersCollection.TacacsServersCollection"
                    }
                  },
                  "properties": {
                    "TacacsServers": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "A set of TACACS+ servers",
                      "items": {
                        "type": "object",
                        "properties": {
                          "@odata.id": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "@odata.id"
                        ]
                      }
                    },
                    "TacacsServers@odata.count": {
                      "type": "number",
                      "description": "Number of TACACS+ servers configured up to a maximum of 10 servers"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "TacacsServers",
                    "TacacsServers@odata.count",
                    "@odata.id",
                    "@odata.context",
                    "@odata.type"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "TacacsServers": [
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/TacacsServers('111.1.1.1')"
                        }
                      ],
                      "TacacsServers@odata.count": 1,
                      "@odata.id": "/redfish/v1/SFSSApp/TacacsServers",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#TacacsServers",
                      "@odata.type": "#TacacsServersCollection.TacacsServersCollection"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "Get-redfish-v1-SFSSApp-TacacsServers",
        "description": "This API retrieves TACACS+ server information configured in the SFSS application. ",
        "security": [
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "summary": "Configure TACACS+ server",
        "operationId": "Post-redfish-v1-SFSSApp-TacacsServers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "TacacsServer": "200.1.1.1"
                    }
                  },
                  "properties": {
                    "TacacsServer": {
                      "type": "string",
                      "minLength": 1,
                      "description": "IP address of the TACACS+ server"
                    }
                  },
                  "required": [
                    "TacacsServer"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "TacacsServer": "200.1.1.1"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API configures a TACACS+ server in SFSS application.",
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "ServerIp": "200.1.1.1",
                    "ServerPass": "xxxxxx"
                  }
                },
                "properties": {
                  "ServerIp": {
                    "type": "string",
                    "minLength": 1,
                    "description": "IP address of the TACACS+ server; SFSS supports only IPv4 communication with remote servers"
                  },
                  "ServerPass": {
                    "type": "string",
                    "minLength": 1,
                    "description": "TACACS+ server password"
                  }
                },
                "required": [
                  "ServerIp",
                  "ServerPass"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "ServerIp": "200.1.1.1",
                    "ServerPass": "xxxxxx"
                  }
                }
              }
            }
          },
          "description": "{\n\n\"ServerIp\": \"200.1.1.1\",\n\"ServerPass\": \"xxxxxx\"\n\n}"
        }
      }
    },
    "/redfish/v1/SFSSApp/TacacsServers('IP')": {
      "get": {
        "summary": "Get specific TACACS+ server",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "ServerIp": "111.1.1.1",
                      "ServerPass": "xxxxxx",
                      "@odata.id": "/redfish/v1/SFSSApp/TacacsServers('111.1.1.1')",
                      "@odata.type": "#TacacsServers.TacacsServers",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#TacacsServers/TacacsServers/$entity"
                    }
                  },
                  "properties": {
                    "ServerIp": {
                      "type": "string",
                      "minLength": 1,
                      "description": "IP address of the TACACS+ server; SFSS supports only IPv4 communication with remote servers"
                    },
                    "ServerPass": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Password to access the TACACS+ server "
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "ServerIp",
                    "ServerPass",
                    "@odata.id",
                    "@odata.type",
                    "@odata.context"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "ServerIp": "111.1.1.1",
                      "ServerPass": "xxxxxx",
                      "@odata.id": "/redfish/v1/SFSSApp/TacacsServers('111.1.1.1')",
                      "@odata.type": "#TacacsServers.TacacsServers",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#TacacsServers/TacacsServers/$entity"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "Get-ID-redfish-v1-SFSSApp-TacacsServers",
        "description": "This API retrieves information about the specific TACACS+ server based on the TACACS+ server IP address.",
        "security": [
          {
            "BasicAuth": []
          }
        ]
      },
      "parameters": []
    },
    "/redfish/v1/SFSSApp/RadiusServers": {
      "get": {
        "summary": "Get all RADIUS servers",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "RadiusServers": [
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/RadiusServers('200.1.1.1')"
                        }
                      ],
                      "RadiusServers@odata.count": 1,
                      "@odata.id": "/redfish/v1/SFSSApp/RadiusServers",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#RadiusServers",
                      "@odata.type": "#RadiusServersCollection.RadiusServersCollection"
                    }
                  },
                  "properties": {
                    "RadiusServers": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "A set of RADIUS servers",
                      "items": {
                        "type": "object",
                        "properties": {
                          "@odata.id": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "@odata.id"
                        ]
                      }
                    },
                    "RadiusServers@odata.count": {
                      "type": "number",
                      "description": "Number of RADIUS servers configured up to a maximum of 10"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "RadiusServers",
                    "RadiusServers@odata.count",
                    "@odata.id",
                    "@odata.context",
                    "@odata.type"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "RadiusServers": [
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/RadiusServers('200.1.1.1')"
                        }
                      ],
                      "RadiusServers@odata.count": 1,
                      "@odata.id": "/redfish/v1/SFSSApp/RadiusServers",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#RadiusServers",
                      "@odata.type": "#RadiusServersCollection.RadiusServersCollection"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "Get-redfish-v1-SFSSApp-RadiusServers",
        "description": "This API retrieves a list of RADIUS servers configured in SFSS application.",
        "security": [
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "summary": "Configure RADIUS server",
        "operationId": "Post-redfish-v1-SFSSApp-RadiusServers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "RadiusServer": "200.1.1.1"
                    }
                  },
                  "properties": {
                    "RadiusServer": {
                      "type": "string",
                      "minLength": 1,
                      "description": "IP address of the RADIUS server; SFSS supports only IPv4 communication with remote servers"
                    }
                  },
                  "required": [
                    "RadiusServer"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "RadiusServer": "200.1.1.1"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API configures a RADIUS server for authentication in SFSS application.",
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "ServerIp": "200.1.1.1",
                    "ServerPass": "xxxxxx"
                  }
                },
                "properties": {
                  "ServerIp": {
                    "type": "string",
                    "minLength": 1,
                    "description": "IP address of the RADIUS server; SFSS supports only IPv4 communication with remote servers"
                  },
                  "ServerPass": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Password to access the RADIUS server"
                  }
                },
                "required": [
                  "ServerIp",
                  "ServerPass"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "ServerIp": "200.1.1.1",
                    "ServerPass": "xxxxxx"
                  }
                }
              }
            }
          },
          "description": "{\n\n\"ServerIp\": \"200.1.1.1\",\n\"ServerPass\": \"xxxxxx\"\n\n}"
        }
      }
    },
    "/redfish/v1/SFSSApp/AuthenticationSequence/Enums": {
      "parameters": [],
      "get": {
        "summary": "Get authentication sequence enums",
        "operationId": "get-redfish-v1-SFSSApp-AuthenticationSequence-Enums",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "AuthenticationSequence": [
                        "local",
                        "radius",
                        "tacacs+"
                      ]
                    }
                  },
                  "properties": {
                    "AuthenticationSequence": {
                      "type": "array",
                      "description": "Defines a set of authentication servers (local and remote) configured in SFSS and the order in which SFSS looks up user information in these servers",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "AuthenticationSequence"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "AuthenticationSequence": [
                        "radius",
                        "local",
                        "tacacs+"
                      ]
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "{\n    \"CDCAdminState\": [\n        \"Enable\",\n        \"Disable\"\n    ],\n    \"DiscoverySvcAdminState\": [\n        \"Enable\",\n        \"Disable\"\n    ],\n    \"Status\": [\n        \"INIT\",\n        \"INPROGRESS\",\n        \"SUCCESS\",\n        \"FAIL\",\n        \"ABORT\"\n    ]\n}"
          }
        },
        "description": "This API retrieves all the supported enumerations for the authentication sequence.",
        "parameters": [],
        "security": [
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/redfish/v1/SFSSApp/IpAddressManagements": {
      "get": {
        "summary": "Get all interfaces",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "IpAddressManagements": [
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens161.10')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens225')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens160')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens256')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens224')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens194')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens162')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens257')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens161')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens193')"
                        }
                      ],
                      "IpAddressManagements@odata.count": 11,
                      "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements",
                      "@odata.type": "#IpAddressManagementsCollection.IpAddressManagementsCollection"
                    }
                  },
                  "properties": {
                    "IpAddressManagements": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "A set of SFSS VM interfaces that are assigned an IP address",
                      "items": {
                        "type": "object",
                        "properties": {
                          "@odata.id": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "@odata.id"
                        ]
                      }
                    },
                    "IpAddressManagements@odata.count": {
                      "type": "number",
                      "description": "Number of interfaces that are configured with an IP address"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "IpAddressManagements",
                    "IpAddressManagements@odata.count",
                    "@odata.id",
                    "@odata.context",
                    "@odata.type"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "IpAddressManagements": [
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens160')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens224')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens160.60')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192.24')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192.50')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192.51')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192.20')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192.21')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192.22')"
                        }
                      ],
                      "IpAddressManagements@odata.count": 10,
                      "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements",
                      "@odata.type": "#IpAddressMgmtsCollection.IpAddressMgmtsCollection"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "Get-redfish-v1-SFSSApp-IpAddressManagements",
        "description": "This API retrieves all the interfaces that are assigned an IP address in SFSS application.",
        "security": [
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "summary": "Configure interface",
        "operationId": "Post-redfish-v1-SFSSApp-IpAddressManagements",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "This API configures an interface in SFSS application and assigns the specified IP address to the interface. IPv4 and IPv6 route-specific configuration parameters are available from Release 1.3.0 onwards. See example-2 with route configuration for payload details.",
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "IPV4Address": [
                      "30.1.1.1"
                    ],
                    "IPV4Config": "MANUAL",
                    "IPV4Gateway": "30.1.1.254",
                    "IPV4PrefixLength": 16,
                    "Name": "Name1",
                    "IPV6Config": "MANUAL",
                    "IPV6Address": [
                      "fe80::1699:6f09:43dd:56c1"
                    ],
                    "IPV6Gateway": "fe80::1699:6f09:43dd:ffff",
                    "IPV6PrefixLength": 64,
                    "ParentInterface": "ens160",
                    "VlanId": 60,
                    "MTU": 9000
                  }
                },
                "properties": {
                  "IPV4Address": {
                    "type": "array",
                    "description": "Interface IPv4 address ",
                    "items": {
                      "type": "string"
                    }
                  },
                  "IPV4Config": {
                    "type": "string",
                    "minLength": 1,
                    "description": "IP address configuration type; possible values include Manual, Automatic, and Disabled"
                  },
                  "IPV4Gateway": {
                    "type": "string",
                    "minLength": 1,
                    "description": "IPv4 gateway address"
                  },
                  "IPV4PrefixLength": {
                    "type": "number",
                    "description": "Subnet mask"
                  },
                  "Name": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Friendly name for the interface"
                  },
                  "IPV4Route": {
                    "type": "array",
                    "description": "IPv4 static route configuration",
                    "items": {
                      "type": "object",
                      "properties": {
                        "Destination": {
                          "type": "string",
                          "description": "Destination IP address"
                        },
                        "DestinationPrefix": {
                          "type": "integer",
                          "description": "Destination subnet mask"
                        },
                        "NextHop": {
                          "type": "string",
                          "description": "Next hop IP address"
                        },
                        "Metric": {
                          "type": "integer",
                          "description": "The cost assigned to the route; valid range is from 1 to 255"
                        }
                      }
                    }
                  },
                  "IPV6Config": {
                    "type": "string",
                    "minLength": 1,
                    "description": "IPv6 configuration type; possible values include Manual, Automatic, and Disabled"
                  },
                  "IPV6Address": {
                    "type": "array",
                    "description": "Interface IPv6 address",
                    "items": {
                      "type": "string"
                    }
                  },
                  "IPV6Gateway": {
                    "type": "string",
                    "minLength": 1,
                    "description": "IPv6 gateway address"
                  },
                  "IPV6PrefixLength": {
                    "type": "number",
                    "description": "IPv6 address subnet mask"
                  },
                  "ParentInterface": {
                    "type": "string",
                    "minLength": 1,
                    "description": "The parent interface on which the VLAN subinterface is created; possible values include ens160, ens192, ens224, ens256, ens161, ens193, ens225, ens257, ens162, and ens194 "
                  },
                  "VlanId": {
                    "type": "number",
                    "description": "VLAN identifier"
                  },
                  "MTU": {
                    "type": "number",
                    "description": "Maximum transmission unit for the interface; default value is 1500"
                  },
                  "IPV6Route": {
                    "type": "array",
                    "description": "IPv6 static route configuration",
                    "items": {
                      "type": "object",
                      "properties": {
                        "Destination": {
                          "type": "string",
                          "description": "Destination IP address"
                        },
                        "DestinationPrefix": {
                          "type": "integer",
                          "description": "Destination subnet mask"
                        },
                        "NextHop": {
                          "type": "string",
                          "description": "Next hop IP address"
                        },
                        "Metric": {
                          "type": "integer",
                          "description": "The cost assigned to the route; valid range is from 1 to 255"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "IPV4Address",
                  "IPV4Config",
                  "IPV4Gateway",
                  "IPV4PrefixLength",
                  "IPV6Config",
                  "IPV6Address",
                  "IPV6Gateway",
                  "IPV6PrefixLength",
                  "ParentInterface",
                  "VlanId"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "IPV4Address": [
                      "30.1.1.1"
                    ],
                    "IPV4Config": "MANUAL",
                    "IPV4Gateway": "30.1.1.254",
                    "IPV4PrefixLength": 16,
                    "Name": "Name1",
                    "IPV6Config": "MANUAL",
                    "IPV6Address": [
                      "fe80::1699:6f09:43dd:56c1"
                    ],
                    "IPV6Gateway": "fe80::1699:6f09:43dd:ffff",
                    "IPV6PrefixLength": 64,
                    "ParentInterface": "ens160",
                    "VlanId": 60,
                    "MTU": 9000
                  }
                },
                "example-2 with route configuration": {
                  "value": {
                    "IPV4Address": [
                      "100.104.91.1"
                    ],
                    "IPV4Config": "MANUAL",
                    "IPV4Gateway": "30.1.1.254",
                    "IPV4PrefixLength": 24,
                    "Name": "Name1",
                    "IPV4Route": [
                      {
                        "Destination": "2.1.1.7",
                        "DestinationPrefix": 24,
                        "NextHop": "2.3.4.7",
                        "Metric": 20
                      },
                      {
                        "Destination": "2.1.1.8",
                        "DestinationPrefix": 20,
                        "NextHop": "2.3.4.8",
                        "Metric": 20
                      }
                    ],
                    "IPV6Config": "MANUAL",
                    "IPV6Address": [
                      "fe80::1699:6fff:43dd:56c1"
                    ],
                    "IPV6Gateway": "fe10::1699:6f09:43dd:ffff",
                    "IPV6PrefixLength": 64,
                    "IPV6Route": [
                      {
                        "Destination": "1280::1ae9:6bff:431a:561b",
                        "DestinationPrefix": 64,
                        "NextHop": "fe80::1ff:fe23:4567:890a",
                        "Metric": 55
                      }
                    ],
                    "ParentInterface": "ens192",
                    "VlanId": 50
                  }
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/redfish/v1/SFSSApp/IpAddressManagements('InterfaceId')": {
      "put": {
        "summary": "Update interface",
        "operationId": "Put-redfish-v1-SFSSApp-IpAddressManagements",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "This API updates the interface information based on the specified interface name. IPv4 and IPv6 route-specific configuration parameters are available from Release 1.3.0 onwards. See example-2 with route configuration for payload details.",
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "(\"ens160.60\")",
            "description": "Interface Name"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "IPV4Address": [
                      "30.1.1.1"
                    ],
                    "IPV4Config": "MANUAL",
                    "IPV4Gateway": "30.1.1.2",
                    "IPV4PrefixLength": 16,
                    "IPV6Config": "MANUAL",
                    "Name": "Name1",
                    "IPV6Address": [
                      "fe80::1699:6fff:43dd:56c1"
                    ],
                    "IPV6Gateway": "fe80::1699:6f09:43dd:ffff",
                    "IPV6PrefixLength": 64,
                    "MTU": 7000
                  }
                },
                "properties": {
                  "IPV4Address": {
                    "type": "array",
                    "description": "Interface IPv4 address ",
                    "items": {
                      "type": "string"
                    }
                  },
                  "IPV4Config": {
                    "type": "string",
                    "minLength": 1,
                    "description": "IP address configuration type; possible values include Manual, Automatic, and Disabled"
                  },
                  "IPV4Gateway": {
                    "type": "string",
                    "minLength": 1,
                    "description": "IPv4 gateway address"
                  },
                  "IPV4PrefixLength": {
                    "type": "number",
                    "description": "Subnet mask"
                  },
                  "IPV4Route": {
                    "type": "array",
                    "description": "IPv4 static route configuration",
                    "items": {
                      "type": "object",
                      "properties": {
                        "Destination": {
                          "type": "string",
                          "description": "Destination IP address"
                        },
                        "DestinationPrefix": {
                          "type": "integer",
                          "description": "Destination subnet mask"
                        },
                        "NextHop": {
                          "type": "string",
                          "description": "Next hop IP address"
                        },
                        "Metric": {
                          "type": "integer",
                          "description": "The cost assigned to the route; valid range is from 1 to 255"
                        }
                      }
                    }
                  },
                  "IPV6Config": {
                    "type": "string",
                    "minLength": 1,
                    "description": "IP address configuration type; possible values include Manual, Automatic, and Disabled"
                  },
                  "Name": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Friendly name for the interface"
                  },
                  "IPV6Address": {
                    "type": "array",
                    "description": "Interface IPv6 address ",
                    "items": {
                      "type": "string"
                    }
                  },
                  "IPV6Gateway": {
                    "type": "string",
                    "minLength": 1,
                    "description": "IPv6 gateway address"
                  },
                  "IPV6PrefixLength": {
                    "type": "number",
                    "description": "Subnet mask"
                  },
                  "MTU": {
                    "type": "number",
                    "description": "The cost assigned to the route; valid range is from 1 to 255"
                  },
                  "IPV6Route": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "Destination": {
                          "type": "string",
                          "description": "Destination IP address"
                        },
                        "DestinationPrefix": {
                          "type": "integer",
                          "description": "Subnet mask"
                        },
                        "NextHop": {
                          "type": "string",
                          "description": "Next hop IP address"
                        },
                        "Metric": {
                          "type": "integer",
                          "description": "The cost assigned to the interface; valid range is from 1 to 255"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "IPV4Address",
                  "IPV4Config",
                  "IPV4Gateway",
                  "IPV4PrefixLength",
                  "IPV6Config",
                  "IPV6Address",
                  "IPV6Gateway",
                  "IPV6PrefixLength"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "IPV4Address": [
                      "30.1.1.1"
                    ],
                    "IPV4Config": "MANUAL",
                    "IPV4Gateway": "30.1.1.2",
                    "IPV4PrefixLength": 16,
                    "IPV6Config": "MANUAL",
                    "Name": "Name1",
                    "IPV6Address": [
                      "fe80::1699:6fff:43dd:56c1"
                    ],
                    "IPV6Gateway": "fe80::1699:6f09:43dd:ffff",
                    "IPV6PrefixLength": 64,
                    "MTU": 7000
                  }
                },
                "example-2 with routing configuration": {
                  "value": {
                    "IPV4Address": [
                      "100.104.91.1"
                    ],
                    "IPV4Config": "MANUAL",
                    "IPV4Gateway": "30.1.1.254",
                    "IPV4PrefixLength": 24,
                    "Name": "Name1",
                    "IPV4Route": [
                      {
                        "Destination": "2.1.1.7",
                        "DestinationPrefix": 24,
                        "NextHop": "2.3.4.7",
                        "Metric": 20
                      },
                      {
                        "Destination": "2.1.1.8",
                        "DestinationPrefix": 20,
                        "NextHop": "2.3.4.8",
                        "Metric": 20
                      }
                    ],
                    "IPV6Config": "MANUAL",
                    "IPV6Address": [
                      "fe80::1699:6fff:43dd:56c1"
                    ],
                    "IPV6Gateway": "fe10::1699:6f09:43dd:ffff",
                    "IPV6PrefixLength": 64,
                    "IPV6Route": [
                      {
                        "Destination": "1280::1ae9:6bff:431a:561b",
                        "DestinationPrefix": 64,
                        "NextHop": "fe80::1ff:fe23:4567:890a",
                        "Metric": 55
                      }
                    ],
                    "ParentInterface": "ens192",
                    "VlanId": 50
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            },
            "text/html": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "description": "{ \n\n   \"IPV4Address\": [\n        \"30.1.1.1\"                                      \n    ],\n    \"IPV4Config\": \"MANUAL\",               \n    \"IPV4Gateway\": \"30.1.1.2\",\n    \"IPV4PrefixLength\": 16,\n    \"IPV6Config\": \"MANUAL\", \n\n   \"Name\": \"Name1\",               \n\n    \"IPV6Address\": [\n          \"fe80::1699:6fff:43dd:56c1\"          \n    ],\n\n    \"IPV6Gateway\":   \"fe80::1699:6f09:43dd:ffff\",\n    \"IPV6PrefixLength\": 64,\n\n    \"MTU\": 7000 ## If this field is not present, the MTU is chosen as auto\n\n}"
        }
      },
      "delete": {
        "summary": "Delete VLAN interface",
        "operationId": "Delete-redfish-v1-SFSSApp-IpAddressManagements",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "This API removes the specified interface from SFSS application.",
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "('ens192.100')",
            "description": "Vlan interface Name"
          }
        ]
      },
      "parameters": []
    },
    "/redfish/v1/SFSSApp/RadiusServers('IP')": {
      "get": {
        "summary": "Get specific RADIUS server",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "ServerIp": "200.1.1.1",
                      "ServerPass": "xxxxxx",
                      "@odata.id": "/redfish/v1/SFSSApp/RadiusServers(\"200.1.1.1\")",
                      "@odata.type": "#RadiusServers.RadiusServers",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#RadiusServers/RadiusServers/$entity"
                    }
                  },
                  "properties": {
                    "ServerIp": {
                      "type": "string",
                      "minLength": 1,
                      "description": "IP address of the RADIUS server"
                    },
                    "ServerPass": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Password to access the RADIUS server "
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "ServerIp",
                    "ServerPass",
                    "@odata.id",
                    "@odata.type",
                    "@odata.context"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "ServerIp": "200.1.1.1",
                      "ServerPass": "xxxxxx",
                      "@odata.id": "/redfish/v1/SFSSApp/RadiusServers('200.1.1.1')",
                      "@odata.type": "#RadiusServers.RadiusServers",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#RadiusServers/RadiusServers/$entity"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "Get-ID-redfish-v1-SFSSApp-RadiusServers",
        "description": "This API retrieves information about the specified RADIUS server based on the IP address.",
        "security": [
          {
            "BasicAuth": []
          }
        ]
      },
      "parameters": []
    },
    "/redfish/v1/SFSSApp/IpAddressManagements?$expand=IpAddressManagements": {
      "get": {
        "summary": "Get all interfaces",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "IpAddressManagements": [
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens160')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens224')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens160.60')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192.24')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192.50')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192.51')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192.20')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192.21')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192.22')"
                        }
                      ],
                      "IpAddressMgmts@odata.count": 10,
                      "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements",
                      "@odata.type": "#IpAddressMgmtsCollection.IpAddressMgmtsCollection"
                    }
                  },
                  "properties": {
                    "IpAddressManagements": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "A set of SFSS VM interfaces that are assigned an IP address",
                      "items": {
                        "type": "object",
                        "properties": {
                          "@odata.id": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "@odata.id"
                        ]
                      }
                    },
                    "IpAddressMgmts@odata.count": {
                      "type": "number",
                      "description": "Number of interfaces that are configured with an IP address"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "IpAddressManagements",
                    "IpAddressMgmts@odata.count",
                    "@odata.id",
                    "@odata.context",
                    "@odata.type"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "IpAddressManagements": [
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens160')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens224')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens160.60')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192.24')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192.50')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192.51')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192.20')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192.21')"
                        },
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192.22')"
                        }
                      ],
                      "IpAddressMgmts@odata.count": 10,
                      "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements",
                      "@odata.type": "#IpAddressMgmtsCollection.IpAddressMgmtsCollection"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "Get-Expand-redfish-v1-SFSSApp-IpAddressManagements",
        "description": "This API retrieves detailed information about all the interfaces configured in SFSS application.",
        "security": [
          {
            "BasicAuth": []
          }
        ]
      },
      "parameters": []
    },
    "/redfish/v1/SFSSApp/GlobalSettings": {
      "get": {
        "summary": "Get global settings",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "HostName": "dellemc-networkappliance",
                      "ReservedIPV4SubnetPrefix": "172.20.x.x",
                      "ReservedIPV6SubnetPrefix": "fd02::x",
                      "StorageInterfaceMTU": 7000,
                      "@odata.id": "/redfish/v1/SFSSApp/GlobalSettings",
                      "@odata.type": "#GlobalSettings.GlobalSettings",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#GlobalSettings/GlobalSettings/$entity"
                    }
                  },
                  "properties": {
                    "HostName": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Hostname of the SFSS VM"
                    },
                    "ReservedIPV4SubnetPrefix": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Reserved IPv4 subnet prefix for internal VM networking use; the default value is 172.18.x.x"
                    },
                    "ReservedIPV6SubnetPrefix": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Reserved IPv6 subnet prefix for internal VM networking use; the default value is fd01::x"
                    },
                    "StorageInterfaceMTU": {
                      "type": "number",
                      "description": "Maximum transmission unit; range is from 1250 to 9000; default value is 1500"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "HostName",
                    "ReservedIPV4SubnetPrefix",
                    "ReservedIPV6SubnetPrefix",
                    "StorageInterfaceMTU",
                    "@odata.id",
                    "@odata.type",
                    "@odata.context"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "HostName": "dellemc-networkappliance",
                      "ReservedIPV4SubnetPrefix": "172.20.x.x",
                      "ReservedIPV6SubnetPrefix": "fd02::x",
                      "StorageInterfaceMTU": 7000,
                      "@odata.id": "/redfish/v1/SFSSApp/GlobalSettings",
                      "@odata.type": "#GlobalSettings.GlobalSettings",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#GlobalSettings/GlobalSettings/$entity"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "Get-redfish-v1-SFSSApp-GlobalSettings",
        "description": "This API retrieves global settings configuration from SFSS application.",
        "security": [
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "summary": "Configure global settings",
        "operationId": "Post-redfish-v1-SFSSApp-GlobalSettings",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "This API configures global settings in SFSS application.",
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "HostName": "dellemc-networkappliance",
                    "ReservedIPV4SubnetPrefix": "172.20",
                    "ReservedIPV6SubnetPrefix": "fd02",
                    "StorageInterfaceMTU": 7000
                  }
                },
                "properties": {
                  "HostName": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Hostname of the SFSS VM"
                  },
                  "ReservedIPV4SubnetPrefix": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Reserved IPv4 subnet prefix for internal VM networking use; the default value is 172.18.x.x"
                  },
                  "ReservedIPV6SubnetPrefix": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Reserved IPv6 subnet prefix for internal VM networking use; the default value is fd01::x"
                  },
                  "StorageInterfaceMTU": {
                    "type": "number",
                    "description": "Maximum transmission unit; range is from 1250 to 9000; default value is 1500 "
                  }
                },
                "required": [
                  "HostName",
                  "ReservedIPV4SubnetPrefix",
                  "ReservedIPV6SubnetPrefix",
                  "StorageInterfaceMTU"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "HostName": "dellemc-networkappliance",
                    "ReservedIPV4SubnetPrefix": "172.20",
                    "ReservedIPV6SubnetPrefix": "fd02",
                    "StorageInterfaceMTU": 7000
                  }
                }
              }
            }
          },
          "description": "{\n    \"HostName\": \"dellemc-networkappliance\",\n    \"ReservedIPV4SubnetPrefix\": \"172.20\",\n    \"ReservedIPV6SubnetPrefix\": \"fd02\",\n    \"StorageInterfaceMTU\": 7000\n\n}"
        }
      }
    },
    "/redfish/v1/SFSSApp/Restores": {
      "get": {
        "summary": "Get all restores",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "Restores": [
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/Restores('d25d9f7e-8ae0-490a-94fe-071e8b2fdf60')"
                        }
                      ],
                      "Restores@odata.count": 1,
                      "@odata.id": "/redfish/v1/SFSSApp/Restores",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#Restores",
                      "@odata.type": "#RestoresCollection.RestoresCollection"
                    }
                  },
                  "properties": {
                    "Restores": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "A set of restore operations performed on SFSS",
                      "items": {
                        "type": "object",
                        "properties": {
                          "@odata.id": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "@odata.id"
                        ]
                      }
                    },
                    "Restores@odata.count": {
                      "type": "number",
                      "description": "Number of restore operations performed"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "Restores",
                    "Restores@odata.count",
                    "@odata.id",
                    "@odata.context",
                    "@odata.type"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Restores": [
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/Restores('d25d9f7e-8ae0-490a-94fe-071e8asdef')"
                        }
                      ],
                      "Restores@odata.count": 1,
                      "@odata.id": "/redfish/v1/SFSSApp/Restores",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#Restores",
                      "@odata.type": "#RestoresCollection.RestoresCollection"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "Get-redfish-v1-SFSSApp-Restores",
        "description": "This API retrieves all the available restore information from SFSS application.",
        "security": [
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "summary": "Restore a backup",
        "operationId": "Post-redfish-v1-SFSSApp-Restores",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "ID": "d25d9f7e-8ae0-490a-94fe-071e8b2fdf60"
                    }
                  },
                  "properties": {
                    "ID": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Restore identifier"
                    }
                  },
                  "required": [
                    "ID"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "ID": "d25d9f7e-8ae0-490a-94fe-071e8b2fdf60"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API restores an SFSS configuration from the backup file.",
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "ImageServerLocation": "100.94.72.166:/home/dell/temp_images/backup_file.tar.gz",
                    "ImageServerPassword": "force10",
                    "TransportType": "SCP",
                    "ImageServerUserName": "dell"
                  }
                },
                "properties": {
                  "ImageServerLocation": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Remote server location where the backup file is available; only IPv4 communication is supported"
                  },
                  "ImageServerPassword": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Password to access the remote server"
                  },
                  "TransportType": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Transport type used to copy the backup file from the remote server; possible values include SCP, HTTP, HTTPS, and SFTP"
                  },
                  "ImageServerUserName": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Username to access the remote server"
                  }
                },
                "required": [
                  "ImageServerLocation",
                  "ImageServerPassword",
                  "TransportType",
                  "ImageServerUserName"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "ImageServerLocation": "100.94.72.166:/home/dell/temp_images/backup_file.tar.gz",
                    "ImageServerPassword": "Force10",
                    "TransportType": "SCP",
                    "ImageServerUserName": "Dell"
                  }
                }
              }
            }
          },
          "description": " {\n            \"ImageServerLocation\": \"100.94.72.166:/home/dell/temp_images/backup_file.tar.gz\",\n            \"ImageServerPassword\": \"Force10\",\n            \"TransportType\": \"SCP\",\n            \"ImageServerUserName\": \"Dell\"\n        }"
        }
      }
    },
    "/redfish/v1/SFSSApp/NTP": {
      "get": {
        "summary": "Get NTP server information",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "NtpServer": "10.199.39.1",
                      "State": "Connected",
                      "Status": "Disable",
                      "@odata.id": "/redfish/v1/SFSSApp/NTP",
                      "@odata.type": "#NTP.NTP",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#NTP/NTP/$entity"
                    }
                  },
                  "properties": {
                    "NtpServer": {
                      "type": "string",
                      "description": "IP address of the NTP server; only IPv4 address is supported"
                    },
                    "State": {
                      "type": "string",
                      "description": "Connection status with the NTP server; possible values include Connected and Not Connected"
                    },
                    "Status": {
                      "type": "string",
                      "description": "Status of the NTP service; possible values include Enable and Disable"
                    },
                    "@odata.id": {
                      "type": "string"
                    },
                    "@odata.type": {
                      "type": "string"
                    },
                    "@odata.context": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "NtpServer": "10.199.39.1",
                      "State": "Connected",
                      "Status": "Disable",
                      "@odata.id": "/redfish/v1/SFSSApp/NTP",
                      "@odata.type": "#NTP.NTP",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#NTP/NTP/$entity"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "Get-redfish-v1-SFSSApp-NTP",
        "description": "This API configures an NTP server.",
        "security": [
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "summary": "Configure NTP server",
        "operationId": "Post-redfish-v1-SFSSApp-NTP1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "NTPServer ": "10.199.39.14"
                    }
                  },
                  "properties": {
                    "NTPServer ": {
                      "type": "string",
                      "description": "IP address of the NTP server"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "NTPServer ": "10.199.39.14"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API restores an SFSS configuration from the backup file.",
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "NtpServer": "10.199.39.14"
                  }
                },
                "properties": {
                  "NtpServer": {
                    "type": "string",
                    "description": "IP address of the NTP server; only IPv4 address is supported"
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "NtpServer": "10.199.39.14"
                  }
                }
              }
            }
          },
          "description": " "
        }
      },
      "parameters": [],
      "put": {
        "summary": "Enable or disable NTP service",
        "operationId": "put-redfish-v1-SFSSApp-NTP",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "Status": "Enable"
                    }
                  },
                  "properties": {
                    "Status": {
                      "type": "string",
                      "description": "Status of the NTP service; possible values include Enable and Disable"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Status": "Enable"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API enables or disables the configured NTP service. ",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "Status": "Disable"
                  }
                },
                "properties": {
                  "Status": {
                    "type": "string",
                    "description": "Status of the NTP service; possible values include Enable and Disable"
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "Status": "Enable"
                  }
                },
                "example-2": {
                  "value": {
                    "Status": "Disable"
                  }
                }
              }
            }
          },
          "description": ""
        }
      }
    },
    "/redfish/v1/SFSSApp/NTP(\"ServerIP\")": {
      "parameters": [],
      "delete": {
        "summary": "Remove NTP configuration",
        "operationId": "Delete-redfish-v1-SFSSApp-NTP('ServerIP')",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "IPAddress": "10.199.39.1"
                    }
                  },
                  "properties": {
                    "IPAddress": {
                      "type": "string",
                      "description": "IP address of the NTP server; only IPv4 address is supported"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "IPAddress": "10.199.39.1"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API removes the NTP server configuration from SFSS application."
      }
    },
    "/redfish/v1/SFSSApp/Restores?$expand=Restores": {
      "get": {
        "summary": "Get detailed restore information",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "Restores": [
                        {
                          "ID": "d25d9f7e-8ae0-490a-94fe-071e8b2fdf60",
                          "ImageServerLocation": "100.94.72.166:/home/dell/temp_images/backup_file.tar.gz",
                          "StatusMessage": "Successfully restored",
                          "ImageServerPassword": "dKc4igmRo9c5niXxRBdRsN45PBuFq2P2b+FfMf4D9DPXwKU05vYRW2vViSAfGamm",
                          "Status": "Success",
                          "TimeStamp": "1626334910.8032453",
                          "TransportType": "SCP",
                          "ImageServerUserName": "dell",
                          "@odata.id": "/redfish/v1/SFSSApp/Restores('d25d9f7e-8ae0-490a-94fe-071e8b2fdf60')",
                          "@odata.type": "#Restores.Restores",
                          "@odata.context": "/redfish/v1/SFSSApp/$metadata#Restores/Restores/$entity"
                        }
                      ],
                      "Restores@odata.count": 1,
                      "@odata.id": "/redfish/v1/SFSSApp/Restores?$expand=Restores",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#Restores",
                      "@odata.type": "#RestoresCollection.RestoresCollection"
                    }
                  },
                  "properties": {
                    "Restores": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "A set of restore operations performed on SFSS",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ID": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Restore identifier"
                          },
                          "ImageServerLocation": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Remote server location where the backup file is available; only IPv4 communication is supported"
                          },
                          "StatusMessage": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Detailed status message of the restore operation"
                          },
                          "ImageServerPassword": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Password to access the remote server"
                          },
                          "Status": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Status of the restore operation; possible values include Success and Failure"
                          },
                          "TimeStamp": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Date and time of the restore operation; date in mm/dd/yyyy format and time in hh:mm:ss format"
                          },
                          "TransportType": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Transport type used to copy the backup file from the remote server; possible values include SCP, HTTP, HTTPS, and SFTP"
                          },
                          "ImageServerUserName": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Username to access the remote server"
                          },
                          "@odata.id": {
                            "type": "string",
                            "minLength": 1
                          },
                          "@odata.type": {
                            "type": "string",
                            "minLength": 1
                          },
                          "@odata.context": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "ID",
                          "ImageServerLocation",
                          "StatusMessage",
                          "ImageServerPassword",
                          "Status",
                          "TimeStamp",
                          "TransportType",
                          "ImageServerUserName",
                          "@odata.id",
                          "@odata.type",
                          "@odata.context"
                        ]
                      }
                    },
                    "Restores@odata.count": {
                      "type": "number",
                      "description": "Number of restore operations performed on SFSS"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "Restores",
                    "Restores@odata.count",
                    "@odata.id",
                    "@odata.context",
                    "@odata.type"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Restores": [
                        {
                          "ID": "d25d9f7e-8ae0-490a-94fe-071e8asdef",
                          "ImageServerLocation": "100.94.72.166:/home/dell/temp_images/backup_file.tar.gz",
                          "StatusMessage": "Successfully restored",
                          "ImageServerPassword": "dKc4igmRo9c5niXxRBdRsN45PBuFq2P2b+FfMf4D9DPXwKU05vYRW2vViSAfGamm",
                          "Status": "Success",
                          "TimeStamp": "1626334910.8032453",
                          "TransportType": "SCP",
                          "ImageServerUserName": "Dell",
                          "@odata.id": "/redfish/v1/SFSSApp/Restores('d25d9f7e-8ae0-490a-94fe-071e8asdef')",
                          "@odata.type": "#Restores.Restores",
                          "@odata.context": "/redfish/v1/SFSSApp/$metadata#Restores/Restores/$entity"
                        }
                      ],
                      "Restores@odata.count": 1,
                      "@odata.id": "/redfish/v1/SFSSApp/Restores?$expand=Restores",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#Restores",
                      "@odata.type": "#RestoresCollection.RestoresCollection"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "Get-expand-redfish-v1-SFSSApp-Restores",
        "description": "This API retrieves detailed information about the restored data.",
        "security": [
          {
            "BasicAuth": []
          }
        ]
      },
      "parameters": []
    },
    "/redfish/v1/SFSSApp/Backups": {
      "get": {
        "summary": "Get all backups",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "Backups": [
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/Backups('d25d9f7e-8ae0-490a-94fe-071e8asdef')"
                        }
                      ],
                      "Backups@odata.count": 1,
                      "@odata.id": "/redfish/v1/SFSSApp/Backups",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#Backups",
                      "@odata.type": "#BackupsCollection.BackupsCollection"
                    }
                  },
                  "properties": {
                    "Backups": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "A set of backups obtained from SFSS",
                      "items": {
                        "type": "object",
                        "properties": {
                          "@odata.id": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "@odata.id"
                        ]
                      }
                    },
                    "Backups@odata.count": {
                      "type": "number",
                      "description": "Number of backups available"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "Backups",
                    "Backups@odata.count",
                    "@odata.id",
                    "@odata.context",
                    "@odata.type"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Backups": [
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/Backups('d25d9f7e-8ae0-490a-94fe-071e8asdef')"
                        }
                      ],
                      "Backups@odata.count": 1,
                      "@odata.id": "/redfish/v1/SFSSApp/Backups",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#Backups",
                      "@odata.type": "#BackupsCollection.BackupsCollection"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "Get-redfish-v1-SFSSApp-Backups",
        "description": "This API retrieves all the available backups from SFSS application."
      },
      "post": {
        "summary": "Perform backup",
        "operationId": "post-redfish-v1-SFSSApp-Backups",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "ID": "d25d9f7e-8ae0-490a-94fe-071e8asdef"
                    }
                  },
                  "properties": {
                    "ID": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Backup identifier"
                    }
                  },
                  "required": [
                    "ID"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "ID": "d25d9f7e-8ae0-490a-94fe-071e8asdef"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API creates a backup of the SFSS configuration data in the specified server.",
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "ImageServerLocation": "100.94.72.166:/home/dell/temp_images/",
                    "ImageServerPassword": "force10",
                    "TransportType": "SCP",
                    "ImageServerUserName": "dell"
                  }
                },
                "properties": {
                  "ImageServerLocation": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Remote server location where the backup file is copied to; only IPv4 communication is supported"
                  },
                  "ImageServerPassword": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Password to access the remote server"
                  },
                  "TransportType": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Transport type used to copy the backup file to the remote server; possible values include SCP, HTTP, HTTPS, and SFTP"
                  },
                  "ImageServerUserName": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Username to access the remote server"
                  }
                },
                "required": [
                  "ImageServerLocation",
                  "ImageServerPassword",
                  "TransportType",
                  "ImageServerUserName"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "ImageServerLocation": "100.94.72.166:/home/dell/temp_images/",
                    "ImageServerPassword": "Force10",
                    "TransportType": "SCP",
                    "ImageServerUserName": "Dell"
                  }
                }
              }
            }
          },
          "description": "        {\n            \"ImageServerLocation\": \"100.94.72.166:/home/dell/temp_images/\",\n            \"ImageServerPassword\": \"Force10\",\n            \"TransportType\": \"SCP\",\n            \"ImageServerUserName\": \"Dell\"\n        }"
        }
      }
    },
    "/redfish/v1/SFSSApp/Backups?$expand=Backups": {
      "get": {
        "summary": "Get all backups",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "Backups": [
                        {
                          "ID": "d25d9f7e-8ae0-490a-94fe-071e8asdef",
                          "ImageServerLocation": "100.94.72.166:/home/dell/temp_images/",
                          "StatusMessage": "Successfully backed up",
                          "ImageServerPassword": "Uf3qPJR2UAby42Keqd1NhU5BbtoHDVr+3IVkJJPzVi1Dc5ilyWlGTi/5ZbDprwwE",
                          "Status": "Success",
                          "TimeStamp": "1626734910.8032453",
                          "TransportType": "SCP",
                          "ImageServerUserName": "dell",
                          "@odata.id": "/redfish/v1/SFSSApp/Backups('d25d9f7e-8ae0-490a-94fe-071e8asdef')",
                          "@odata.type": "#Backups.Backups",
                          "@odata.context": "/redfish/v1/SFSSApp/$metadata#Backups/Backups/$entity"
                        }
                      ],
                      "Backups@odata.count": 1,
                      "@odata.id": "/redfish/v1/SFSSApp/Backups?$expand=Backups",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#Backups",
                      "@odata.type": "#BackupsCollection.BackupsCollection"
                    }
                  },
                  "properties": {
                    "Backups": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "A set of backups obtained from SFSS",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ID": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Backup identifier"
                          },
                          "ImageServerLocation": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Remote server location where the backup file is copied to; only IPv4 communication is supported"
                          },
                          "StatusMessage": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Detailed status message of the backup operation"
                          },
                          "ImageServerPassword": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Password to access the remote server"
                          },
                          "Status": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Status of the backup; possible values include Success, Failure, NotStarted, InProgress"
                          },
                          "TimeStamp": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Date and time at which the backup was taken; date in mm/dd/yyyy format and time in hh:mm:ss format"
                          },
                          "TransportType": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Transport type used to copy the backup file to the remote server; possible values include SCP, HTTP, HTTPS, and SFTP"
                          },
                          "ImageServerUserName": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Username to access the remote server"
                          },
                          "@odata.id": {
                            "type": "string",
                            "minLength": 1
                          },
                          "@odata.type": {
                            "type": "string",
                            "minLength": 1
                          },
                          "@odata.context": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "ID",
                          "ImageServerLocation",
                          "StatusMessage",
                          "ImageServerPassword",
                          "Status",
                          "TimeStamp",
                          "TransportType",
                          "ImageServerUserName",
                          "@odata.id",
                          "@odata.type",
                          "@odata.context"
                        ]
                      }
                    },
                    "Backups@odata.count": {
                      "type": "number",
                      "description": "Number of backups available"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "Backups",
                    "Backups@odata.count",
                    "@odata.id",
                    "@odata.context",
                    "@odata.type"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Backups": [
                        {
                          "ID": "d25d9f7e-8ae0-490a-94fe-071e8asdef",
                          "ImageServerLocation": "100.94.72.166:/home/dell/temp_images/",
                          "StatusMessage": "Successfully backed up",
                          "ImageServerPassword": "Uf3qPJR2UAby42Keqd1NhU5BbtoHDVr+3IVkJJPzVi1Dc5ilyWlGTi/5ZbDprwwE",
                          "Status": "Success",
                          "TimeStamp": "1626734910.8032453",
                          "TransportType": "SCP",
                          "ImageServerUserName": "Dell",
                          "@odata.id": "/redfish/v1/SFSSApp/Backups('d25d9f7e-8ae0-490a-94fe-071e8asdef')",
                          "@odata.type": "#Backups.Backups",
                          "@odata.context": "/redfish/v1/SFSSApp/$metadata#Backups/Backups/$entity"
                        }
                      ],
                      "Backups@odata.count": 1,
                      "@odata.id": "/redfish/v1/SFSSApp/Backups?$expand=Backups",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#Backups",
                      "@odata.type": "#BackupsCollection.BackupsCollection"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "Get-expand-redfish-v1-SFSSApp-Backups",
        "description": "This API retrieves detailed backup information available in SFSS."
      },
      "parameters": []
    },
    "/redfish/v1/SFSSApp/SosReports": {
      "get": {
        "summary": "Get SOS report",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "SosReports": [
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/SosReports('d25d9f7e-8ae0-490a-94fe-071e8asdef')"
                        }
                      ],
                      "SosReports@odata.count": 1,
                      "@odata.id": "/redfish/v1/SFSSApp/SosReports",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#SosReports",
                      "@odata.type": "#SosReportsCollection.SosReportsCollection"
                    }
                  },
                  "properties": {
                    "SosReports": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "A collection of system information that includes configuration details and diagnostic information",
                      "items": {
                        "type": "object",
                        "properties": {
                          "@odata.id": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "@odata.id"
                        ]
                      }
                    },
                    "SosReports@odata.count": {
                      "type": "number",
                      "description": "\nNumber of SOS reports downloaded"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "SosReports",
                    "SosReports@odata.count",
                    "@odata.id",
                    "@odata.context",
                    "@odata.type"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "SosReports": [
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/SosReports('d25d9f7e-8ae0-490a-94fe-071e8asdef')"
                        }
                      ],
                      "SosReports@odata.count": 1,
                      "@odata.id": "/redfish/v1/SFSSApp/SosReports",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#SosReports",
                      "@odata.type": "#SosReportsCollection.SosReportsCollection"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSSApp-SosReports",
        "description": "This API retrieves the SOS report from SFSS.",
        "security": [
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/redfish/v1/SFSSApp/ChangePassword": {
      "post": {
        "summary": "Change admin password",
        "operationId": "Post-redfish-v1-SFSSApp-ChangePassword",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "This API allows the user to change the admin user password.",
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "OldPassword": "admin",
                    "NewPassword": "Dell@force10"
                  }
                },
                "properties": {
                  "OldPassword": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Old password"
                  },
                  "NewPassword": {
                    "type": "string",
                    "minLength": 1,
                    "description": "New password"
                  }
                },
                "required": [
                  "OldPassword",
                  "NewPassword"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "OldPassword": "admin",
                    "NewPassword": "Xajdye@sjf10"
                  }
                }
              }
            }
          },
          "description": "{\n\"OldPassword\":\"admin\",\n\"NewPassword\" : \"Xskfdj@fdk10\"\n}"
        }
      }
    },
    "/redfish/v1/SFSSApp/FoundationalConfigs?$expand=FoundationalConfigs": {
      "get": {
        "summary": "Get all foundational configuration",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "FoundationalConfigs": [
                        {
                          "DiscoveryControllerPort": "8009",
                          "InstanceIdentifier": "2",
                          "NQN": "nqn.1988-11.com.dell:SFSS:2:20210707135328e8",
                          "@odata.id": "/redfish/v1/SFSSApp/FoundationalConfigs('2')",
                          "@odata.type": "#FoundationalConfigs.FoundationalConfigs",
                          "@odata.context": "/redfish/v1/SFSSApp/$metadata#FoundationalConfigs/FoundationalConfigs/$entity"
                        },
                        {
                          "DiscoveryControllerPort": "8009",
                          "InstanceIdentifier": "1",
                          "NQN": "nqn.1988-11.com.dell:SFSS:1:20210707023327e8",
                          "@odata.id": "/redfish/v1/SFSSApp/FoundationalConfigs('1')",
                          "@odata.type": "#FoundationalConfigs.FoundationalConfigs",
                          "@odata.context": "/redfish/v1/SFSSApp/$metadata#FoundationalConfigs/FoundationalConfigs/$entity"
                        }
                      ],
                      "FoundationalConfigs@odata.count": 2,
                      "@odata.id": "/redfish/v1/SFSSApp/FoundationalConfigs?$expand=FoundationalConfigs",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#FoundationalConfigs",
                      "@odata.type": "#FoundationalConfigsCollection.FoundationalConfigsCollection"
                    }
                  },
                  "properties": {
                    "FoundationalConfigs": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "A set of foundational configurations from the SFSS VM",
                      "items": {
                        "type": "object",
                        "properties": {
                          "DiscoveryControllerPort": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Port on which the CDC listens for mDNS queries; default is 8009"
                          },
                          "InstanceIdentifier": {
                            "type": "string",
                            "minLength": 1,
                            "description": "CDC instance identifier"
                          },
                          "NQN": {
                            "type": "string",
                            "minLength": 1,
                            "description": "A unique NVMe Qualified Name (NQN) that is used to identify the CDC instance"
                          },
                          "@odata.id": {
                            "type": "string",
                            "minLength": 1
                          },
                          "@odata.type": {
                            "type": "string",
                            "minLength": 1
                          },
                          "@odata.context": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "DiscoveryControllerPort",
                          "InstanceIdentifier",
                          "NQN",
                          "@odata.id",
                          "@odata.type",
                          "@odata.context"
                        ]
                      }
                    },
                    "FoundationalConfigs@odata.count": {
                      "type": "number",
                      "description": "Number of foundational configurations (one for each CDC instance running on the SFSS VM)"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "FoundationalConfigs",
                    "FoundationalConfigs@odata.count",
                    "@odata.id",
                    "@odata.context",
                    "@odata.type"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "FoundationalConfigs": [
                        {
                          "DiscoveryControllerPort": "8009",
                          "InstanceIdentifier": "2",
                          "NQN": "nqn.1988-11.com.dell:SFSS:2:20210707135328e8",
                          "@odata.id": "/redfish/v1/SFSSApp/FoundationalConfigs('2')",
                          "@odata.type": "#FoundationalConfigs.FoundationalConfigs",
                          "@odata.context": "/redfish/v1/SFSSApp/$metadata#FoundationalConfigs/FoundationalConfigs/$entity"
                        },
                        {
                          "DiscoveryControllerPort": "8009",
                          "InstanceIdentifier": "1",
                          "NQN": "nqn.1988-11.com.dell:SFSS:1:20210707023327e8",
                          "@odata.id": "/redfish/v1/SFSSApp/FoundationalConfigs('1')",
                          "@odata.type": "#FoundationalConfigs.FoundationalConfigs",
                          "@odata.context": "/redfish/v1/SFSSApp/$metadata#FoundationalConfigs/FoundationalConfigs/$entity"
                        }
                      ],
                      "FoundationalConfigs@odata.count": 2,
                      "@odata.id": "/redfish/v1/SFSSApp/FoundationalConfigs?$expand=FoundationalConfigs",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#FoundationalConfigs",
                      "@odata.type": "#FoundationalConfigsCollection.FoundationalConfigsCollection"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "Get-expand-redfish-v1-SFSSApp-FoundationalConfigsGET-Expand",
        "description": "This API retrieves all the foundational configuration information from the SFSS application.",
        "security": [
          {
            "BasicAuth": []
          }
        ]
      },
      "parameters": []
    },
    "/redfish/v1/SFSSApp/Device": {
      "get": {
        "summary": "Get device details",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "DeviceId": "20210521211812c9",
                      "TotalNumOfEndPoints": 0,
                      "@odata.id": "/redfish/v1/SFSSApp/Device",
                      "@odata.type": "#Device.Device",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#Device/Device/$entity",
                      "NumOfEndPointInUse": 0
                    }
                  },
                  "properties": {
                    "DeviceId": {
                      "type": "string",
                      "minLength": 1,
                      "description": "SFSS VM device identifier"
                    },
                    "TotalNumOfEndPoints": {
                      "type": "number",
                      "description": "Total number of endpoints that the license supports"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "NumOfEndPointInUse": {
                      "type": "number",
                      "description": "The total number of NVMe hosts and subsystems that register with the CDC instances configured in the SFSS VM"
                    }
                  },
                  "required": [
                    "DeviceId",
                    "TotalNumOfEndPoints",
                    "@odata.id",
                    "@odata.type",
                    "@odata.context",
                    "NumOfEndPointInUse"
                  ]
                },
                "examples": {}
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSSApp-Device",
        "description": "This API retrieves device details from SFSS application.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              },
              "examples": {
                "example-1": {
                  "value": {
                    "DeviceId": "20210521211812c9",
                    "TotalNumOfEndPoints": 0,
                    "@odata.id": "/redfish/v1/SFSSApp/Device",
                    "@odata.type": "#Device.Device",
                    "@odata.context": "/redfish/v1/SFSSApp/$metadata#Device/Device/$entity",
                    "NumOfEndPointInUse": 0
                  }
                }
              }
            }
          }
        }
      }
    },
    "/redfish/v1/SFSSApp/RadiusServers/Sequence": {
      "get": {
        "summary": "Get all RADIUS servers",
        "tags": [],
        "responses": {},
        "operationId": "get-redfish-v1-SFSSApp-RadiusServers-Sequence",
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "description": "This API retrieves a list of RADIUS servers that are configured in SFSS. This API returns the server IP addresses in the order in which they are configured."
      }
    },
    "/redfish/v1/SFSSApp/TacacsServers/Sequence": {
      "get": {
        "summary": "Get all TACACS+ servers",
        "tags": [],
        "operationId": "get-redfish-v1-SFSSApp-TacacsServers-Sequence",
        "description": "This API retrieves a list of TACACS+ servers that are configured in SFSS. This API returns the server IP addresses in the order in which they are configured.",
        "security": [
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/redfish/v1/SFSSApp/SFSSInterfaceList": {
      "get": {
        "summary": "Get all interfaces",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "List of Interfaces": [
                        "ens160",
                        "ens192",
                        "ens192.15",
                        "ens192.20"
                      ]
                    }
                  },
                  "properties": {
                    "List of Interfaces": {
                      "type": "array",
                      "description": "A set of available interfaces",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "List of Interfaces"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "List of Interfaces": [
                        "ens160",
                        "ens192",
                        "ens192.15",
                        "ens192.20"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-IDredfish-v1-SFSSApp-SFSSInterfaceList",
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "description": "This API retrieves a list of available interfaces in SFSS application. This API is applicable only for standalone virtual machine deployments."
      }
    },
    "/redfish/v1/SFSSApp/Events": {
      "get": {
        "summary": "Get all events",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "Events": [
                        {
                          "Args": [
                            "1",
                            "NQN1"
                          ],
                          "CDCInstance": "1",
                          "EEMI": "SVEP0004",
                          "HostName": "J104XC3",
                          "Message": "CDC Instance 1: Subsystem NQN1 is added.",
                          "OriginOfCondition": [
                            "ZoneMember"
                          ],
                          "Severity": "Informational",
                          "Source": "NZ-CENTRAL",
                          "SourceSubType": "Zone",
                          "timeStamp": "2021-05-18 16:36:25.353495",
                          "@odata.id": "/redfish/v1/SFSSApp/Events('17')",
                          "@odata.type": "#Events.Events",
                          "@odata.context": "/redfish/v1/SFSSApp/$metadata#Events/Events/$entity"
                        },
                        {
                          "Args": [
                            "1",
                            "NQN1"
                          ],
                          "CDCInstance": "1",
                          "EEMI": "SVEP0004",
                          "HostName": "J104XC3",
                          "Message": "CDC Instance 1: Subsystem NQN1 is added.",
                          "OriginOfCondition": [
                            "ZoneMember"
                          ],
                          "Severity": "Informational",
                          "Source": "NZ-CENTRAL",
                          "SourceSubType": "Zone",
                          "timeStamp": "2021-05-14 15:08:07.864327",
                          "@odata.id": "/redfish/v1/SFSSApp/Events('16')",
                          "@odata.type": "#Events.Events",
                          "@odata.context": "/redfish/v1/SFSSApp/$metadata#Events/Events/$entity"
                        }
                      ],
                      "Events@odata.count": 17,
                      "@odata.id": "/redfish/v1/SFSSApp/Events",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#Events",
                      "@odata.type": "#EventsCollection.EventsCollection",
                      "TotalCount": 22
                    }
                  },
                  "properties": {
                    "Events": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "A set of events",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Args": {
                            "type": "array",
                            "description": "Required arguments",
                            "items": {
                              "type": "string"
                            }
                          },
                          "CDCInstance": {
                            "type": "string",
                            "minLength": 1,
                            "description": "CDC instance identifier"
                          },
                          "EEMI": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Enhanced Event Message Initiative (EEMI) Message Code"
                          },
                          "HostName": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Hostname of the CDC instance"
                          },
                          "Message": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Message summary"
                          },
                          "OriginOfCondition": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "Severity": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Severity of the event; possible values include Critical, Warning, and Informational"
                          },
                          "Source": {
                            "type": "string",
                            "minLength": 1,
                            "description": "SFSS service that is responsible for handling the event"
                          },
                          "SourceSubType": {
                            "type": "string",
                            "minLength": 1,
                            "description": "The module within the SFSS service that is responsible for handling the event"
                          },
                          "timeStamp": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Date and time at which the event occurred; date in dd/mm/yyyy format and time in hh:mm:ss format"
                          },
                          "@odata.id": {
                            "type": "string",
                            "minLength": 1
                          },
                          "@odata.type": {
                            "type": "string",
                            "minLength": 1
                          },
                          "@odata.context": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "CDCInstance",
                          "EEMI",
                          "HostName",
                          "Message",
                          "Severity",
                          "Source",
                          "SourceSubType",
                          "timeStamp",
                          "@odata.id",
                          "@odata.type",
                          "@odata.context"
                        ]
                      }
                    },
                    "Events@odata.count": {
                      "type": "number",
                      "description": "Number of events reported"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "TotalCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "Events",
                    "Events@odata.count",
                    "@odata.id",
                    "@odata.context",
                    "@odata.type",
                    "TotalCount"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Events": [
                        {
                          "Args": [
                            "1",
                            "NQN1"
                          ],
                          "CDCInstance": "1",
                          "EEMI": "SVEP0004",
                          "HostName": "J104XC3",
                          "Message": "CDC Instance 1: Subsystem NQN1 is added.",
                          "OriginOfCondition": [
                            "ZoneMember"
                          ],
                          "Severity": "Informational",
                          "Source": "NZ-CENTRAL",
                          "SourceSubType": "Zone",
                          "timeStamp": "2021-05-18 16:36:25.353495",
                          "@odata.id": "/redfish/v1/SFSSApp/Events('17')",
                          "@odata.type": "#Events.Events",
                          "@odata.context": "/redfish/v1/SFSSApp/$metadata#Events/Events/$entity"
                        },
                        {
                          "Args": [
                            "1",
                            "NQN1"
                          ],
                          "CDCInstance": "1",
                          "EEMI": "SVEP0004",
                          "HostName": "J104XC3",
                          "Message": "CDC Instance 1: Subsystem NQN1 is added.",
                          "OriginOfCondition": [
                            "ZoneMember"
                          ],
                          "Severity": "Informational",
                          "Source": "NZ-CENTRAL",
                          "SourceSubType": "Zone",
                          "timeStamp": "2021-05-14 15:08:07.864327",
                          "@odata.id": "/redfish/v1/SFSSApp/Events('16')",
                          "@odata.type": "#Events.Events",
                          "@odata.context": "/redfish/v1/SFSSApp/$metadata#Events/Events/$entity"
                        }
                      ],
                      "Events@odata.count": 17,
                      "@odata.id": "/redfish/v1/SFSSApp/Events",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#Events",
                      "@odata.type": "#EventsCollection.EventsCollection",
                      "TotalCount": 22
                    }
                  },
                  "Example for query param $top=2": {
                    "value": {
                      "Events": [
                        {
                          "Args": [
                            "1",
                            "NQN1"
                          ],
                          "CDCInstance": "1",
                          "EEMI": "SVEP0004",
                          "HostName": "J104XC3",
                          "Message": "CDC Instance 1: Subsystem NQN1 is added.",
                          "OriginOfCondition": [
                            "ZoneMember"
                          ],
                          "Severity": "Informational",
                          "Source": "NZ-CENTRAL",
                          "SourceSubType": "Zone",
                          "timeStamp": "2021-05-18 16:36:25.353495",
                          "@odata.id": "/redfish/v1/SFSSApp/Events('17')",
                          "@odata.type": "#Events.Events",
                          "@odata.context": "/redfish/v1/SFSSApp/$metadata#Events/Events/$entity"
                        },
                        {
                          "Args": [
                            "1",
                            "NQN1"
                          ],
                          "CDCInstance": "1",
                          "EEMI": "SVEP0004",
                          "HostName": "J104XC3",
                          "Message": "CDC Instance 1: Subsystem NQN1 is added.",
                          "OriginOfCondition": [
                            "ZoneMember"
                          ],
                          "Severity": "Informational",
                          "Source": "NZ-CENTRAL",
                          "SourceSubType": "Zone",
                          "timeStamp": "2021-05-14 15:08:07.864327",
                          "@odata.id": "/redfish/v1/SFSSApp/Events('16')",
                          "@odata.type": "#Events.Events",
                          "@odata.context": "/redfish/v1/SFSSApp/$metadata#Events/Events/$entity"
                        }
                      ],
                      "Events@odata.count": 2,
                      "@odata.id": "/redfish/v1/SFSSApp/Events?$top=2",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#Events",
                      "@odata.type": "#EventsCollection.EventsCollection",
                      "@odata.nextLink": "/redfish/v1/SFSSApp/Events?$top=2&$skip=2",
                      "TotalCount": 22
                    }
                  },
                  "Example Filter query param.": {
                    "value": {
                      "Events": [
                        {
                          "Args": [
                            "1",
                            "NQN1"
                          ],
                          "CDCInstance": "1",
                          "EEMI": "SVEP0004",
                          "HostName": "J104XC3",
                          "Message": "CDC Instance 1: Subsystem NQN1 is added.",
                          "OriginOfCondition": [
                            "ZoneMember"
                          ],
                          "Severity": "Informational",
                          "Source": "NZ-CENTRAL",
                          "SourceSubType": "Zone",
                          "timeStamp": "2021-05-18 16:36:25.353495",
                          "@odata.id": "/redfish/v1/SFSSApp/Events('17')",
                          "@odata.type": "#Events.Events",
                          "@odata.context": "/redfish/v1/SFSSApp/$metadata#Events/Events/$entity"
                        },
                        {
                          "Args": [
                            "1",
                            "NQN1"
                          ],
                          "CDCInstance": "1",
                          "EEMI": "SVEP0004",
                          "HostName": "J104XC3",
                          "Message": "CDC Instance 1: Subsystem NQN1 is added.",
                          "OriginOfCondition": [
                            "ZoneMember"
                          ],
                          "Severity": "Informational",
                          "Source": "NZ-CENTRAL",
                          "SourceSubType": "Zone",
                          "timeStamp": "2021-05-14 15:08:07.864327",
                          "@odata.id": "/redfish/v1/SFSSApp/Events('16')",
                          "@odata.type": "#Events.Events",
                          "@odata.context": "/redfish/v1/SFSSApp/$metadata#Events/Events/$entity"
                        }
                      ],
                      "Events@odata.count": 17,
                      "@odata.id": "/redfish/v1/SFSSApp/Events?$filter=CDCInstance%20eq%20%271%27",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#Events",
                      "@odata.type": "#EventsCollection.EventsCollection",
                      "TotalCount": 22
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSSApp-Events",
        "description": "This API retrieves a list of events from SFSS application.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "?$top=2",
            "description": "This parameter is used in pagination logic to fetch the top two records."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "?$filter=CDCInstance eq '1'",
            "description": "This parameter is used to fetch the specific record that matches the condition."
          }
        ]
      },
      "parameters": []
    },
    "/redfish/v1/SFSSApp/IpAddressManagements/Enums": {
      "get": {
        "summary": "Get interface enums",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "Type": [
                        "ETHERNET",
                        "VLAN"
                      ],
                      "IPV4Config": [
                        "AUTOMATIC",
                        "MANUAL"
                      ],
                      "IPV6Config": [
                        "AUTOMATIC",
                        "MANUAL"
                      ]
                    }
                  },
                  "properties": {
                    "Type": {
                      "type": "array",
                      "description": "A set of available interface types; possible values include Ethernet and VLAN",
                      "items": {
                        "type": "string"
                      }
                    },
                    "IPV4Config": {
                      "type": "array",
                      "description": "A set of supported IPv4 configuration types; possible values include Manual, Automatic, and Disabled ",
                      "items": {
                        "type": "string"
                      }
                    },
                    "IPV6Config": {
                      "type": "array",
                      "description": "A set of supported IPv6 configuration types; possible values include Manual, Automatic, and Disabled ",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "Type",
                    "IPV4Config",
                    "IPV6Config"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Type": [
                        "ETHERNET",
                        "VLAN"
                      ],
                      "IPV4Config": [
                        "AUTOMATIC",
                        "MANUAL"
                      ],
                      "IPV6Config": [
                        "AUTOMATIC",
                        "MANUAL"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-Enums-redfish-v1-SFSSApp-IpAddressManagements-Enums",
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "description": "This API retreives all supported enumerations for the IP address management API to configure interfaces."
      }
    },
    "/redfish/v1/SFSSApp/SFSSHealthStatus": {
      "get": {
        "summary": "Get system health",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "Health": "Warning",
                      "ReasonCode": [
                        "Instance: instance1 module-testing reported:eemi-2"
                      ],
                      "@odata.id": "/redfish/v1/SFSSApp/SFSSHealthStatus",
                      "@odata.type": "#SFSSHealthStatus.SFSSHealthStatus",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#SFSSHealthStatus/SFSSHealthStatus/$entity"
                    }
                  },
                  "properties": {
                    "Health": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Health status of the SFSS VM; possible values include Ok, Warning, and Critical"
                    },
                    "ReasonCode": {
                      "type": "array",
                      "description": "\nReason for the SFSS VM health to be in Warning or Critical state",
                      "items": {
                        "type": "string"
                      }
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "Health",
                    "ReasonCode",
                    "@odata.id",
                    "@odata.type",
                    "@odata.context"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Health": "Warning",
                      "ReasonCode": [
                        "Instance: instance1 module-testing reported:eemi-2"
                      ],
                      "@odata.id": "/redfish/v1/SFSSApp/SFSSHealthStatus",
                      "@odata.type": "#SFSSHealthStatus.SFSSHealthStatus",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#SFSSHealthStatus/SFSSHealthStatus/$entity"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSSApp-SFSSHealthStatus",
        "description": "This API retrieves SFSS system health status."
      }
    },
    "/redfish/v1/SFSSApp/UserActivityAudit": {
      "get": {
        "summary": "Get user activities",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "UserActivityAudits": [
                        {
                          "CDCInstance": "APP",
                          "HTTPCode": "200 OK",
                          "Operation": "GET",
                          "Payload": "",
                          "SourceIP": "10.134.7.5",
                          "TimeStamp": "2021-06-28 08:33:21.686088",
                          "URL": "http://stfs-infra/redfish/v1/SFSSApp/UserActivityAudit",
                          "UserAgent": "PostmanRuntime/7.28.0",
                          "UserName": "admin",
                          "UserRole": "cdrom;floppy;sudo;audio;dip;video;plugdev;crontab;netdev;docker;admin",
                          "@odata.id": "/redfish/v1/SFSSApp/UserActivityAudit('2')",
                          "@odata.type": "#UserActivityAudit.UserActivityAudit",
                          "@odata.context": "/redfish/v1/SFSSApp/$metadata#UserActivityAudit/UserActivityAudit/$entity"
                        },
                        {
                          "CDCInstance": "APP",
                          "HTTPCode": "201 Created",
                          "Operation": "PATCH",
                          "Payload": "{\"InstanceIdentifier\":\"1\",\"Interfaces\":[\"ens192\"]}",
                          "SourceIP": "127.0.0.1",
                          "TimeStamp": "2021-06-28 08:32:59.186355",
                          "URL": "http://stfs-infra/redfish/v1/SFSSApp/CDCInstanceManagers('1')",
                          "UserAgent": "curl/7.64.0",
                          "UserName": "MENU_USER",
                          "UserRole": "admin",
                          "@odata.id": "/redfish/v1/SFSSApp/UserActivityAudit('1')",
                          "@odata.type": "#UserActivityAudit.UserActivityAudit",
                          "@odata.context": "/redfish/v1/SFSSApp/$metadata#UserActivityAudit/UserActivityAudit/$entity"
                        }
                      ],
                      "UserActivityAudits@odata.count": 2,
                      "@odata.id": "/redfish/v1/SFSSApp/UserActivityAudit",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#UserActivityAudit",
                      "@odata.type": "#UserActivityAuditsCollection.UserActivityAuditsCollection",
                      "TotalCount": "25"
                    }
                  },
                  "properties": {
                    "UserActivityAudits": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "A set of user activity audit records",
                      "items": {
                        "type": "object",
                        "properties": {
                          "CDCInstance": {
                            "type": "string",
                            "minLength": 1,
                            "description": "CDC instance identifier"
                          },
                          "HTTPCode": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Response code that indicates whether the user activity is successfully completed or not"
                          },
                          "Operation": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Operation performed by the user"
                          },
                          "Payload": {
                            "type": "string",
                            "description": "Information provided by the user for the specific user activity"
                          },
                          "SourceIP": {
                            "type": "string",
                            "minLength": 1,
                            "description": "IP address of the system from which the specific user activity was done "
                          },
                          "TimeStamp": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Date and time at which the user performed the operation; date in dd/mm/yyyy format and time in hh:mm:ss format"
                          },
                          "URL": {
                            "type": "string",
                            "minLength": 1,
                            "description": "RESTAPI URL that is used for the specific activity"
                          },
                          "UserAgent": {
                            "type": "string",
                            "minLength": 1,
                            "description": "API platform from which the specific user activity was triggered"
                          },
                          "UserName": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Username of the user who performed the operation"
                          },
                          "UserRole": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Role of the user"
                          },
                          "@odata.id": {
                            "type": "string",
                            "minLength": 1
                          },
                          "@odata.type": {
                            "type": "string",
                            "minLength": 1
                          },
                          "@odata.context": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "CDCInstance",
                          "HTTPCode",
                          "Operation",
                          "Payload",
                          "SourceIP",
                          "TimeStamp",
                          "URL",
                          "UserAgent",
                          "UserName",
                          "UserRole",
                          "@odata.id",
                          "@odata.type",
                          "@odata.context"
                        ]
                      }
                    },
                    "UserActivityAudits@odata.count": {
                      "type": "number",
                      "description": "Number of user activity audit records present in the response"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "TotalCount": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "UserActivityAudits",
                    "UserActivityAudits@odata.count",
                    "@odata.id",
                    "@odata.context",
                    "@odata.type",
                    "TotalCount"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "UserActivityAudits": [
                        {
                          "CDCInstance": "APP",
                          "HTTPCode": "200 OK",
                          "Operation": "GET",
                          "Payload": "",
                          "SourceIP": "10.134.7.5",
                          "TimeStamp": "2021-06-28 08:33:21.686088",
                          "URL": "http://stfs-infra/redfish/v1/SFSSApp/UserActivityAudit",
                          "UserAgent": "PostmanRuntime/7.28.0",
                          "UserName": "admin",
                          "UserRole": "cdrom;floppy;sudo;audio;dip;video;plugdev;crontab;netdev;docker;admin",
                          "@odata.id": "/redfish/v1/SFSSApp/UserActivityAudit('2')",
                          "@odata.type": "#UserActivityAudit.UserActivityAudit",
                          "@odata.context": "/redfish/v1/SFSSApp/$metadata#UserActivityAudit/UserActivityAudit/$entity"
                        },
                        {
                          "CDCInstance": "APP",
                          "HTTPCode": "201 Created",
                          "Operation": "PATCH",
                          "Payload": "{\"InstanceIdentifier\":\"1\",\"Interfaces\":[\"ens192\"]}",
                          "SourceIP": "127.0.0.1",
                          "TimeStamp": "2021-06-28 08:32:59.186355",
                          "URL": "http://stfs-infra/redfish/v1/SFSSApp/CDCInstanceManagers('1')",
                          "UserAgent": "curl/7.64.0",
                          "UserName": "MENU_USER",
                          "UserRole": "admin",
                          "@odata.id": "/redfish/v1/SFSSApp/UserActivityAudit('1')",
                          "@odata.type": "#UserActivityAudit.UserActivityAudit",
                          "@odata.context": "/redfish/v1/SFSSApp/$metadata#UserActivityAudit/UserActivityAudit/$entity"
                        }
                      ],
                      "UserActivityAudits@odata.count": 2,
                      "@odata.id": "/redfish/v1/SFSSApp/UserActivityAudit",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#UserActivityAudit",
                      "@odata.type": "#UserActivityAuditsCollection.UserActivityAuditsCollection",
                      "TotalCount": "25"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSSApp-UserActivityAudit",
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "description": "This API retrieves user activity details from SFSS application."
      }
    },
    "/redfish/v1/SFSSApp/IpAddressManagements(\"interface\")": {
      "get": {
        "summary": "Get specific interface",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "Interface": "ens161.10",
                      "Type": "VLAN",
                      "IPV4Config": "AUTOMATIC",
                      "IPV6Config": "AUTOMATIC",
                      "Name": "SAN NETWORK 1 vlan10",
                      "ParentInterface": "ens161",
                      "VlanId": 10,
                      "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements(\"ens161.10\")",
                      "@odata.type": "#IpAddressManagements.IpAddressManagements",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements/IpAddressManagements/$entity"
                    }
                  },
                  "properties": {
                    "Interface": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Interface identifier"
                    },
                    "Type": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Interface type; possible values include Ethernet and VLAN"
                    },
                    "IPV4Config": {
                      "type": "string",
                      "minLength": 1,
                      "description": "IPv4 configuration type; possible values include Manual, Automatic, and Disabled"
                    },
                    "IPV4Route": {
                      "type": "array",
                      "description": "IPv4 static route configuration",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Destination": {
                            "type": "string",
                            "description": "Destination IP address"
                          },
                          "DestinationPrefix": {
                            "type": "integer",
                            "description": "Subnet mask"
                          },
                          "NextHop": {
                            "type": "string",
                            "description": "Next hop IP address"
                          },
                          "Metric": {
                            "type": "integer",
                            "description": "The cost assigned to the route; valid range is from 1 to 255"
                          }
                        }
                      }
                    },
                    "IPV6Config": {
                      "type": "string",
                      "minLength": 1,
                      "description": "IPv6 configuration type; possible values include Manual, Automatic, and Disabled"
                    },
                    "IPV6Route": {
                      "type": "array",
                      "description": "IPv6 static route configuration",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Destination": {
                            "type": "string",
                            "description": "Destination IP address"
                          },
                          "DestinationPrefix": {
                            "type": "integer",
                            "description": "Subnet mask"
                          },
                          "NextHop": {
                            "type": "string",
                            "description": "Next hop IP address"
                          },
                          "Metric": {
                            "type": "integer",
                            "description": "The cost assigned to the route; valid range is from 1 to 255"
                          }
                        }
                      }
                    },
                    "Name": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Friendly name for the interface"
                    },
                    "ParentInterface": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Ethernet interface on which the VLAN interface is created"
                    },
                    "VlanId": {
                      "type": "number",
                      "description": "VLAN ID"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "Interface",
                    "Type",
                    "IPV4Config",
                    "IPV6Config",
                    "ParentInterface",
                    "VlanId",
                    "@odata.id",
                    "@odata.type",
                    "@odata.context"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Interface": "ens161.10",
                      "Type": "VLAN",
                      "IPV4Config": "AUTOMATIC",
                      "IPV6Config": "AUTOMATIC",
                      "Name": "SAN NETWORK 1 vlan10",
                      "ParentInterface": "ens161",
                      "VlanId": 10,
                      "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens161.10')",
                      "@odata.type": "#IpAddressManagements.IpAddressManagements",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements/IpAddressManagements/$entity"
                    }
                  },
                  "example-2 with routing configuration": {
                    "value": {
                      "Interface": "ens192.50",
                      "Type": "VLAN",
                      "IPV4Address": [
                        "100.104.91.1"
                      ],
                      "IPV4Config": "MANUAL",
                      "IPV4Gateway": "30.1.1.254",
                      "IPV4PrefixLength": 24,
                      "IPV4Route": [
                        {
                          "Destination": "2.1.1.7",
                          "DestinationPrefix": 24,
                          "Metric": 20,
                          "NextHop": "2.3.4.7,"
                        },
                        {
                          "Destination": "2.1.1.8",
                          "DestinationPrefix": 20,
                          "Metric": 20,
                          "NextHop": "2.3.4.8,"
                        }
                      ],
                      "IPV6Address": [
                        "fe80::1699:6fff:43dd:56c1"
                      ],
                      "IPV6Config": "MANUAL",
                      "IPV6Gateway": "fe10::1699:6f09:43dd:ffff",
                      "IPV6PrefixLength": 64,
                      "IPV6Route": [
                        {
                          "Destination": "1280::1ae9:6bff:431a:561b",
                          "DestinationPrefix": 64,
                          "Metric": 55,
                          "NextHop": "fe80::1ff:fe23:4567:890a,"
                        }
                      ],
                      "ParentInterface": "ens192",
                      "VlanId": 50,
                      "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192.50')",
                      "@odata.type": "#IpAddressManagements.IpAddressManagements",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements/IpAddressManagements/$entity"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSSApp-IpAddressManagements(-interface-)",
        "description": "This API retrieves details of the specified interface from SFSS application based on the interface name. IPv4 and IPv6 route-specific configuration parameters are available from Release 1.3.0 onwards. See example-2 for sample route configuration in the response."
      }
    },
    "/redfish/v1/SFSSApp/Licenses(\"LicenseId\")": {
      "get": {
        "summary": "Get specific license",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "ServiceTag": "1234567",
                      "TotalNumOfEndPoints": 48,
                      "Identifier": "1",
                      "LicenseType": "Perpetual",
                      "LicenseExpiry": "Never",
                      "@odata.id": "/redfish/v1/SFSSApp/Licenses('1')",
                      "@odata.type": "#Licenses.Licenses",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#Licenses/Licenses/$entity",
                      "DeviceId": "20210413120527b6"
                    }
                  },
                  "properties": {
                    "ServiceTag": {
                      "type": "string",
                      "minLength": 1,
                      "description": "License service tag"
                    },
                    "TotalNumOfEndPoints": {
                      "type": "number",
                      "description": "Total number of endpoints that the license supports"
                    },
                    "Identifier": {
                      "type": "string",
                      "minLength": 1,
                      "description": "License identifier"
                    },
                    "LicenseType": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Type of license; possible values include Evaluation, Enterprise, Partner, and Expansion licenses"
                    },
                    "LicenseExpiry": {
                      "type": "string",
                      "minLength": 1,
                      "description": "License expiry date"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "DeviceId": {
                      "type": "string",
                      "minLength": 1,
                      "description": "A unique NVMe Qualified Name (NQN) that is used to identify the SFSS VM"
                    }
                  },
                  "required": [
                    "ServiceTag",
                    "TotalNumOfEndPoints",
                    "Identifier",
                    "LicenseType",
                    "LicenseExpiry",
                    "@odata.id",
                    "@odata.type",
                    "@odata.context",
                    "DeviceId"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "ServiceTag": "1234567",
                      "TotalNumOfEndPoints": 48,
                      "Identifier": "1",
                      "LicenseType": "Perpetual",
                      "LicenseExpiry": "Never",
                      "@odata.id": "/redfish/v1/SFSSApp/Licenses('1')",
                      "@odata.type": "#Licenses.Licenses",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#Licenses/Licenses/$entity",
                      "DeviceId": "20210413120527b6"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSSApp-Licenses(-LicenseId-)",
        "description": "This API retrieves details about the specified license based on the license identifier.",
        "security": [
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/redfish/v1/SFSSApp/Licenses?$expand=Licenses": {
      "get": {
        "summary": "Get detailed license information",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "Licenses": [
                        {
                          "Identifier": "2",
                          "LicenseType": "Perpetual",
                          "TotalNumOfEndPoints": 10,
                          "EULA": "This End User License Agreement (“EULA”) is between the individual consumer or business entity that will use the Software (“You”) and the applicable entity identified in the “Licensor Table” located at www.dell.com/swlicensortable (“Licensor”).\n\nThis EULA governs Your use of: (a) the object code version of Dell branded software that is preinstalled on Dell hardware or otherwise provided to You pursuant to a purchase contract, quote, order form, invoice or online procurement process (each, an “Order”); (b) associated software license keys, if any (“License Keys”);\n(c) updates to such software (“Updates”); (d) the documentation for such software; and (e) all copies of the foregoing (collectively, “Software”). If You accept this EULA, or if You install or use the Software, then You agree to this EULA unless You already have a signed agreement with Dell Marketing L.P. or one of its affiliates (“Dell”) that includes licensing terms that govern Your use of the Software (“Pre-Existing Agreement”). If You accept this EULA or install or use the Software on behalf of a business entity, then You represent that You have authority to take those actions, and this EULA will be binding on that business entity unless the entity already has a Pre-Existing Agreement. If You do not agree to this EULA, do not install or use the Software.\n\nIf You are a business entity and You purchase Software from a third party (“Reseller”) who sublicenses the Software to You under the terms of an agreement between You and such Reseller (a “Sublicense Agreement”), then the terms of Your Sublicense Agreement with the Reseller shall govern Your use of the Software and not this EULA. Resellers may only grant rights, and must pass through conditions, consistent with this EULA. Thus, even though Your Sublicense Agreement is between you and the Reseller, by installing or using the Software, You acknowledge and agree that: (a) any license rights in the Sublicense Agreement that are greater than the license rights in this EULA shall not apply; (b) any license conditions in this EULA that are not contained in the Sublicense Agreement apply to You; (c) the limitations of liability set forth in this EULA will apply in favor of Licensor, its affiliates and suppliers despite the existence of a Sublicense Agreement; and (d) Licensor is a third-party beneficiary of the Sublicense Agreement and is entitled to exercise and enforce all of the Reseller’s rights and benefits under that Sublicense Agreement.\n\nIf You purchase Software as an individual consumer, nothing in this EULA affects your statutory rights if the laws of your state or country do not permit it to do so.\n\n1. License Grant.\n\n1.1. Right to Use. Subject to and in consideration of your full compliance with the terms and conditions of this EULA, Licensor grants to You a personal, non-exclusive license to use the Software during the period stated in the applicable Order (if no period is specified, You may use the Software perpetually). If You are an individual consumer, this license grant allows You to use the Software in connection with Your own personal use. If You are a business entity, this license grant allows You to use the Software in connection with the internal business operations of Your entity. In addition, You may make a reasonable number of copies of the Software solely as needed for backup or archival purposes. Additional license terms for certain Software may be included in the Offering Specific Terms Table located at www.dell.com/offeringspecificterms (“OST Table”), and additional terms for Software that is licensed to You for a limited time (“Subscription Software”) are located at www.dellemc.com/subscription_terms (“Subscription Terms”).\n\n1.2. Third Party Use. If You are a business entity, You may allow Your contractors (each, a “Permitted Third Party”) to use the Software solely for the purpose of providing services to You, provided that such use is in compliance with this EULA.  You are liable for any breach of this EULA by any Permitted Third Party.\n\n1.3. Rights Reserved. The Software is licensed and not sold. Except for the license expressly granted in this EULA, Licensor, on behalf of itself and its affiliates and suppliers, retains all rights in and to the Software and in all related materials (“Works”). The rights in these Works are valid and protected in all forms, media and technologies existing now or hereafter developed. Any use of Works other than as expressly set forth herein is strictly prohibited.\n\n1.4. Ownership. Licensor, on behalf of itself and its affiliates, retains ownership of the Works and all related intellectual property rights. If Software is provided to You on removable media (e.g., CD, DVD or USB drive), You may own the media on which the Software is recorded.\n\n2. License Conditions.\n\n2.1. You and Your Permitted Third Parties must do the following:\n\nA. Run the Software only on the hardware for which it was intended to operate, when applicable;\nB. Use License Keys (if applicable) only from Licensor or an authorized Dell License Key provider;\nC. Treat the Software as Dell confidential information;\nD. Use the Software only on as many computers or devices that You purchased, in such configurations permitted by Dell or Licensor, and/or in accordance with the applicable unit of measure, each as may be specified on Your Order. For Software licensed via a unit of measure, the terms and descriptions of each unit of measure are located at www.dellemc.com/UOM_terms (“UOM Terms”);\nE. Abide by the export control and economic sanctions laws of the United States, the European Union and other applicable jurisdictions. Under these laws, the Software must not be used, sold, leased, exported, imported, re-exported or transferred except in compliance with such laws, including, without limitation, export licensing requirements, end user, end-use and end-destination restrictions, prohibitions on dealings with sanctioned individuals and entities, including but not limited to persons on the Office of Foreign Assets Control's Specially Designated Nationals and Blocked Persons List, or the U.S. Department of Commerce Denied Persons List. You represent and warrant that You are not the subject or target of, and that You are not located in a country or territory (including without limitation, North Korea, Cuba, Iran, Syria, and Crimea) that is the subject or target of economic sanctions of the United States, European Union or other applicable jurisdictions; and\nF. Comply with all Third Party Terms (as defined in Section 5 below).\n\n2.2. Except as otherwise permitted by this EULA or by mandatory law (meaning a law that the parties cannot change by contract), You must not, and must not allow Your Permitted Third Parties, to do the following:\n\nA. Modify or remove any proprietary notices or markings on or in the Software;\nB. Transfer License Keys to any other person or entity;\nC. Download Updates from Licensor or an authorized provider unless You have a valid support agreement;\nD. Install Updates on Enterprise Products (e.g., server, networking, storage, integrated solutions, and data protection appliances) that have gone end of service life unless Licensor otherwise agrees in writing;\nE. Install and operate counterfeit versions of Software (i.e. software provided by anyone other than Dell or an authorized representative of Dell) on Dell hardware;\nF. Violate or circumvent any technological use restrictions in the Software;\nG. Sell, loan, rent, lease, sublicense, distribute or encumber (e.g., by lien, security interest, etc.) the Software;\nH. Use any trademarks or service marks of Licensor, its affiliates or suppliers;\nI. Provide access to the Software or allow use by any third party, other than Permitted Third Parties, without Licensor's prior written consent;\nJ. Copy, republish, upload, post or transmit the Software in any way;\nK. Modify or create derivative works based upon the Software, or decompile, disassemble, reverse engineer, or otherwise attempt to derive source code from the Software, in whole or in part;\nL. Attack or attempt to undermine the security, integrity, authentication or intended operation of the Software;\nM. Use the Software on a service bureau, rental or managed services basis;\nN. Create or permit others to create Internet \"links\" to the Software or \"frame\" or \"mirror\" the Software on any other server, wireless or Internet-based device;\nO. Use the Software to create a competitive offering;\nP. Use the Software to create other software, products or technologies unless the Software contains Development Tools as described in Section 7;\nQ. Share or publish the results of any benchmarking of the Software without Dell’s prior written consent;\nR. Use the Software for high risk activities, including without limitation online control systems, or use in hazardous environments requiring fail-safe performance, such as in the operation of nuclear facilities, aircraft navigation or communications systems, air traffic control, life support, weapons systems or in any other device or system in which function or malfunction of the Software could result in death, personal injury or physical or environmental damage;\nS. Use the Software for activities related to weapons of mass destruction, including but not limited to, activities related to the design, development, production or use of nuclear materials, nuclear facilities, nuclear weapons, missiles or support of missile projects, or chemical or biological weapons; and\nT. Assign this EULA, or any right or obligation under this EULA, or delegate any performance, without Dell’s prior written consent, unless You are transferring the Software in accordance with the Transferability Section 3 below. Even if Dell consents to an assignment, You remain responsible for all obligations under this EULA that You incurred prior to the effective date of the assignment.\n\n3. Transferability. If You are an individual consumer, You may transfer the Software on a permanent basis as part of the sale or transfer of the hardware system on which the Software is loaded, provided that You retain no copies of any version of the Software. If You are a business entity, You may not transfer the Software to another person or entity without the express written permission of Dell, unless allowed by applicable law stating that transfer may not be restricted (note that a transfer fee may be charged by Dell).\n\n4. Compliance Verification. If You are a business entity, You must: (a) maintain and use systems and procedures that allow You to accurately track Your use of the Software; (b) certify to Dell in writing, at Dell’s request, that Your use of Software fully complies with this EULA, indicating the number of Software licenses deployed at that time; and (c) cooperate fully and timely with Dell and its auditors if Dell notifies You that it will conduct an audit to confirm Your compliance with this EULA. Any such audit will be conducted during normal business hours. If Dell determines that You have over-deployed Software, You agree to immediately purchase licenses at the then-current list price to bring Your use into compliance. If You over-deployed Software by 5% or more, then You agree to pay the total cost of the audit, in addition to any other liabilities You may have.\n\n5. Third Party Software. “Third Party Software” is software, including open source software, that is contained in or provided with the Software and is licensed by a third party under its own terms of use (“Third Party Terms”). Third Party Software is governed solely by the applicable Third Party Terms and not by this EULA. Third Party Terms may be provided with the Third Party Software or may be included in the OST Table. For certain open source software, the applicable Third Party Terms may entitle You to obtain the corresponding source files. You may find corresponding source files for such open source software at //opensource.dell.com/ or in the “About” or “Read Me” file of Software, or other locations that Licensor may specify.\n\n6. Free Software. “Free Software” means Software that is provided to You without additional charge (e.g., scripts that enable customer installation; code that enables You to monitor Your use of Dell products; etc.).  You may only use Free Software on or with equipment or in the operating environments for which Dell has designed that Free Software to operate. Licensor may terminate any license to Free Software at any time in its sole discretion. You may not transfer Free Software to anyone else.\n\n7. Development Tools. If the Software includes development tools, such as scripting tools, APIs or sample scripts (collectively “Development Tools”), and unless there is a separate agreement between You and Dell or Licensor for the Development Tools, You may use such Development Tools to create new scripts and code for the purpose of customizing Your use of the Software (within the parameters set forth in this EULA and in the Development Tools themselves) and for no other purpose.\n\n8. Evaluation Software. This EULA does not license use of Software for evaluation purposes (“Evaluation Software”) except to the extent these terms may be invoked by the separate license terms and conditions accompanying that Evaluation Software.\n\n9. Support Services Not Included. If You purchase maintenance and support for Software, such services are identified in Your Order and will be provided under a separate services agreement.\n\n10. Termination. For Subscription Software, this EULA automatically terminates at the end of Your subscription period unless You renew Your rights. Licensor may terminate this EULA if You or a Permitted Third Party commits a material breach of this EULA and fails to cure such breach within thirty (30) days following Your receipt of notice of the breach from Dell. This right to terminate applies accordingly if Dell or the Reseller from whom You made Your purchase does not receive timely payment for the licenses to the Software or for the hardware on which the Software is loaded, if any. When this EULA terminates, all licenses granted automatically terminate and You must immediately cease use of the Software and return or destroy all copies of the Software. Except as otherwise agreed by Dell, You will not get a refund from Dell if this EULA is terminated. Rights and obligations under Sections of this EULA that, by their nature should survive, will survive termination, as well as obligations for payment.\n\n11. Warranty Disclaimer. Under this EULA, Licensor provides neither any warranties for the Software nor does it provide support for the Software. Your rights under any warranties and any support entitlements for Software acquired for a fee are solely between You and the Reseller or Dell entity from whom You procured the Software and related support, and are defined under the commercial terms agreed between You and such selling entity. Accordingly, except as otherwise offered by Dell, the Software is provided by Licensor under this EULA “As Is” without any warranties or conditions. To the maximum extent permitted by applicable law, Licensor, on behalf of itself and its affiliates and suppliers: (a) makes no express warranties or conditions related to the Software; (b) disclaims all implied warranties and conditions related to the Software, including merchantability, fitness for a particular purpose, title, and non-infringement; and (c) disclaims any warranty or condition arising by statute, operation of law, course of dealing or performance, or usage of trade. Licensor does not warrant uninterrupted or error-free operation of the Software. This Section does not affect or modify any of the statutory warranty rights that are available to consumers.\n\n12. Limitation of Liability.\n\n12.1. Limitations on Damages. The limitations, exclusions and disclaimers set forth in a Pre-Existing Agreement or Dell Terms of Sale that applies your Order (in each case, the “Order Terms”) shall apply to all disputes, claims or controversies (whether in contract, tort or otherwise) between You and Licensor or Dell related to or arising out of: (a) this EULA; (b) the breach, termination or validity of this EULA; or (c) any Orders (each, a “Dispute”). In the absence of applicable Order Terms, the terms set forth in this Section shall apply to all Disputes.\n \nThe terms of this Section are agreed allocations of risk constituting part of the consideration for Licensor’s licensing of Software to You and will apply even if there is a failure of the essential purpose of any limited remedy, and regardless of whether a party has been advised of the possibility of the liabilities. If applicable law prohibits any portion of the limits on liability stated below, the parties agree that such limitation will be automatically modified, but only to the extent required to make the limitation compliant with applicable law.\n\nA. Limitation on Direct Damages. Except for Your obligation to pay for the Software, or for Your violation of the License Grant and License Conditions set forth herein or of Licensor’s or Dell’s intellectual property rights, the total liability of You and Licensor (including Licensor’s affiliates and suppliers) arising out of any Dispute is limited to the amount You paid for the Software that is the subject of the Dispute, but excluding amounts received as reimbursement of expenses or payment of taxes. Notwithstanding anything otherwise set forth above, Licensor and its affiliates have no liability for any direct damages resulting from Your use or attempted use of Third Party Software, Free Software or Development Tools.\n\nB. Disclaimer of Certain Other Damages. Except for Your obligation to pay for the Software, or for Your violation of the License Grant and License Conditions set forth herein or of Licensor’s or Dell’s intellectual property rights, neither You nor Licensor (including Licensor’s affiliates and suppliers) shall have any liability under this EULA for special, consequential, exemplary, punitive, incidental or indirect damages, or for lost profits, loss of revenue, loss or corruption of data, loss of use or procurement of substitute products or services.\n\n12.2. Regular Backups. You are solely responsible for Your data. You must back up Your data before Licensor or a third party performs any remedial, upgrade or other work on Your production systems. You acknowledge that it is a best practice to have more than one back up copy of Your data. If applicable law prohibits exclusion of liability for lost data, then Licensor will only be liable for the cost of the typical effort to recover the lost data from Your last available back up.\n\n12.3. Limitation Period. Except as stated in this Section, all claims must be made within the period specified by applicable law. If the law allows the parties to specify a shorter period for bringing claims, or the law does not provide a time at all, then claims must be made within 18 months after the cause of action accrues.\n\n13. Additional Terms.\n\n13.1. Notices. The parties will provide all notices under this EULA in writing. Unless provided otherwise in an Order, You must provide notices to the local Dell entity in Your Order, or, if Your Order is not with a Dell entity, by e-mail to Dell_Legal_Notices@dell.com.\n\n13.2. Waiver and Severability. Failure to enforce a provision of this EULA will not constitute a waiver of that or any other provision of this EULA. If a court of competent jurisdiction determines that any part of this EULA or document that incorporates this EULA by reference is unenforceable, that ruling will not affect the validity of all remaining parts.\n\n13.3. Modifications. This EULA may only be modified in writing signed by both parties; provided, however, that Licensor may, in its sole discretion, update the Licensor Table, the OST Table, the UOM Terms and the Subscription Terms at any time. Any changes that Licensor makes to the Licensor Table, the OST Table, the UOM Terms or the Subscription Terms will only apply to Orders that occur after Licensor posts those changes online.\n \n13.4. Governing Law and Jurisdiction. If You obtained the Software directly from Dell, then the governing law and jurisdiction provisions set forth in Your Order Terms shall apply to this EULA. Otherwise the following shall apply:\n\nA. Subject to Section 13.4 D and 13.5, if You are domiciled in the United States or Canada: (1) this EULA and any Dispute is governed by the laws of the State of Texas (excluding the conflicts of law rules) and the federal laws of the United States; and (2) to the extent permitted by law, the state and federal courts located in Texas will have exclusive jurisdiction for any Dispute. Both parties agree to submit to the personal jurisdiction of the state and federal courts located within Travis or Williamson County, Texas, and agree to waive any and all objections to the exercise of jurisdiction over the parties by those courts and to venue in those courts.\n\nB. Subject to Section 13.4 D, if You are domiciled outside of the United States or Canada: (1) this EULA and any Dispute is governed by the substantive laws in force in the country in which the Licensor is located (as indicated in the Licensor Table located at www.dell.com/swlicensortable), without regard to its conflict of law rules; and (2) the exclusive place of jurisdiction for any Dispute shall be in such country.\n\nC. In any event, neither the U.N. Convention on Contracts for the International Sale of Goods, nor the Uniform Computer Information Transaction Act shall apply to this EULA or any Dispute.\n\nD. If You are an individual consumer, this Section 13.4 does not deprive You of the protection afforded to You by the provisions of mandatory consumer protections laws that are applicable to You, nor does it prevent you from seeking remedies or enforcing your rights as a consumer under such laws.\n\n13.5. Dispute Resolution and Binding Individual (non-class) Arbitration. This Section only applies if You are an individual consumer that resides in (or obtained the Software in) the United States or Canada. All Disputes shall be resolved exclusively and finally by binding individual arbitration. This means You and Licensor waive any right to litigate disputes in a court or before a jury and neither You nor Licensor shall be entitled to join, consolidate, or include any claims belonging to or alleged or arising from, by or on behalf of any third party to an arbitration brought hereunder, or to arbitrate any claim as a class action, class representative, class member, or in a private attorney general capacity. If You reside in (or obtained the Software in) the United States, the arbitration will be administered by the American Arbitration Association (AAA), or JAMS. If You reside in (or obtained the Software in) Canada, arbitration will be at ADR Chambers pursuant to the general ADR Chambers Rules for Arbitration located at www.adrchambers.com. The arbitration shall be conducted in the English language. The arbitration panel shall have exclusive authority to resolve any arbitrability issues including any dispute over this EULA or this arbitration provision’s scope, application, meaning and enforceability. The arbitration panel shall be empowered to grant whatever relief would be available in court, including without limitation preliminary relief, injunctive relief and specific performance. Any award of the arbitration panel shall be final and binding immediately when rendered, and judgment on the award may be entered in any court of competent jurisdiction. If any portion of this arbitration agreement is found unenforceable, the unenforceable portion shall be severed and the remaining arbitration terms shall be enforced (but in no event will there be a class arbitration). Consumer claimants (individuals whose transaction is intended for personal, family or household use) may elect to pursue their claims in small-claims court rather than arbitration. Licensor will be responsible for paying any individual consumer's arbitration/arbitrator fees. Notwithstanding the foregoing, Licensor may apply to any relevant government agency or any court of competent jurisdiction to preserve its rights under this EULA and to obtain any injunctive or preliminary relief, or any award of specific performance, to which it may be entitled, either against You or against a non-party; provided, however, that no such administrative or judicial authority shall have the right or power to render a judgment or award (or to enjoin the rendering of an arbitral award) for damages that may be due to or from either party under this EULA, which right and power shall be reserved exclusively to an arbitration panel proceeding in accordance herewith.\n\n13.6. Third Party Rights. Other than as expressly set out in this EULA, this EULA does not create any rights for any person who is not a party to it, and no person who is not a party to this EULA may enforce any of its terms or rely on any exclusion or limitation contained in it.\n\n13.7 Entire Agreement. You acknowledge that You have read this EULA, that You understand it, that You agree to be bound by its terms, and that this EULA, along with the Order Terms into which this EULA may be incorporated (as applicable), is the complete and exclusive statement of the agreement between You and Licensor regarding Your use of the Software. All content referenced in this EULA by hyperlink is incorporated into this EULA in its entirety and is available to You in hardcopy form upon Your request. The pre-printed terms of Your purchase order or any other document that is not issued or signed by Licensor or Dell do not apply to Software. You represent that You did not rely on any representations or statements that do not appear in this EULA when accepting this EULA.\n\n\n\n(Dell EULA rev 24FEB2020)",
                          "ServiceTag": "ABCDEFG",
                          "LicenseExpiry": "Never",
                          "DeviceId": "20210624140433e8"
                        }
                      ],
                      "Licenses@odata.count": 1,
                      "@odata.id": "/redfish/v1/SFSSApp/Licenses?$expand=Licenses",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#Licenses",
                      "@odata.type": "#LicensesCollection.LicensesCollection"
                    }
                  },
                  "properties": {
                    "Licenses": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "A set of licenses",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Identifier": {
                            "type": "string",
                            "minLength": 1,
                            "description": "License identifier"
                          },
                          "LicenseType": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Type of license; possible values include Evaluation, Enterprise, Partner, and Expansion licenses"
                          },
                          "TotalNumOfEndPoints": {
                            "type": "number",
                            "description": "Total number of endpoints that the license supports"
                          },
                          "EULA": {
                            "type": "string",
                            "minLength": 1,
                            "description": "End User License Agreement"
                          },
                          "ServiceTag": {
                            "type": "string",
                            "minLength": 1,
                            "description": "License service tag"
                          },
                          "LicenseExpiry": {
                            "type": "string",
                            "minLength": 1,
                            "description": "License expiry date"
                          },
                          "DeviceId": {
                            "type": "string",
                            "minLength": 1,
                            "description": "A unique NVMe Qualified Name (NQN) that is used to identify the SFSS VM"
                          }
                        },
                        "required": [
                          "Identifier",
                          "LicenseType",
                          "TotalNumOfEndPoints",
                          "EULA",
                          "ServiceTag",
                          "LicenseExpiry",
                          "DeviceId"
                        ]
                      }
                    },
                    "Licenses@odata.count": {
                      "type": "number",
                      "description": "Number of licenses installed"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "Licenses",
                    "Licenses@odata.count",
                    "@odata.id",
                    "@odata.context",
                    "@odata.type"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Licenses": [
                        {
                          "Identifier": "2",
                          "LicenseType": "Perpetual",
                          "TotalNumOfEndPoints": 10,
                          "EULA": "This End User License Agreement (“EULA”) is between the individual consumer or business entity that will use the Software (“You”) and the applicable entity identified in the “Licensor Table” located at www.dell.com/swlicensortable (“Licensor”).\n\nThis EULA governs Your use of: (a) the object code version of Dell branded software that is preinstalled on Dell hardware or otherwise provided to You pursuant to a purchase contract, quote, order form, invoice or online procurement process (each, an “Order”); (b) associated software license keys, if any (“License Keys”);\n(c) updates to such software (“Updates”); (d) the documentation for such software; and (e) all copies of the foregoing (collectively, “Software”). If You accept this EULA, or if You install or use the Software, then You agree to this EULA unless You already have a signed agreement with Dell Marketing L.P. or one of its affiliates (“Dell”) that includes licensing terms that govern Your use of the Software (“Pre-Existing Agreement”). If You accept this EULA or install or use the Software on behalf of a business entity, then You represent that You have authority to take those actions, and this EULA will be binding on that business entity unless the entity already has a Pre-Existing Agreement. If You do not agree to this EULA, do not install or use the Software.\n\nIf You are a business entity and You purchase Software from a third party (“Reseller”) who sublicenses the Software to You under the terms of an agreement between You and such Reseller (a “Sublicense Agreement”), then the terms of Your Sublicense Agreement with the Reseller shall govern Your use of the Software and not this EULA. Resellers may only grant rights, and must pass through conditions, consistent with this EULA. Thus, even though Your Sublicense Agreement is between you and the Reseller, by installing or using the Software, You acknowledge and agree that: (a) any license rights in the Sublicense Agreement that are greater than the license rights in this EULA shall not apply; (b) any license conditions in this EULA that are not contained in the Sublicense Agreement apply to You; (c) the limitations of liability set forth in this EULA will apply in favor of Licensor, its affiliates and suppliers despite the existence of a Sublicense Agreement; and (d) Licensor is a third-party beneficiary of the Sublicense Agreement and is entitled to exercise and enforce all of the Reseller’s rights and benefits under that Sublicense Agreement.\n\nIf You purchase Software as an individual consumer, nothing in this EULA affects your statutory rights if the laws of your state or country do not permit it to do so.\n\n1. License Grant.\n\n1.1. Right to Use. Subject to and in consideration of your full compliance with the terms and conditions of this EULA, Licensor grants to You a personal, non-exclusive license to use the Software during the period stated in the applicable Order (if no period is specified, You may use the Software perpetually). If You are an individual consumer, this license grant allows You to use the Software in connection with Your own personal use. If You are a business entity, this license grant allows You to use the Software in connection with the internal business operations of Your entity. In addition, You may make a reasonable number of copies of the Software solely as needed for backup or archival purposes. Additional license terms for certain Software may be included in the Offering Specific Terms Table located at www.dell.com/offeringspecificterms (“OST Table”), and additional terms for Software that is licensed to You for a limited time (“Subscription Software”) are located at www.dellemc.com/subscription_terms (“Subscription Terms”).\n\n1.2. Third Party Use. If You are a business entity, You may allow Your contractors (each, a “Permitted Third Party”) to use the Software solely for the purpose of providing services to You, provided that such use is in compliance with this EULA.  You are liable for any breach of this EULA by any Permitted Third Party.\n\n1.3. Rights Reserved. The Software is licensed and not sold. Except for the license expressly granted in this EULA, Licensor, on behalf of itself and its affiliates and suppliers, retains all rights in and to the Software and in all related materials (“Works”). The rights in these Works are valid and protected in all forms, media and technologies existing now or hereafter developed. Any use of Works other than as expressly set forth herein is strictly prohibited.\n\n1.4. Ownership. Licensor, on behalf of itself and its affiliates, retains ownership of the Works and all related intellectual property rights. If Software is provided to You on removable media (e.g., CD, DVD or USB drive), You may own the media on which the Software is recorded.\n\n2. License Conditions.\n\n2.1. You and Your Permitted Third Parties must do the following:\n\nA. Run the Software only on the hardware for which it was intended to operate, when applicable;\nB. Use License Keys (if applicable) only from Licensor or an authorized Dell License Key provider;\nC. Treat the Software as Dell confidential information;\nD. Use the Software only on as many computers or devices that You purchased, in such configurations permitted by Dell or Licensor, and/or in accordance with the applicable unit of measure, each as may be specified on Your Order. For Software licensed via a unit of measure, the terms and descriptions of each unit of measure are located at www.dellemc.com/UOM_terms (“UOM Terms”);\nE. Abide by the export control and economic sanctions laws of the United States, the European Union and other applicable jurisdictions. Under these laws, the Software must not be used, sold, leased, exported, imported, re-exported or transferred except in compliance with such laws, including, without limitation, export licensing requirements, end user, end-use and end-destination restrictions, prohibitions on dealings with sanctioned individuals and entities, including but not limited to persons on the Office of Foreign Assets Control's Specially Designated Nationals and Blocked Persons List, or the U.S. Department of Commerce Denied Persons List. You represent and warrant that You are not the subject or target of, and that You are not located in a country or territory (including without limitation, North Korea, Cuba, Iran, Syria, and Crimea) that is the subject or target of economic sanctions of the United States, European Union or other applicable jurisdictions; and\nF. Comply with all Third Party Terms (as defined in Section 5 below).\n\n2.2. Except as otherwise permitted by this EULA or by mandatory law (meaning a law that the parties cannot change by contract), You must not, and must not allow Your Permitted Third Parties, to do the following:\n\nA. Modify or remove any proprietary notices or markings on or in the Software;\nB. Transfer License Keys to any other person or entity;\nC. Download Updates from Licensor or an authorized provider unless You have a valid support agreement;\nD. Install Updates on Enterprise Products (e.g., server, networking, storage, integrated solutions, and data protection appliances) that have gone end of service life unless Licensor otherwise agrees in writing;\nE. Install and operate counterfeit versions of Software (i.e. software provided by anyone other than Dell or an authorized representative of Dell) on Dell hardware;\nF. Violate or circumvent any technological use restrictions in the Software;\nG. Sell, loan, rent, lease, sublicense, distribute or encumber (e.g., by lien, security interest, etc.) the Software;\nH. Use any trademarks or service marks of Licensor, its affiliates or suppliers;\nI. Provide access to the Software or allow use by any third party, other than Permitted Third Parties, without Licensor's prior written consent;\nJ. Copy, republish, upload, post or transmit the Software in any way;\nK. Modify or create derivative works based upon the Software, or decompile, disassemble, reverse engineer, or otherwise attempt to derive source code from the Software, in whole or in part;\nL. Attack or attempt to undermine the security, integrity, authentication or intended operation of the Software;\nM. Use the Software on a service bureau, rental or managed services basis;\nN. Create or permit others to create Internet \"links\" to the Software or \"frame\" or \"mirror\" the Software on any other server, wireless or Internet-based device;\nO. Use the Software to create a competitive offering;\nP. Use the Software to create other software, products or technologies unless the Software contains Development Tools as described in Section 7;\nQ. Share or publish the results of any benchmarking of the Software without Dell’s prior written consent;\nR. Use the Software for high risk activities, including without limitation online control systems, or use in hazardous environments requiring fail-safe performance, such as in the operation of nuclear facilities, aircraft navigation or communications systems, air traffic control, life support, weapons systems or in any other device or system in which function or malfunction of the Software could result in death, personal injury or physical or environmental damage;\nS. Use the Software for activities related to weapons of mass destruction, including but not limited to, activities related to the design, development, production or use of nuclear materials, nuclear facilities, nuclear weapons, missiles or support of missile projects, or chemical or biological weapons; and\nT. Assign this EULA, or any right or obligation under this EULA, or delegate any performance, without Dell’s prior written consent, unless You are transferring the Software in accordance with the Transferability Section 3 below. Even if Dell consents to an assignment, You remain responsible for all obligations under this EULA that You incurred prior to the effective date of the assignment.\n\n3. Transferability. If You are an individual consumer, You may transfer the Software on a permanent basis as part of the sale or transfer of the hardware system on which the Software is loaded, provided that You retain no copies of any version of the Software. If You are a business entity, You may not transfer the Software to another person or entity without the express written permission of Dell, unless allowed by applicable law stating that transfer may not be restricted (note that a transfer fee may be charged by Dell).\n\n4. Compliance Verification. If You are a business entity, You must: (a) maintain and use systems and procedures that allow You to accurately track Your use of the Software; (b) certify to Dell in writing, at Dell’s request, that Your use of Software fully complies with this EULA, indicating the number of Software licenses deployed at that time; and (c) cooperate fully and timely with Dell and its auditors if Dell notifies You that it will conduct an audit to confirm Your compliance with this EULA. Any such audit will be conducted during normal business hours. If Dell determines that You have over-deployed Software, You agree to immediately purchase licenses at the then-current list price to bring Your use into compliance. If You over-deployed Software by 5% or more, then You agree to pay the total cost of the audit, in addition to any other liabilities You may have.\n\n5. Third Party Software. “Third Party Software” is software, including open source software, that is contained in or provided with the Software and is licensed by a third party under its own terms of use (“Third Party Terms”). Third Party Software is governed solely by the applicable Third Party Terms and not by this EULA. Third Party Terms may be provided with the Third Party Software or may be included in the OST Table. For certain open source software, the applicable Third Party Terms may entitle You to obtain the corresponding source files. You may find corresponding source files for such open source software at //opensource.dell.com/ or in the “About” or “Read Me” file of Software, or other locations that Licensor may specify.\n\n6. Free Software. “Free Software” means Software that is provided to You without additional charge (e.g., scripts that enable customer installation; code that enables You to monitor Your use of Dell products; etc.).  You may only use Free Software on or with equipment or in the operating environments for which Dell has designed that Free Software to operate. Licensor may terminate any license to Free Software at any time in its sole discretion. You may not transfer Free Software to anyone else.\n\n7. Development Tools. If the Software includes development tools, such as scripting tools, APIs or sample scripts (collectively “Development Tools”), and unless there is a separate agreement between You and Dell or Licensor for the Development Tools, You may use such Development Tools to create new scripts and code for the purpose of customizing Your use of the Software (within the parameters set forth in this EULA and in the Development Tools themselves) and for no other purpose.\n\n8. Evaluation Software. This EULA does not license use of Software for evaluation purposes (“Evaluation Software”) except to the extent these terms may be invoked by the separate license terms and conditions accompanying that Evaluation Software.\n\n9. Support Services Not Included. If You purchase maintenance and support for Software, such services are identified in Your Order and will be provided under a separate services agreement.\n\n10. Termination. For Subscription Software, this EULA automatically terminates at the end of Your subscription period unless You renew Your rights. Licensor may terminate this EULA if You or a Permitted Third Party commits a material breach of this EULA and fails to cure such breach within thirty (30) days following Your receipt of notice of the breach from Dell. This right to terminate applies accordingly if Dell or the Reseller from whom You made Your purchase does not receive timely payment for the licenses to the Software or for the hardware on which the Software is loaded, if any. When this EULA terminates, all licenses granted automatically terminate and You must immediately cease use of the Software and return or destroy all copies of the Software. Except as otherwise agreed by Dell, You will not get a refund from Dell if this EULA is terminated. Rights and obligations under Sections of this EULA that, by their nature should survive, will survive termination, as well as obligations for payment.\n\n11. Warranty Disclaimer. Under this EULA, Licensor provides neither any warranties for the Software nor does it provide support for the Software. Your rights under any warranties and any support entitlements for Software acquired for a fee are solely between You and the Reseller or Dell entity from whom You procured the Software and related support, and are defined under the commercial terms agreed between You and such selling entity. Accordingly, except as otherwise offered by Dell, the Software is provided by Licensor under this EULA “As Is” without any warranties or conditions. To the maximum extent permitted by applicable law, Licensor, on behalf of itself and its affiliates and suppliers: (a) makes no express warranties or conditions related to the Software; (b) disclaims all implied warranties and conditions related to the Software, including merchantability, fitness for a particular purpose, title, and non-infringement; and (c) disclaims any warranty or condition arising by statute, operation of law, course of dealing or performance, or usage of trade. Licensor does not warrant uninterrupted or error-free operation of the Software. This Section does not affect or modify any of the statutory warranty rights that are available to consumers.\n\n12. Limitation of Liability.\n\n12.1. Limitations on Damages. The limitations, exclusions and disclaimers set forth in a Pre-Existing Agreement or Dell Terms of Sale that applies your Order (in each case, the “Order Terms”) shall apply to all disputes, claims or controversies (whether in contract, tort or otherwise) between You and Licensor or Dell related to or arising out of: (a) this EULA; (b) the breach, termination or validity of this EULA; or (c) any Orders (each, a “Dispute”). In the absence of applicable Order Terms, the terms set forth in this Section shall apply to all Disputes.\n \nThe terms of this Section are agreed allocations of risk constituting part of the consideration for Licensor’s licensing of Software to You and will apply even if there is a failure of the essential purpose of any limited remedy, and regardless of whether a party has been advised of the possibility of the liabilities. If applicable law prohibits any portion of the limits on liability stated below, the parties agree that such limitation will be automatically modified, but only to the extent required to make the limitation compliant with applicable law.\n\nA. Limitation on Direct Damages. Except for Your obligation to pay for the Software, or for Your violation of the License Grant and License Conditions set forth herein or of Licensor’s or Dell’s intellectual property rights, the total liability of You and Licensor (including Licensor’s affiliates and suppliers) arising out of any Dispute is limited to the amount You paid for the Software that is the subject of the Dispute, but excluding amounts received as reimbursement of expenses or payment of taxes. Notwithstanding anything otherwise set forth above, Licensor and its affiliates have no liability for any direct damages resulting from Your use or attempted use of Third Party Software, Free Software or Development Tools.\n\nB. Disclaimer of Certain Other Damages. Except for Your obligation to pay for the Software, or for Your violation of the License Grant and License Conditions set forth herein or of Licensor’s or Dell’s intellectual property rights, neither You nor Licensor (including Licensor’s affiliates and suppliers) shall have any liability under this EULA for special, consequential, exemplary, punitive, incidental or indirect damages, or for lost profits, loss of revenue, loss or corruption of data, loss of use or procurement of substitute products or services.\n\n12.2. Regular Backups. You are solely responsible for Your data. You must back up Your data before Licensor or a third party performs any remedial, upgrade or other work on Your production systems. You acknowledge that it is a best practice to have more than one back up copy of Your data. If applicable law prohibits exclusion of liability for lost data, then Licensor will only be liable for the cost of the typical effort to recover the lost data from Your last available back up.\n\n12.3. Limitation Period. Except as stated in this Section, all claims must be made within the period specified by applicable law. If the law allows the parties to specify a shorter period for bringing claims, or the law does not provide a time at all, then claims must be made within 18 months after the cause of action accrues.\n\n13. Additional Terms.\n\n13.1. Notices. The parties will provide all notices under this EULA in writing. Unless provided otherwise in an Order, You must provide notices to the local Dell entity in Your Order, or, if Your Order is not with a Dell entity, by e-mail to Dell_Legal_Notices@dell.com.\n\n13.2. Waiver and Severability. Failure to enforce a provision of this EULA will not constitute a waiver of that or any other provision of this EULA. If a court of competent jurisdiction determines that any part of this EULA or document that incorporates this EULA by reference is unenforceable, that ruling will not affect the validity of all remaining parts.\n\n13.3. Modifications. This EULA may only be modified in writing signed by both parties; provided, however, that Licensor may, in its sole discretion, update the Licensor Table, the OST Table, the UOM Terms and the Subscription Terms at any time. Any changes that Licensor makes to the Licensor Table, the OST Table, the UOM Terms or the Subscription Terms will only apply to Orders that occur after Licensor posts those changes online.\n \n13.4. Governing Law and Jurisdiction. If You obtained the Software directly from Dell, then the governing law and jurisdiction provisions set forth in Your Order Terms shall apply to this EULA. Otherwise the following shall apply:\n\nA. Subject to Section 13.4 D and 13.5, if You are domiciled in the United States or Canada: (1) this EULA and any Dispute is governed by the laws of the State of Texas (excluding the conflicts of law rules) and the federal laws of the United States; and (2) to the extent permitted by law, the state and federal courts located in Texas will have exclusive jurisdiction for any Dispute. Both parties agree to submit to the personal jurisdiction of the state and federal courts located within Travis or Williamson County, Texas, and agree to waive any and all objections to the exercise of jurisdiction over the parties by those courts and to venue in those courts.\n\nB. Subject to Section 13.4 D, if You are domiciled outside of the United States or Canada: (1) this EULA and any Dispute is governed by the substantive laws in force in the country in which the Licensor is located (as indicated in the Licensor Table located at www.dell.com/swlicensortable), without regard to its conflict of law rules; and (2) the exclusive place of jurisdiction for any Dispute shall be in such country.\n\nC. In any event, neither the U.N. Convention on Contracts for the International Sale of Goods, nor the Uniform Computer Information Transaction Act shall apply to this EULA or any Dispute.\n\nD. If You are an individual consumer, this Section 13.4 does not deprive You of the protection afforded to You by the provisions of mandatory consumer protections laws that are applicable to You, nor does it prevent you from seeking remedies or enforcing your rights as a consumer under such laws.\n\n13.5. Dispute Resolution and Binding Individual (non-class) Arbitration. This Section only applies if You are an individual consumer that resides in (or obtained the Software in) the United States or Canada. All Disputes shall be resolved exclusively and finally by binding individual arbitration. This means You and Licensor waive any right to litigate disputes in a court or before a jury and neither You nor Licensor shall be entitled to join, consolidate, or include any claims belonging to or alleged or arising from, by or on behalf of any third party to an arbitration brought hereunder, or to arbitrate any claim as a class action, class representative, class member, or in a private attorney general capacity. If You reside in (or obtained the Software in) the United States, the arbitration will be administered by the American Arbitration Association (AAA), or JAMS. If You reside in (or obtained the Software in) Canada, arbitration will be at ADR Chambers pursuant to the general ADR Chambers Rules for Arbitration located at www.adrchambers.com. The arbitration shall be conducted in the English language. The arbitration panel shall have exclusive authority to resolve any arbitrability issues including any dispute over this EULA or this arbitration provision’s scope, application, meaning and enforceability. The arbitration panel shall be empowered to grant whatever relief would be available in court, including without limitation preliminary relief, injunctive relief and specific performance. Any award of the arbitration panel shall be final and binding immediately when rendered, and judgment on the award may be entered in any court of competent jurisdiction. If any portion of this arbitration agreement is found unenforceable, the unenforceable portion shall be severed and the remaining arbitration terms shall be enforced (but in no event will there be a class arbitration). Consumer claimants (individuals whose transaction is intended for personal, family or household use) may elect to pursue their claims in small-claims court rather than arbitration. Licensor will be responsible for paying any individual consumer's arbitration/arbitrator fees. Notwithstanding the foregoing, Licensor may apply to any relevant government agency or any court of competent jurisdiction to preserve its rights under this EULA and to obtain any injunctive or preliminary relief, or any award of specific performance, to which it may be entitled, either against You or against a non-party; provided, however, that no such administrative or judicial authority shall have the right or power to render a judgment or award (or to enjoin the rendering of an arbitral award) for damages that may be due to or from either party under this EULA, which right and power shall be reserved exclusively to an arbitration panel proceeding in accordance herewith.\n\n13.6. Third Party Rights. Other than as expressly set out in this EULA, this EULA does not create any rights for any person who is not a party to it, and no person who is not a party to this EULA may enforce any of its terms or rely on any exclusion or limitation contained in it.\n\n13.7 Entire Agreement. You acknowledge that You have read this EULA, that You understand it, that You agree to be bound by its terms, and that this EULA, along with the Order Terms into which this EULA may be incorporated (as applicable), is the complete and exclusive statement of the agreement between You and Licensor regarding Your use of the Software. All content referenced in this EULA by hyperlink is incorporated into this EULA in its entirety and is available to You in hardcopy form upon Your request. The pre-printed terms of Your purchase order or any other document that is not issued or signed by Licensor or Dell do not apply to Software. You represent that You did not rely on any representations or statements that do not appear in this EULA when accepting this EULA.\n\n\n\n(Dell EULA rev 24FEB2020)",
                          "ServiceTag": "ABCDEFG",
                          "LicenseExpiry": "Never",
                          "DeviceId": "20210624140433e8"
                        }
                      ],
                      "Licenses@odata.count": 1,
                      "@odata.id": "/redfish/v1/SFSSApp/Licenses?$expand=Licenses",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#Licenses",
                      "@odata.type": "#LicensesCollection.LicensesCollection"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSSApp-Licenses?$expand=Licenses",
        "description": "This API retrieves detailed license information from the system.",
        "security": [
          {
            "BasicAuth": []
          }
        ]
      },
      "parameters": []
    },
    "/redfish/v1/SFSSApp/Restores('ID')": {
      "get": {
        "summary": "Get specific restore",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "ID": "d25d9f7e-8ae0-490a-94fe-071e8b2fdf60",
                      "ImageServerLocation": "100.94.72.166:/home/dell/temp_images/some_uuid.tar.gz",
                      "StatusMessage": "Successfully restored",
                      "ImageServerPassword": "dKc4igmRo9c5niXxRBdRsN45PBuFq2P2b+FfMf4D9DPXwKU05vYRW2vViSAfGamm",
                      "Status": "Success",
                      "TimeStamp": "1626334910.8032453",
                      "TransportType": "SCP",
                      "ImageServerUserName": "dell",
                      "@odata.id": "/redfish/v1/SFSSApp/Restores('d25d9f7e-8ae0-490a-94fe-071e8b2fdf60')",
                      "@odata.type": "#Restores.Restores",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#Restores/Restores/$entity"
                    }
                  },
                  "properties": {
                    "ID": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Restore identifier"
                    },
                    "ImageServerLocation": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Remote server location where the backup file is available; only IPv4 communication is supported"
                    },
                    "StatusMessage": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Detailed status message of the restore operation"
                    },
                    "ImageServerPassword": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Password to access the remote server"
                    },
                    "Status": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Status of the restore operation; possible values include Success and Failure"
                    },
                    "TimeStamp": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Date and time of the restore operation; date in dd/mm/yyyy format and time in hh:mm:ss format"
                    },
                    "TransportType": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Transport type used to copy the backup file from the remote server; possible values include SCP, HTTP, HTTPS, and SFTP"
                    },
                    "ImageServerUserName": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Username to access the remote server"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "ID",
                    "ImageServerLocation",
                    "StatusMessage",
                    "ImageServerPassword",
                    "Status",
                    "TimeStamp",
                    "TransportType",
                    "ImageServerUserName",
                    "@odata.id",
                    "@odata.type",
                    "@odata.context"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "ID": "d25d9f7e-8ae0-490a-94fe-071e8b2fdf60",
                      "ImageServerLocation": "100.94.72.166:/home/dell/temp_images/some_uuid.tar.gz",
                      "StatusMessage": "Successfully restored",
                      "ImageServerPassword": "dKc4igmRo9c5niXxRBdRsN45PBuFq2P2b+FfMf4D9DPXwKU05vYRW2vViSAfGamm",
                      "Status": "Success",
                      "TimeStamp": "1626334910.8032453",
                      "TransportType": "SCP",
                      "ImageServerUserName": "Dell",
                      "@odata.id": "/redfish/v1/SFSSApp/Restores('d25d9f7e-8ae0-490a-94fe-071e8b2fdf60')",
                      "@odata.type": "#Restores.Restores",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#Restores/Restores/$entity"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSSApp-Restores('ID')",
        "description": "This API retrieves information about a restore operation based on the specified restore id.",
        "security": [
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/redfish/v1/SFSSApp/CDCHealthStatus": {
      "get": {
        "summary": "Get CDC health",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "CDCHealthStatus": [
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/CDCHealthStatus('1')"
                        }
                      ],
                      "CDCHealthStatus@odata.count": 1,
                      "@odata.id": "/redfish/v1/SFSSApp/CDCHealthStatus",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#CDCHealthStatus",
                      "@odata.type": "#CDCHealthStatusCollection.CDCHealthStatusCollection"
                    }
                  },
                  "properties": {
                    "CDCHealthStatus": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "Health status of the CDC instance; possible values include Ok, Warning, and Critical",
                      "items": {
                        "type": "object",
                        "properties": {
                          "@odata.id": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "@odata.id"
                        ]
                      }
                    },
                    "CDCHealthStatus@odata.count": {
                      "type": "number",
                      "description": "Number of health status records (one for each CDC instance)"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "CDCHealthStatus",
                    "CDCHealthStatus@odata.count",
                    "@odata.id",
                    "@odata.context",
                    "@odata.type"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "CDCHealthStatus": [
                        {
                          "@odata.id": "/redfish/v1/SFSSApp/CDCHealthStatus('1')"
                        }
                      ],
                      "CDCHealthStatus@odata.count": 1,
                      "@odata.id": "/redfish/v1/SFSSApp/CDCHealthStatus",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#CDCHealthStatus",
                      "@odata.type": "#CDCHealthStatusCollection.CDCHealthStatusCollection"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSSApp-CDCHealthStatus",
        "description": "This API retrieves health status information of the CDC instances running in SFSS.",
        "security": [
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/redfish/v1/SFSSApp/SosReports('ID')": {
      "get": {
        "summary": "Get specific SOS report",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "ID": "d25d9f7e-8ae0-490a-94fe-071e8asdef",
                      "FileLocation": "100.94.72.166:/home/dell/temp_images/",
                      "StatusMessage": "Successfully backed up",
                      "ServerPassword": "r8p7yiHCeqHp59bN/X7GAjZij0POAeBafsxfj8dekbloWYIevbxpMvieLuwsb/+C",
                      "Status": "Success",
                      "TimeStamp": "1626734910.8032453",
                      "TransportType": "SCP",
                      "ServerUserName": "dell",
                      "@odata.id": "/redfish/v1/SFSSApp/SosReports('d25d9f7e-8ae0-490a-94fe-071e8asdef')",
                      "@odata.type": "#SosReports.SosReports",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#SosReports/SosReports/$entity"
                    }
                  },
                  "properties": {
                    "ID": {
                      "type": "string",
                      "minLength": 1,
                      "description": "SOS report ID"
                    },
                    "FileLocation": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Location of the remote server to download the SOS report"
                    },
                    "StatusMessage": {
                      "type": "string",
                      "minLength": 1,
                      "description": "A detailed message on the status of the download operation"
                    },
                    "ServerPassword": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Password to access the remote server"
                    },
                    "Status": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Status of the SOS report download operation"
                    },
                    "TimeStamp": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Date and time of the SOS report download operation; the date is of dd/mm/yyyy format and time is of hh:mm:ss format"
                    },
                    "TransportType": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Transport type used for file transfer; possible values include SCP, HTTP, HTTPS, and SFTP"
                    },
                    "ServerUserName": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Username to access the remote server"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "ID",
                    "FileLocation",
                    "StatusMessage",
                    "ServerPassword",
                    "Status",
                    "TimeStamp",
                    "TransportType",
                    "ServerUserName",
                    "@odata.id",
                    "@odata.type",
                    "@odata.context"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "ID": "d25d9f7e-8ae0-490a-94fe-071e8asdef",
                      "FileLocation": "100.94.72.166:/home/dell/temp_images/",
                      "StatusMessage": "Successfully backed up",
                      "ServerPassword": "r8p7yiHCeqHp59bN/X7GAjZij0POAeBafsxfj8dekbloWYIevbxpMvieLuwsb/+C",
                      "Status": "Success",
                      "TimeStamp": "1626734910.8032453",
                      "TransportType": "SCP",
                      "ServerUserName": "dell",
                      "@odata.id": "/redfish/v1/SFSSApp/SosReports('d25d9f7e-8ae0-490a-94fe-071e8asdef')",
                      "@odata.type": "#SosReports.SosReports",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#SosReports/SosReports/$entity"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSSApp-SosReports('ID')",
        "description": "This API retrieves details about the SOS report based on the specified SOS report ID.",
        "security": [
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/redfish/v1/SFSSApp/Backups('ID')": {
      "get": {
        "summary": "Get specific backup",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "ID": "d25d9f7e-8ae0-490a-94fe-071e8asdef",
                      "ImageServerLocation": "100.94.72.166:/home/dell/temp_images/",
                      "StatusMessage": "Successfully backed up",
                      "ImageServerPassword": "Uf3qPJR2UAby42Keqd1NhU5BbtoHDVr+3IVkJJPzVi1Dc5ilyWlGTi/5ZbDprwwE",
                      "Status": "Success",
                      "TimeStamp": "1626734910.8032453",
                      "TransportType": "SCP",
                      "ImageServerUserName": "dell",
                      "@odata.id": "/redfish/v1/SFSSApp/Backups('d25d9f7e-8ae0-490a-94fe-071e8asdef')",
                      "@odata.type": "#Backups.Backups",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#Backups/Backups/$entity"
                    }
                  },
                  "properties": {
                    "ID": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Backup identifier"
                    },
                    "ImageServerLocation": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Remote server location where the backup file is copied to; only IPv4 communication is supported"
                    },
                    "StatusMessage": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Detailed status message of the backup operation"
                    },
                    "ImageServerPassword": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Password to access the remote server"
                    },
                    "Status": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Status of the backup; possible values include Success, Failure, NotStarted, InProgress"
                    },
                    "TimeStamp": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Date and time at which the backup was taken; date in mm/dd/yyyy format and time in hh:mm:ss format"
                    },
                    "TransportType": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Transport type used to copy the backup file to the remote server; possible values include SCP, HTTP, HTTPS, and SFTP"
                    },
                    "ImageServerUserName": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Username to access the remote server"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "ID",
                    "ImageServerLocation",
                    "StatusMessage",
                    "ImageServerPassword",
                    "Status",
                    "TimeStamp",
                    "TransportType",
                    "ImageServerUserName",
                    "@odata.id",
                    "@odata.type",
                    "@odata.context"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "ID": "d25d9f7e-8ae0-490a-94fe-071e8asdef",
                      "ImageServerLocation": "100.94.72.166:/home/dell/temp_images/",
                      "StatusMessage": "Successfully backed up",
                      "ImageServerPassword": "Uf3qPJR2UAby42Keqd1NhU5BbtoHDVr+3IVkJJPzVi1Dc5ilyWlGTi/5ZbDprwwE",
                      "Status": "Success",
                      "TimeStamp": "1626734910.8032453",
                      "TransportType": "SCP",
                      "ImageServerUserName": "Dell",
                      "@odata.id": "/redfish/v1/SFSSApp/Backups('d25d9f7e-8ae0-490a-94fe-071e8asdef')",
                      "@odata.type": "#Backups.Backups",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#Backups/Backups/$entity"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSSApp-Backups('ID')",
        "description": "This API retrieves information about a backup operation based on the specified backup id.",
        "security": [
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/redfish/v1/SFSSApp/FoundationalConfigs('InstanceIdentifer')": {
      "get": {
        "summary": "Get specific foundational configuration",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "DiscoveryControllerPort": "8009",
                      "InstanceIdentifier": "1",
                      "NQN": "nqn.1988-11.com.dell:SFSS:1:20210707023327e8",
                      "@odata.id": "/redfish/v1/SFSSApp/FoundationalConfigs('1')",
                      "@odata.type": "#FoundationalConfigs.FoundationalConfigs",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#FoundationalConfigs/FoundationalConfigs/$entity"
                    }
                  },
                  "properties": {
                    "DiscoveryControllerPort": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Port on which the CDC listens for mDNS queries; default is 8009"
                    },
                    "InstanceIdentifier": {
                      "type": "string",
                      "minLength": 1,
                      "description": "CDC instance identifier"
                    },
                    "NQN": {
                      "type": "string",
                      "minLength": 1,
                      "description": "A unique NVMe Qualified Name (NQN) that is used to identify the CDC instance"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "DiscoveryControllerPort",
                    "InstanceIdentifier",
                    "NQN",
                    "@odata.id",
                    "@odata.type",
                    "@odata.context"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "DiscoveryControllerPort": "8009",
                      "InstanceIdentifier": "1",
                      "NQN": "nqn.1988-11.com.dell:SFSS:1:20210707023327e8",
                      "@odata.id": "/redfish/v1/SFSSApp/FoundationalConfigs('1')",
                      "@odata.type": "#FoundationalConfigs.FoundationalConfigs",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#FoundationalConfigs/FoundationalConfigs/$entity"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSSApp-FoundationalConfigs('InstanceIdentifier')",
        "description": "This API retrieves detailed foundational configuration information based on the specified instance identifier.",
        "security": [
          {
            "BasicAuth": []
          }
        ]
      },
      "parameters": []
    },
    "/redfish/v1/SFSSApp/SosReports?$expand=SosReports": {
      "get": {
        "summary": "Get all SOS reports",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "SosReports": [
                        {
                          "ID": "d25d9f7e-8ae0-490a-94fe-071e8asdef",
                          "FileLocation": "100.94.72.166:/home/dell/temp_images/",
                          "StatusMessage": "Successfully backed up",
                          "ServerPassword": "r8p7yiHCeqHp59bN/X7GAjZij0POAeBafsxfj8dekbloWYIevbxpMvieLuwsb/+C",
                          "Status": "Success",
                          "TimeStamp": "1626734910.8032453",
                          "TransportType": "SCP",
                          "ServerUserName": "dell",
                          "@odata.id": "/redfish/v1/SFSSApp/SosReports('d25d9f7e-8ae0-490a-94fe-071e8asdef')",
                          "@odata.type": "#SosReports.SosReports",
                          "@odata.context": "/redfish/v1/SFSSApp/$metadata#SosReports/SosReports/$entity"
                        }
                      ],
                      "SosReports@odata.count": 1,
                      "@odata.id": "/redfish/v1/SFSSApp/SosReports?$expand=SosReports",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#SosReports",
                      "@odata.type": "#SosReportsCollection.SosReportsCollection"
                    }
                  },
                  "properties": {
                    "SosReports": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "A collection of system information that includes configuration details and diagnostic information\n",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ID": {
                            "type": "string",
                            "minLength": 1,
                            "description": "SOS report ID"
                          },
                          "FileLocation": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Location of the remote server to download the SOS report"
                          },
                          "StatusMessage": {
                            "type": "string",
                            "minLength": 1,
                            "description": "A detailed message on the status of the download operation"
                          },
                          "ServerPassword": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Password to access the remote server"
                          },
                          "Status": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Status of the SOS report download operation"
                          },
                          "TimeStamp": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Date and time of the SOS report download operation; the date is of mm/dd/yyyy format and time is of hh:mm:ss format"
                          },
                          "TransportType": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Transport type used for file transfer; possible values include SCP, HTTP, HTTPS, and SFTP"
                          },
                          "ServerUserName": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Username to access the remote server"
                          },
                          "@odata.id": {
                            "type": "string",
                            "minLength": 1
                          },
                          "@odata.type": {
                            "type": "string",
                            "minLength": 1
                          },
                          "@odata.context": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "ID",
                          "FileLocation",
                          "StatusMessage",
                          "ServerPassword",
                          "Status",
                          "TimeStamp",
                          "TransportType",
                          "ServerUserName",
                          "@odata.id",
                          "@odata.type",
                          "@odata.context"
                        ]
                      }
                    },
                    "SosReports@odata.count": {
                      "type": "number",
                      "description": "Number of SOS reports downloaded"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "SosReports",
                    "SosReports@odata.count",
                    "@odata.id",
                    "@odata.context",
                    "@odata.type"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "SosReports": [
                        {
                          "ID": "d25d9f7e-8ae0-490a-94fe-071e8asdef",
                          "FileLocation": "100.94.72.166:/home/dell/temp_images/",
                          "StatusMessage": "Successfully backed up",
                          "ServerPassword": "r8p7yiHCeqHp59bN/X7GAjZij0POAeBafsxfj8dekbloWYIevbxpMvieLuwsb/+C",
                          "Status": "Success",
                          "TimeStamp": "1626734910.8032453",
                          "TransportType": "SCP",
                          "ServerUserName": "Dell",
                          "@odata.id": "/redfish/v1/SFSSApp/SosReports('d25d9f7e-8ae0-490a-94fe-071e8asdef')",
                          "@odata.type": "#SosReports.SosReports",
                          "@odata.context": "/redfish/v1/SFSSApp/$metadata#SosReports/SosReports/$entity"
                        }
                      ],
                      "SosReports@odata.count": 1,
                      "@odata.id": "/redfish/v1/SFSSApp/SosReports?$expand=SosReports",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#SosReports",
                      "@odata.type": "#SosReportsCollection.SosReportsCollection"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSSApp-SosReports?$expand=SosReports",
        "description": "This API retrieves details about all the available SOS reports from SFSS application.",
        "security": [
          {
            "BasicAuth": []
          }
        ]
      },
      "parameters": []
    },
    "/redfish/v1/SFSSApp/Events('ID')": {
      "get": {
        "summary": "Get specific event",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "Args": [
                        "1",
                        "NQN1"
                      ],
                      "CDCInstance": "1",
                      "EEMI": "SVEP0004",
                      "HostName": "J104XC3",
                      "Message": "CDC Instance 1: Subsystem NQN1 is added.",
                      "OriginOfCondition": [
                        "ZoneMember"
                      ],
                      "Severity": "Informational",
                      "Source": "NZ-CENTRAL",
                      "SourceSubType": "Zone",
                      "timeStamp": "2021-05-14 15:08:07.864327",
                      "@odata.id": "/redfish/v1/SFSSApp/Events('16')",
                      "@odata.type": "#Events.Events",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#Events/Events/$entity"
                    }
                  },
                  "properties": {
                    "Args": {
                      "type": "array",
                      "description": "Required arguments for the specified event",
                      "items": {
                        "type": "string"
                      }
                    },
                    "CDCInstance": {
                      "type": "string",
                      "minLength": 1,
                      "description": "CDC instance identifier"
                    },
                    "EEMI": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Enhanced Event Message Initiative (EEMI) Message Code "
                    },
                    "HostName": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Hostname of the SFSS VM"
                    },
                    "Message": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Message summary"
                    },
                    "OriginOfCondition": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "Severity": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Severity of the system message; possible values include Critical, Warning, and Informational"
                    },
                    "Source": {
                      "type": "string",
                      "minLength": 1,
                      "description": "SFSS service that is responsible for handling the event"
                    },
                    "SourceSubType": {
                      "type": "string",
                      "minLength": 1,
                      "description": "The module within the SFSS service that is responsible for handling the event"
                    },
                    "timeStamp": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Date and time at which the event occurred; date in dd/mm/yyyy format and time in hh:mm:ss format"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "Args",
                    "CDCInstance",
                    "EEMI",
                    "HostName",
                    "Message",
                    "OriginOfCondition",
                    "Severity",
                    "Source",
                    "SourceSubType",
                    "timeStamp",
                    "@odata.id",
                    "@odata.type",
                    "@odata.context"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Args": [
                        "1",
                        "NQN1"
                      ],
                      "CDCInstance": "1",
                      "EEMI": "SVEP0004",
                      "HostName": "J104XC3",
                      "Message": "CDC Instance 1: Subsystem NQN1 is added.",
                      "OriginOfCondition": [
                        "ZoneMember"
                      ],
                      "Severity": "Informational",
                      "Source": "NZ-CENTRAL",
                      "SourceSubType": "Zone",
                      "timeStamp": "2021-05-14 15:08:07.864327",
                      "@odata.id": "/redfish/v1/SFSSApp/Events('16')",
                      "@odata.type": "#Events.Events",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#Events/Events/$entity"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSSApp-Events('ID')",
        "description": "This API retrieves detailed event information based on the specified event ID.",
        "security": [
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/redfish/v1/SFSSApp/UserActivityAudit('ID')": {
      "get": {
        "summary": "Get specific user activity",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "CDCInstance": "APP",
                      "HTTPCode": "201 Created",
                      "Operation": "PATCH",
                      "Payload": "{\"InstanceIdentifier\":\"1\",\"Interfaces\":[\"ens192\"]}",
                      "SourceIP": "127.0.0.1",
                      "TimeStamp": "2021-06-28 08:32:59.186355",
                      "URL": "http://stfs-infra/redfish/v1/SFSSApp/CDCInstanceManagers('1')",
                      "UserAgent": "curl/7.64.0",
                      "UserName": "MENU_USER",
                      "UserRole": "admin",
                      "@odata.id": "/redfish/v1/SFSSApp/UserActivityAudit('1')",
                      "@odata.type": "#UserActivityAudit.UserActivityAudit",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#UserActivityAudit/UserActivityAudit/$entity"
                    }
                  },
                  "properties": {
                    "CDCInstance": {
                      "type": "string",
                      "minLength": 1,
                      "description": "CDC instance identifier"
                    },
                    "HTTPCode": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Response code that indicates whether the user activity is successfully completed or not "
                    },
                    "Operation": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Operation performed by the user "
                    },
                    "Payload": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Information provided by the user for the specific user activity"
                    },
                    "SourceIP": {
                      "type": "string",
                      "minLength": 1,
                      "description": "IP address of the system from which the specific user activity is performed"
                    },
                    "TimeStamp": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Date and time at which the operation was performed; date in dd/mm/yyyy format and time in hh:mm:ss format"
                    },
                    "URL": {
                      "type": "string",
                      "minLength": 1,
                      "description": "RESTAPI URL that is used for the specific user activity"
                    },
                    "UserAgent": {
                      "type": "string",
                      "minLength": 1
                    },
                    "UserName": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Username of the user who performed the operation"
                    },
                    "UserRole": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Role of the user"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "CDCInstance",
                    "HTTPCode",
                    "Operation",
                    "Payload",
                    "SourceIP",
                    "TimeStamp",
                    "URL",
                    "UserAgent",
                    "UserName",
                    "UserRole",
                    "@odata.id",
                    "@odata.type",
                    "@odata.context"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "CDCInstance": "APP",
                      "HTTPCode": "201 Created",
                      "Operation": "PATCH",
                      "Payload": "{\"InstanceIdentifier\":\"1\",\"Interfaces\":[\"ens192\"]}",
                      "SourceIP": "127.0.0.1",
                      "TimeStamp": "2021-06-28 08:32:59.186355",
                      "URL": "http://stfs-infra/redfish/v1/SFSSApp/CDCInstanceManagers('1')",
                      "UserAgent": "curl/7.64.0",
                      "UserName": "MENU_USER",
                      "UserRole": "admin",
                      "@odata.id": "/redfish/v1/SFSSApp/UserActivityAudit('1')",
                      "@odata.type": "#UserActivityAudit.UserActivityAudit",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#UserActivityAudit/UserActivityAudit/$entity"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSSApp-UserActivityAudit('ID')",
        "description": "This API retrieves detailed user activity information based on the specified audit identifier.",
        "security": [
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/redfish/v1/SFSSApp/CDCHealthStatus('ID')": {
      "get": {
        "summary": "Get specific CDC health",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "Health": "Warning",
                      "ReasonCode": [
                        "offline"
                      ],
                      "InstanceIdentifier": "1",
                      "@odata.id": "/redfish/v1/SFSSApp/CDCHealthStatus('1')",
                      "@odata.type": "#CDCHealthStatus.CDCHealthStatus",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#CDCHealthStatus/CDCHealthStatus/$entity"
                    }
                  },
                  "properties": {
                    "Health": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Health status of the CDC instance; possible values include Ok, Warning, and Critical"
                    },
                    "ReasonCode": {
                      "type": "array",
                      "description": "Reason for the CDC instance health to be in Warning or Critical state",
                      "items": {
                        "type": "string"
                      }
                    },
                    "InstanceIdentifier": {
                      "type": "string",
                      "minLength": 1,
                      "description": "CDC instance identifier"
                    },
                    "@odata.id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "@odata.context": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "Health",
                    "ReasonCode",
                    "InstanceIdentifier",
                    "@odata.id",
                    "@odata.type",
                    "@odata.context"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "Health": "Warning",
                      "ReasonCode": [
                        "offline"
                      ],
                      "InstanceIdentifier": "1",
                      "@odata.id": "/redfish/v1/SFSSApp/CDCHealthStatus('1')",
                      "@odata.type": "#CDCHealthStatus.CDCHealthStatus",
                      "@odata.context": "/redfish/v1/SFSSApp/$metadata#CDCHealthStatus/CDCHealthStatus/$entity"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-redfish-v1-SFSSApp-CDCHealthStatus('ID')",
        "description": "This API retrieves detailed health status of the specified CDC instance identifier.",
        "security": [
          {
            "BasicAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "SFSSApp": {
        "description": "This model lists the SFSS application details.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "DeploymentModel": "StandAlone",
            "Version": "1.0.0",
            "@odata.id": "/redfish/v1/SFSSApp",
            "@odata.type": "#SFSSApp.SFSSApp",
            "@odata.context": "/redfish/v1/$metadata#SFSSApp/SFSSApp/$entity"
          }
        },
        "examples": [
          {
            "DeploymentModel": "string",
            "Version": "string",
            "@odata.id": "string",
            "@odata.type": "string",
            "@odata.context": "string"
          }
        ],
        "title": "SFSSAPP",
        "properties": {
          "DeploymentModel": {
            "type": "string",
            "minLength": 1,
            "description": "Deployment model"
          },
          "Version": {
            "type": "string",
            "minLength": 1,
            "description": "Version of the SFSS application"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "CDC-Instance-Manager-POST": {
        "description": "This model configures a CDC instance.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "InstanceIdentifier": "1",
            "Interfaces": [
              "ens192"
            ],
            "CDCAdminState": "Enable",
            "DiscoverySvcAdminState": "Enable"
          }
        },
        "examples": [
          {
            "InstanceIdentifier": "1",
            "Interfaces": [
              "ens192"
            ],
            "CDCAdminState": "Enable",
            "DiscoverySvcAdminState": "Enable"
          },
          {
            "InstanceIdentifier": "1",
            "Interfaces": [
              "ens192"
            ],
            "CDCAdminState": "Enable",
            "DiscoverySvcAdminState": "Enable"
          }
        ],
        "title": "CDCInstanceManagerPOST",
        "properties": {
          "InstanceIdentifier": {
            "type": "string",
            "minLength": 1,
            "description": "CDC instance identifier"
          },
          "Interfaces": {
            "type": "array",
            "description": "Interface that is assigned to the CDC instance ",
            "items": {}
          },
          "CDCAdminState": {
            "type": "string",
            "minLength": 1,
            "description": "Administrative state of the CDC instance"
          },
          "DiscoverySvcAdminState": {
            "type": "string",
            "minLength": 1,
            "description": "Administrative state of the discovery service"
          }
        },
        "required": [
          "InstanceIdentifier",
          "Interfaces"
        ]
      },
      "CDC-Instance-Manager": {
        "description": "This model lists the CDC instances configured in SFSS.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "CDCInstanceManagers": [
              {
                "@odata.id": "/redfish/v1/SFSSApp/CDCInstanceManagers('1')"
              }
            ],
            "CDCInstanceManagers@odata.count": 1,
            "@odata.id": "/redfish/v1/SFSSApp/CDCInstanceManagers",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#CDCInstanceManagers",
            "@odata.type": "#CDCInstanceManagersCollection.CDCInstanceManagersCollection"
          }
        },
        "examples": [
          {
            "CDCInstanceManagers": [
              {
                "@odata.id": "/redfish/v1/SFSSApp/CDCInstanceManagers('1')"
              }
            ],
            "CDCInstanceManagers@odata.count": 1,
            "@odata.id": "/redfish/v1/SFSSApp/CDCInstanceManagers",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#CDCInstanceManagers",
            "@odata.type": "#CDCInstanceManagersCollection.CDCInstanceManagersCollection"
          }
        ],
        "title": "CDCInstanceManagerGET",
        "properties": {
          "CDCInstanceManagers": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "description": "List of all CDC instances configured in the SFSS VM",
            "items": {}
          },
          "CDCInstanceManagers@odata.count": {
            "type": "number",
            "description": "Number of CDC instances"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "CDCInstanceManagers",
          "CDCInstanceManagers@odata.count",
          "@odata.id",
          "@odata.context",
          "@odata.type"
        ]
      },
      "CDC-Instance-Manager-GET-ID": {
        "description": "This model lists the CDC instance based on the specified CDC instance ID.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "CDCAdminState": "Enable",
            "DiscoverySvcAdminState": "Enable",
            "InstanceIdentifier": "1",
            "Interfaces": [
              "ens161"
            ],
            "IpAddresses": [
              "100.94.72.181"
            ],
            "@odata.id": "/redfish/v1/SFSSApp/CDCInstanceManagers(\"1\")",
            "@odata.type": "#CDCInstanceManagers.CDCInstanceManagers",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#CDCInstanceManagers/CDCInstanceManagers/$entity"
          }
        },
        "examples": [
          {
            "CDCAdminState": "Enable",
            "DiscoverySvcAdminState": "Enable",
            "InstanceIdentifier": "1",
            "Interfaces": [
              "ens161"
            ],
            "IpAddresses": [
              "100.94.72.181"
            ],
            "@odata.id": "/redfish/v1/SFSSApp/CDCInstanceManagers(\"1\")",
            "@odata.type": "#CDCInstanceManagers.CDCInstanceManagers",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#CDCInstanceManagers/CDCInstanceManagers/$entity"
          },
          {
            "CDCAdminState": "Enable",
            "DiscoverySvcAdminState": "Enable",
            "InstanceIdentifier": "1",
            "ServiceNetworks": [
              "vn704",
              "vn804"
            ],
            "@odata.id": "/redfish/v1/SFSSApp/CDCInstanceManagers('1')",
            "@odata.type": "#CDCInstanceManagers.CDCInstanceManagers",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#CDCInstanceManagers/CDCInstanceManagers/$entity"
          }
        ],
        "title": "CDCInstanceManagerGET-ID",
        "properties": {
          "CDCAdminState": {
            "type": "string",
            "minLength": 1,
            "description": "Administrative state of the CDC instance"
          },
          "DiscoverySvcAdminState": {
            "type": "string",
            "minLength": 1,
            "description": "Administrative state of the discovery service"
          },
          "InstanceIdentifier": {
            "type": "string",
            "minLength": 1,
            "description": "CDC instance identifier"
          },
          "Interfaces": {
            "type": "array",
            "description": "Interface that is assigned to the CDC instance",
            "items": {}
          },
          "IpAddresses": {
            "type": "array",
            "description": "IP address assigned to the interface ",
            "items": {}
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "CDCAdminState",
          "DiscoverySvcAdminState",
          "InstanceIdentifier",
          "Interfaces",
          "IpAddresses",
          "@odata.id",
          "@odata.type",
          "@odata.context"
        ]
      },
      "CDC-Instance-Manager-PUT": {
        "description": "This model updates the CDC instance configuration.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "CDCAdminState": "Enable",
            "DiscoverySvcAdminState": "Enable",
            "InstanceIdentifier": "1",
            "Interfaces": [
              "ens192.50"
            ],
            "ServiceNetworks": [
              "vxlan95"
            ],
            "@odata.id": "/redfish/v1/SFSSApp/CDCInstanceManagers('1')",
            "@odata.type": "#CDCInstanceManagers.CDCInstanceManagers",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#CDCInstanceManagers/CDCInstanceManagers/$entity"
          }
        },
        "examples": [
          {
            "CDCAdminState": "Enable",
            "DiscoverySvcAdminState": "Enable",
            "InstanceIdentifier": "1",
            "Interfaces": [
              "ens192.50"
            ],
            "ServiceNetworks": [
              "vxlan95"
            ],
            "@odata.id": "/redfish/v1/SFSSApp/CDCInstanceManagers('1')",
            "@odata.type": "#CDCInstanceManagers.CDCInstanceManagers",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#CDCInstanceManagers/CDCInstanceManagers/$entity"
          }
        ],
        "title": "CDCInstanceManagerPUT",
        "properties": {
          "CDCAdminState": {
            "type": "string",
            "minLength": 1,
            "description": "Administrative state of the CDC instance "
          },
          "DiscoverySvcAdminState": {
            "type": "string",
            "minLength": 1,
            "description": "Administrative state of the discovery service"
          },
          "InstanceIdentifier": {
            "type": "string",
            "minLength": 1,
            "description": "CDC instance identifier"
          },
          "Interfaces": {
            "type": "array",
            "description": "Interface that is assigned to the CDC instance",
            "items": {}
          },
          "ServiceNetworks": {
            "type": "array",
            "items": {}
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "CDCAdminState",
          "DiscoverySvcAdminState",
          "InstanceIdentifier",
          "Interfaces",
          "ServiceNetworks",
          "@odata.id",
          "@odata.type",
          "@odata.context"
        ]
      },
      "CDC-Instance-Manager-ENUMs": {
        "description": "This model lists the supported enumerations for the CDC instance configuration.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "CDCAdminState": [
              "Enable",
              "Disable"
            ],
            "DiscoverySvcAdminState": [
              "Enable",
              "Disable"
            ],
            "Status": [
              "INIT",
              "INPROGRESS",
              "SUCCESS",
              "FAIL",
              "ABORT"
            ]
          }
        },
        "examples": [
          {
            "CDCAdminState": [
              "Enable",
              "Disable"
            ],
            "DiscoverySvcAdminState": [
              "Enable",
              "Disable"
            ],
            "Status": [
              "INIT",
              "INPROGRESS",
              "SUCCESS",
              "FAIL",
              "ABORT"
            ]
          }
        ],
        "title": "CDCInstanceManagerEnums",
        "properties": {
          "CDCAdminState": {
            "type": "array",
            "description": "Administrative state of the CDC instance; possible values include Enabled and Disabled",
            "items": {}
          },
          "DiscoverySvcAdminState": {
            "type": "array",
            "description": "Administrative state of the discovery service; possible values include Enabled and Disabled",
            "items": {}
          },
          "Status": {
            "type": "array",
            "description": "Status of the CDC instance; possible values include Init, InProgress, Success, Fail, and Abort",
            "items": {}
          }
        },
        "required": [
          "CDCAdminState",
          "DiscoverySvcAdminState",
          "Status"
        ]
      },
      "FoundationalConfigsGET": {
        "description": "This model lists the foundational configuration information.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "FoundationalConfigs": [
              {
                "@odata.id": "/redfish/v1/SFSSApp/FoundationalConfigs('2')"
              },
              {
                "@odata.id": "/redfish/v1/SFSSApp/FoundationalConfigs('1')"
              }
            ],
            "FoundationalConfigs@odata.count": 2,
            "@odata.id": "/redfish/v1/SFSSApp/FoundationalConfigs",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#FoundationalConfigs",
            "@odata.type": "#FoundationalConfigsCollection.FoundationalConfigsCollection"
          }
        },
        "examples": [
          {
            "FoundationalConfigs": [
              {
                "@odata.id": "/redfish/v1/SFSSApp/FoundationalConfigs('2')"
              },
              {
                "@odata.id": "/redfish/v1/SFSSApp/FoundationalConfigs('1')"
              }
            ],
            "FoundationalConfigs@odata.count": 2,
            "@odata.id": "/redfish/v1/SFSSApp/FoundationalConfigs",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#FoundationalConfigs",
            "@odata.type": "#FoundationalConfigsCollection.FoundationalConfigsCollection"
          }
        ],
        "title": "FoundationalConfigsGET",
        "properties": {
          "FoundationalConfigs": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "description": "Lists all the foundational configurations from the SFSS VM",
            "items": {}
          },
          "FoundationalConfigs@odata.count": {
            "type": "number",
            "description": "Number of foundational configurations present in the SFSS VM"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "FoundationalConfigs",
          "FoundationalConfigs@odata.count",
          "@odata.id",
          "@odata.context",
          "@odata.type"
        ]
      },
      "FoundationalConfigsGET-Expand": {
        "description": "This model lists detailed information about the foundational configuration.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "FoundationalConfigs": [
              {
                "DiscoveryControllerPort": "8009",
                "InstanceIdentifier": "2",
                "NQN": "nqn.1988-11.com.dell:SFSS:2:20210707135328e8",
                "@odata.id": "/redfish/v1/SFSSApp/FoundationalConfigs('2')",
                "@odata.type": "#FoundationalConfigs.FoundationalConfigs",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#FoundationalConfigs/FoundationalConfigs/$entity"
              },
              {
                "DiscoveryControllerPort": "8009",
                "InstanceIdentifier": "1",
                "NQN": "nqn.1988-11.com.dell:SFSS:1:20210707023327e8",
                "@odata.id": "/redfish/v1/SFSSApp/FoundationalConfigs('1')",
                "@odata.type": "#FoundationalConfigs.FoundationalConfigs",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#FoundationalConfigs/FoundationalConfigs/$entity"
              }
            ],
            "FoundationalConfigs@odata.count": 2,
            "@odata.id": "/redfish/v1/SFSSApp/FoundationalConfigs?$expand=FoundationalConfigs",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#FoundationalConfigs",
            "@odata.type": "#FoundationalConfigsCollection.FoundationalConfigsCollection"
          }
        },
        "examples": [
          {
            "FoundationalConfigs": [
              {
                "DiscoveryControllerPort": "8009",
                "InstanceIdentifier": "2",
                "NQN": "nqn.1988-11.com.dell:SFSS:2:20210707135328e8",
                "@odata.id": "/redfish/v1/SFSSApp/FoundationalConfigs('2')",
                "@odata.type": "#FoundationalConfigs.FoundationalConfigs",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#FoundationalConfigs/FoundationalConfigs/$entity"
              },
              {
                "DiscoveryControllerPort": "8009",
                "InstanceIdentifier": "1",
                "NQN": "nqn.1988-11.com.dell:SFSS:1:20210707023327e8",
                "@odata.id": "/redfish/v1/SFSSApp/FoundationalConfigs('1')",
                "@odata.type": "#FoundationalConfigs.FoundationalConfigs",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#FoundationalConfigs/FoundationalConfigs/$entity"
              }
            ],
            "FoundationalConfigs@odata.count": 2,
            "@odata.id": "/redfish/v1/SFSSApp/FoundationalConfigs?$expand=FoundationalConfigs",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#FoundationalConfigs",
            "@odata.type": "#FoundationalConfigsCollection.FoundationalConfigsCollection"
          }
        ],
        "title": "FoundationalConfigsGET-Expand",
        "properties": {
          "FoundationalConfigs": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "description": "A set of foundational configurations from the SFSS VM",
            "items": {
              "type": "object",
              "properties": {
                "DiscoveryControllerPort": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Port on which the CDC listens for mDNS queries; default is 8009"
                },
                "InstanceIdentifier": {
                  "type": "string",
                  "minLength": 1,
                  "description": "CDC instance identifier"
                },
                "NQN": {
                  "type": "string",
                  "minLength": 1,
                  "description": "A unique NVMe Qualified Name (NQN) that is used to identify the CDC instance"
                },
                "@odata.id": {
                  "type": "string",
                  "minLength": 1
                },
                "@odata.type": {
                  "type": "string",
                  "minLength": 1
                },
                "@odata.context": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "DiscoveryControllerPort",
                "InstanceIdentifier",
                "NQN",
                "@odata.id",
                "@odata.type",
                "@odata.context"
              ]
            }
          },
          "FoundationalConfigs@odata.count": {
            "type": "number",
            "description": "Number of foundational configurations (one for each CDC instance running on the SFSS VM)"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "FoundationalConfigs",
          "FoundationalConfigs@odata.count",
          "@odata.id",
          "@odata.context",
          "@odata.type"
        ]
      },
      "FoundationalConfigsGET-ID": {
        "description": "This model lists the foundational configuration based on the specified CDC instance ID.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "DiscoveryControllerPort": "8009",
            "InstanceIdentifier": "1",
            "NQN": "nqn.1988-11.com.dell:SFSS:1:20210707023327e8",
            "@odata.id": "/redfish/v1/SFSSApp/FoundationalConfigs('1')",
            "@odata.type": "#FoundationalConfigs.FoundationalConfigs",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#FoundationalConfigs/FoundationalConfigs/$entity"
          }
        },
        "examples": [
          {
            "DiscoveryControllerPort": "8009",
            "InstanceIdentifier": "1",
            "NQN": "nqn.1988-11.com.dell:SFSS:1:20210707023327e8",
            "@odata.id": "/redfish/v1/SFSSApp/FoundationalConfigs('1')",
            "@odata.type": "#FoundationalConfigs.FoundationalConfigs",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#FoundationalConfigs/FoundationalConfigs/$entity"
          }
        ],
        "title": "FoundationalConfigsGET-ID",
        "properties": {
          "DiscoveryControllerPort": {
            "type": "string",
            "minLength": 1,
            "description": "Port on which the CDC listens for mDNS queries; default is 8009"
          },
          "InstanceIdentifier": {
            "type": "string",
            "minLength": 1,
            "description": "CDC instance identifier"
          },
          "NQN": {
            "type": "string",
            "minLength": 1,
            "description": "A unique NVMe Qualified Name (NQN) that is used to identify the CDC instance."
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "DiscoveryControllerPort",
          "InstanceIdentifier",
          "NQN",
          "@odata.id",
          "@odata.type",
          "@odata.context"
        ]
      },
      "SFSSImagesGET": {
        "description": "This model retrieves the lists of available images in SFSS.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "SFSSImages": [
              {
                "@odata.id": "/redfish/v1/SFSSApp/SFSSImages('1.0.0')"
              },
              {
                "@odata.id": "/redfish/v1/SFSSApp/SFSSImages('1.0.1')"
              }
            ],
            "SFSSImages@odata.count": 2,
            "@odata.id": "/redfish/v1/SFSSApp/SFSSImages",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#SFSSImages",
            "@odata.type": "#SFSSImagesCollection.SFSSImagesCollection"
          }
        },
        "examples": [
          {
            "SFSSImages": [
              {
                "@odata.id": "/redfish/v1/SFSSApp/SFSSImages('1.0.0')"
              },
              {
                "@odata.id": "/redfish/v1/SFSSApp/SFSSImages('1.0.1')"
              }
            ],
            "SFSSImages@odata.count": 2,
            "@odata.id": "/redfish/v1/SFSSApp/SFSSImages",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#SFSSImages",
            "@odata.type": "#SFSSImagesCollection.SFSSImagesCollection"
          }
        ],
        "title": "SFSSImagesGET",
        "properties": {
          "SFSSImages": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "description": "List of downloaded SFSS images",
            "items": {}
          },
          "SFSSImages@odata.count": {
            "type": "number",
            "description": "Number of available SFSS images"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "SFSSImages",
          "SFSSImages@odata.count",
          "@odata.id",
          "@odata.context",
          "@odata.type"
        ]
      },
      "SFSSImagesGET-ID": {
        "description": "This model lists the SFSS image information based on the specified ID.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "ImageServerLocation": "somelocation",
            "StatusMessage": "Download and Installation Success",
            "ImageServerPassword": "*******",
            "Status": "Success",
            "TransportType": "SCP",
            "ImageServerUserName": "",
            "Version": "1.0.0",
            "@odata.id": "/redfish/v1/SFSSApp/SFSSImages('1.0.0')",
            "@odata.type": "#SFSSImages.SFSSImages",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#SFSSImages/SFSSImages/$entity"
          }
        },
        "examples": [
          {
            "ImageServerLocation": "somelocation",
            "StatusMessage": "Download and Installation Success",
            "ImageServerPassword": "*******",
            "Status": "Success",
            "TransportType": "SCP",
            "ImageServerUserName": "",
            "Version": "1.0.0",
            "@odata.id": "/redfish/v1/SFSSApp/SFSSImages('1.0.0')",
            "@odata.type": "#SFSSImages.SFSSImages",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#SFSSImages/SFSSImages/$entity"
          }
        ],
        "title": "SFSSImageGET-ID",
        "properties": {
          "ImageServerLocation": {
            "type": "string",
            "minLength": 1,
            "description": "Location of the SFSS image in the remote repository"
          },
          "StatusMessage": {
            "type": "string",
            "minLength": 1,
            "description": "A detailed status message on the status of the add image operation."
          },
          "ImageServerPassword": {
            "type": "string",
            "minLength": 1,
            "description": "Password to access the image in the remote server"
          },
          "Status": {
            "type": "string",
            "minLength": 1,
            "description": "Status of the add image operation"
          },
          "TransportType": {
            "type": "string",
            "minLength": 1,
            "description": "Transport type used to copy the image from the remote repository; possible values include SCP, SFTP, HTTP, and HTTPS"
          },
          "ImageServerUserName": {
            "type": "string",
            "description": "Username to access the remote repository"
          },
          "Version": {
            "type": "string",
            "minLength": 1,
            "description": "Version of the SFSS image"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "ImageServerLocation",
          "StatusMessage",
          "ImageServerPassword",
          "Status",
          "TransportType",
          "ImageServerUserName",
          "Version",
          "@odata.id",
          "@odata.type",
          "@odata.context"
        ]
      },
      "SFSSImagesGET-ENUMs": {
        "description": "This model lists the supported enumerations for the SFSS image configuration",
        "type": "object",
        "x-examples": {
          "example-1": {
            "Status": [
              "Failure",
              "InProgress",
              "Success",
              "NotStarted"
            ],
            "TransportType": [
              "SFTP",
              "HTTPS",
              "SCP",
              "HTTP"
            ]
          }
        },
        "examples": [
          {
            "Status": [
              "Failure",
              "InProgress",
              "Success",
              "NotStarted"
            ],
            "TransportType": [
              "SFTP",
              "HTTPS",
              "SCP",
              "HTTP"
            ]
          }
        ],
        "title": "SFSSImagesGET-Enums",
        "properties": {
          "Status": {
            "type": "array",
            "description": "Status of the add image operation; possible values inclulde Failure, InProgress, Success, and NotStarted ",
            "items": {}
          },
          "TransportType": {
            "type": "array",
            "description": "Transport type used to copy the SFSS image from the remote repository; possible values include SCP, SFTP, HTTP, and HTTPs",
            "items": {}
          }
        },
        "required": [
          "Status",
          "TransportType"
        ]
      },
      "AlertsGET": {
        "description": "This model lists the alerts that are triggered in SFSS.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "Alerts": [
              {
                "@odata.id": "/redfish/v1/SFSSApp/Alerts('uuid')"
              }
            ],
            "Alerts@odata.count": 1,
            "@odata.id": "/redfish/v1/SFSSApp/Alerts",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#Alertss",
            "@odata.type": "#AlertsCollection.AlertsCollection"
          }
        },
        "examples": [
          {
            "Alerts": [
              {
                "@odata.id": "/redfish/v1/SFSSApp/Alerts('uuid')"
              }
            ],
            "Alerts@odata.count": 1,
            "@odata.id": "/redfish/v1/SFSSApp/Alerts",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#Alertss",
            "@odata.type": "#AlertsCollection.AlertsCollection"
          }
        ],
        "title": "AlertsGET",
        "properties": {
          "Alerts": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "description": "A list of alerts that is generated in the SFSS VM",
            "items": {}
          },
          "Alerts@odata.count": {
            "type": "number",
            "description": "Number of alerts in the SFSS VM"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "Alerts",
          "Alerts@odata.count",
          "@odata.id",
          "@odata.context",
          "@odata.type"
        ]
      },
      "Alerts-ID": {
        "description": "This model lists the alert information based on the specified alert ID.",
        "type": "object",
        "properties": {
          "CdcInstances": {
            "type": "array",
            "items": {
              "required": [],
              "properties": {}
            }
          },
          "Identifier": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "Protocol": {
            "type": "string",
            "minLength": 1
          },
          "Context": {
            "type": "string",
            "minLength": 1
          },
          "EventTypes": {
            "type": "array",
            "items": {
              "required": [],
              "properties": {}
            }
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          },
          "HttpHeaders": {
            "type": "array",
            "items": {
              "required": [],
              "properties": {}
            }
          },
          "Destination": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "CdcInstances",
          "Identifier",
          "@odata.context",
          "@odata.id",
          "Protocol",
          "Context",
          "EventTypes",
          "@odata.type",
          "HttpHeaders",
          "Destination"
        ],
        "x-examples": {
          "example-1": {
            "CdcInstances": [
              "APP"
            ],
            "Identifier": "uuid",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#Alerts/Alerts/$entity",
            "@odata.id": "/redfish/v1/SFSSApp/Alerts('uuid')",
            "Protocol": "redfish",
            "Context": "SomeSubscription",
            "EventTypes": [
              "Alert"
            ],
            "@odata.type": "#Alerts.Alerts",
            "HttpHeaders": [
              "Authorization: Basic ZG52dXNlcjpAIThwSU1vSQ==",
              "ExternalServerRequiredHeader: ItsValue"
            ],
            "Destination": "https://[ipv4/ipv6]/external/Server/eventHandler"
          }
        },
        "examples": [
          {
            "CdcInstances": [
              "APP"
            ],
            "Identifier": "uuid",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#Alerts/Alerts/$entity",
            "@odata.id": "/redfish/v1/SFSSApp/Alerts('uuid')",
            "Protocol": "redfish",
            "Context": "SomeSubscription",
            "EventTypes": [
              "Alert"
            ],
            "@odata.type": "#Alerts.Alerts",
            "HttpHeaders": [
              "Authorization: Basic ZG52dXNlcjpAIThwSU1vSQ==",
              "ExternalServerRequiredHeader: ItsValue"
            ],
            "Destination": "https://[ipv4/ipv6]/external/Server/eventHandler"
          }
        ],
        "title": "AlertsGET-ID"
      },
      "Device": {
        "description": "This model lists all the registered endpoints.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "DeviceId": "20210521211812c9",
            "TotalNumOfEndPoints": 0,
            "@odata.id": "/redfish/v1/SFSSApp/Device",
            "@odata.type": "#Device.Device",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#Device/Device/$entity",
            "NumOfEndPointInUse": 0
          }
        },
        "examples": [
          {
            "DeviceId": "20210521211812c9",
            "TotalNumOfEndPoints": 0,
            "@odata.id": "/redfish/v1/SFSSApp/Device",
            "@odata.type": "#Device.Device",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#Device/Device/$entity",
            "NumOfEndPointInUse": 0
          }
        ],
        "title": "DeviceGET",
        "properties": {
          "DeviceId": {
            "type": "string",
            "minLength": 1,
            "description": "A unique NVMe Qualified Name (NQN) that is used to identify the endpoint."
          },
          "TotalNumOfEndPoints": {
            "type": "number",
            "description": "Total number of endpoints; total number of hosts, subsystems, and DDCs"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "NumOfEndPointInUse": {
            "type": "number",
            "description": "Total number of endpoints in use"
          }
        },
        "required": [
          "DeviceId",
          "TotalNumOfEndPoints",
          "@odata.id",
          "@odata.type",
          "@odata.context",
          "NumOfEndPointInUse"
        ]
      },
      "LicensesGET": {
        "description": "This model lists all the licenses that are installed in SFSS.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "Licenses": [
              {
                "@odata.id": "/redfish/v1/SFSSApp/Licenses('1')"
              },
              {
                "@odata.id": "/redfish/v1/SFSSApp/Licenses('2')"
              }
            ],
            "Licenses@odata.count": 2,
            "@odata.id": "/redfish/v1/SFSSApp/Licenses",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#Licenses",
            "@odata.type": "#LicensesCollection.LicensesCollection"
          }
        },
        "examples": [
          {
            "Licenses": [
              {
                "@odata.id": "/redfish/v1/SFSSApp/Licenses('1')"
              },
              {
                "@odata.id": "/redfish/v1/SFSSApp/Licenses('2')"
              }
            ],
            "Licenses@odata.count": 2,
            "@odata.id": "/redfish/v1/SFSSApp/Licenses",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#Licenses",
            "@odata.type": "#LicensesCollection.LicensesCollection"
          }
        ],
        "title": "LicensesGET",
        "properties": {
          "Licenses": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "@odata.id": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "@odata.id"
              ]
            }
          },
          "Licenses@odata.count": {
            "type": "number",
            "description": "Number of licenses installed on the SFSS VM"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "Licenses",
          "Licenses@odata.count",
          "@odata.id",
          "@odata.context",
          "@odata.type"
        ]
      },
      "LicensesGET-ID": {
        "description": "This model lists the license information based on the specified license ID.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "ServiceTag": "1234567",
            "TotalNumOfEndPoints": 48,
            "Identifier": "1",
            "LicenseType": "Perpetual",
            "LicenseExpiry": "Never",
            "@odata.id": "/redfish/v1/SFSSApp/Licenses('1')",
            "@odata.type": "#Licenses.Licenses",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#Licenses/Licenses/$entity",
            "DeviceId": "20210413120527b6"
          }
        },
        "examples": [
          {
            "ServiceTag": "1234567",
            "TotalNumOfEndPoints": 48,
            "Identifier": "1",
            "LicenseType": "Perpetual",
            "LicenseExpiry": "Never",
            "@odata.id": "/redfish/v1/SFSSApp/Licenses('1')",
            "@odata.type": "#Licenses.Licenses",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#Licenses/Licenses/$entity",
            "DeviceId": "20210413120527b6"
          }
        ],
        "title": "Licenses-ID",
        "properties": {
          "ServiceTag": {
            "type": "string",
            "minLength": 1,
            "description": "License service tag"
          },
          "TotalNumOfEndPoints": {
            "type": "number",
            "description": "Total number of endpoints the license supports"
          },
          "Identifier": {
            "type": "string",
            "minLength": 1,
            "description": "License identifier"
          },
          "LicenseType": {
            "type": "string",
            "minLength": 1,
            "description": "Type of license; possible values include Evaluation, Enterprise, Partner, and Expansion licenses"
          },
          "LicenseExpiry": {
            "type": "string",
            "minLength": 1,
            "description": "License expiry date"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "DeviceId": {
            "type": "string",
            "minLength": 1,
            "description": "A unique NVMe Qualified Name (NQN) that is used to identify the SFSS VM."
          }
        },
        "required": [
          "ServiceTag",
          "TotalNumOfEndPoints",
          "Identifier",
          "LicenseType",
          "LicenseExpiry",
          "@odata.id",
          "@odata.type",
          "@odata.context",
          "DeviceId"
        ]
      },
      "LicensesGET-Expand": {
        "description": "This model lists detailed information about all the licenses installed in SFSS.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "Licenses": [
              {
                "Identifier": "2",
                "LicenseType": "Perpetual",
                "TotalNumOfEndPoints": 10,
                "EULA": "This End User License Agreement (“EULA”) is between the individual consumer or business entity that will use the Software (“You”) and the applicable entity identified in the “Licensor Table” located at www.dell.com/swlicensortable (“Licensor”).\n\nThis EULA governs Your use of: (a) the object code version of Dell branded software that is preinstalled on Dell hardware or otherwise provided to You pursuant to a purchase contract, quote, order form, invoice or online procurement process (each, an “Order”); (b) associated software license keys, if any (“License Keys”);\n(c) updates to such software (“Updates”); (d) the documentation for such software; and (e) all copies of the foregoing (collectively, “Software”). If You accept this EULA, or if You install or use the Software, then You agree to this EULA unless You already have a signed agreement with Dell Marketing L.P. or one of its affiliates (“Dell”) that includes licensing terms that govern Your use of the Software (“Pre-Existing Agreement”). If You accept this EULA or install or use the Software on behalf of a business entity, then You represent that You have authority to take those actions, and this EULA will be binding on that business entity unless the entity already has a Pre-Existing Agreement. If You do not agree to this EULA, do not install or use the Software.\n\nIf You are a business entity and You purchase Software from a third party (“Reseller”) who sublicenses the Software to You under the terms of an agreement between You and such Reseller (a “Sublicense Agreement”), then the terms of Your Sublicense Agreement with the Reseller shall govern Your use of the Software and not this EULA. Resellers may only grant rights, and must pass through conditions, consistent with this EULA. Thus, even though Your Sublicense Agreement is between you and the Reseller, by installing or using the Software, You acknowledge and agree that: (a) any license rights in the Sublicense Agreement that are greater than the license rights in this EULA shall not apply; (b) any license conditions in this EULA that are not contained in the Sublicense Agreement apply to You; (c) the limitations of liability set forth in this EULA will apply in favor of Licensor, its affiliates and suppliers despite the existence of a Sublicense Agreement; and (d) Licensor is a third-party beneficiary of the Sublicense Agreement and is entitled to exercise and enforce all of the Reseller’s rights and benefits under that Sublicense Agreement.\n\nIf You purchase Software as an individual consumer, nothing in this EULA affects your statutory rights if the laws of your state or country do not permit it to do so.\n\n1. License Grant.\n\n1.1. Right to Use. Subject to and in consideration of your full compliance with the terms and conditions of this EULA, Licensor grants to You a personal, non-exclusive license to use the Software during the period stated in the applicable Order (if no period is specified, You may use the Software perpetually). If You are an individual consumer, this license grant allows You to use the Software in connection with Your own personal use. If You are a business entity, this license grant allows You to use the Software in connection with the internal business operations of Your entity. In addition, You may make a reasonable number of copies of the Software solely as needed for backup or archival purposes. Additional license terms for certain Software may be included in the Offering Specific Terms Table located at www.dell.com/offeringspecificterms (“OST Table”), and additional terms for Software that is licensed to You for a limited time (“Subscription Software”) are located at www.dellemc.com/subscription_terms (“Subscription Terms”).\n\n1.2. Third Party Use. If You are a business entity, You may allow Your contractors (each, a “Permitted Third Party”) to use the Software solely for the purpose of providing services to You, provided that such use is in compliance with this EULA.  You are liable for any breach of this EULA by any Permitted Third Party.\n\n1.3. Rights Reserved. The Software is licensed and not sold. Except for the license expressly granted in this EULA, Licensor, on behalf of itself and its affiliates and suppliers, retains all rights in and to the Software and in all related materials (“Works”). The rights in these Works are valid and protected in all forms, media and technologies existing now or hereafter developed. Any use of Works other than as expressly set forth herein is strictly prohibited.\n\n1.4. Ownership. Licensor, on behalf of itself and its affiliates, retains ownership of the Works and all related intellectual property rights. If Software is provided to You on removable media (e.g., CD, DVD or USB drive), You may own the media on which the Software is recorded.\n\n2. License Conditions.\n\n2.1. You and Your Permitted Third Parties must do the following:\n\nA. Run the Software only on the hardware for which it was intended to operate, when applicable;\nB. Use License Keys (if applicable) only from Licensor or an authorized Dell License Key provider;\nC. Treat the Software as Dell confidential information;\nD. Use the Software only on as many computers or devices that You purchased, in such configurations permitted by Dell or Licensor, and/or in accordance with the applicable unit of measure, each as may be specified on Your Order. For Software licensed via a unit of measure, the terms and descriptions of each unit of measure are located at www.dellemc.com/UOM_terms (“UOM Terms”);\nE. Abide by the export control and economic sanctions laws of the United States, the European Union and other applicable jurisdictions. Under these laws, the Software must not be used, sold, leased, exported, imported, re-exported or transferred except in compliance with such laws, including, without limitation, export licensing requirements, end user, end-use and end-destination restrictions, prohibitions on dealings with sanctioned individuals and entities, including but not limited to persons on the Office of Foreign Assets Control's Specially Designated Nationals and Blocked Persons List, or the U.S. Department of Commerce Denied Persons List. You represent and warrant that You are not the subject or target of, and that You are not located in a country or territory (including without limitation, North Korea, Cuba, Iran, Syria, and Crimea) that is the subject or target of economic sanctions of the United States, European Union or other applicable jurisdictions; and\nF. Comply with all Third Party Terms (as defined in Section 5 below).\n\n2.2. Except as otherwise permitted by this EULA or by mandatory law (meaning a law that the parties cannot change by contract), You must not, and must not allow Your Permitted Third Parties, to do the following:\n\nA. Modify or remove any proprietary notices or markings on or in the Software;\nB. Transfer License Keys to any other person or entity;\nC. Download Updates from Licensor or an authorized provider unless You have a valid support agreement;\nD. Install Updates on Enterprise Products (e.g., server, networking, storage, integrated solutions, and data protection appliances) that have gone end of service life unless Licensor otherwise agrees in writing;\nE. Install and operate counterfeit versions of Software (i.e. software provided by anyone other than Dell or an authorized representative of Dell) on Dell hardware;\nF. Violate or circumvent any technological use restrictions in the Software;\nG. Sell, loan, rent, lease, sublicense, distribute or encumber (e.g., by lien, security interest, etc.) the Software;\nH. Use any trademarks or service marks of Licensor, its affiliates or suppliers;\nI. Provide access to the Software or allow use by any third party, other than Permitted Third Parties, without Licensor's prior written consent;\nJ. Copy, republish, upload, post or transmit the Software in any way;\nK. Modify or create derivative works based upon the Software, or decompile, disassemble, reverse engineer, or otherwise attempt to derive source code from the Software, in whole or in part;\nL. Attack or attempt to undermine the security, integrity, authentication or intended operation of the Software;\nM. Use the Software on a service bureau, rental or managed services basis;\nN. Create or permit others to create Internet \"links\" to the Software or \"frame\" or \"mirror\" the Software on any other server, wireless or Internet-based device;\nO. Use the Software to create a competitive offering;\nP. Use the Software to create other software, products or technologies unless the Software contains Development Tools as described in Section 7;\nQ. Share or publish the results of any benchmarking of the Software without Dell’s prior written consent;\nR. Use the Software for high risk activities, including without limitation online control systems, or use in hazardous environments requiring fail-safe performance, such as in the operation of nuclear facilities, aircraft navigation or communications systems, air traffic control, life support, weapons systems or in any other device or system in which function or malfunction of the Software could result in death, personal injury or physical or environmental damage;\nS. Use the Software for activities related to weapons of mass destruction, including but not limited to, activities related to the design, development, production or use of nuclear materials, nuclear facilities, nuclear weapons, missiles or support of missile projects, or chemical or biological weapons; and\nT. Assign this EULA, or any right or obligation under this EULA, or delegate any performance, without Dell’s prior written consent, unless You are transferring the Software in accordance with the Transferability Section 3 below. Even if Dell consents to an assignment, You remain responsible for all obligations under this EULA that You incurred prior to the effective date of the assignment.\n\n3. Transferability. If You are an individual consumer, You may transfer the Software on a permanent basis as part of the sale or transfer of the hardware system on which the Software is loaded, provided that You retain no copies of any version of the Software. If You are a business entity, You may not transfer the Software to another person or entity without the express written permission of Dell, unless allowed by applicable law stating that transfer may not be restricted (note that a transfer fee may be charged by Dell).\n\n4. Compliance Verification. If You are a business entity, You must: (a) maintain and use systems and procedures that allow You to accurately track Your use of the Software; (b) certify to Dell in writing, at Dell’s request, that Your use of Software fully complies with this EULA, indicating the number of Software licenses deployed at that time; and (c) cooperate fully and timely with Dell and its auditors if Dell notifies You that it will conduct an audit to confirm Your compliance with this EULA. Any such audit will be conducted during normal business hours. If Dell determines that You have over-deployed Software, You agree to immediately purchase licenses at the then-current list price to bring Your use into compliance. If You over-deployed Software by 5% or more, then You agree to pay the total cost of the audit, in addition to any other liabilities You may have.\n\n5. Third Party Software. “Third Party Software” is software, including open source software, that is contained in or provided with the Software and is licensed by a third party under its own terms of use (“Third Party Terms”). Third Party Software is governed solely by the applicable Third Party Terms and not by this EULA. Third Party Terms may be provided with the Third Party Software or may be included in the OST Table. For certain open source software, the applicable Third Party Terms may entitle You to obtain the corresponding source files. You may find corresponding source files for such open source software at //opensource.dell.com/ or in the “About” or “Read Me” file of Software, or other locations that Licensor may specify.\n\n6. Free Software. “Free Software” means Software that is provided to You without additional charge (e.g., scripts that enable customer installation; code that enables You to monitor Your use of Dell products; etc.).  You may only use Free Software on or with equipment or in the operating environments for which Dell has designed that Free Software to operate. Licensor may terminate any license to Free Software at any time in its sole discretion. You may not transfer Free Software to anyone else.\n\n7. Development Tools. If the Software includes development tools, such as scripting tools, APIs or sample scripts (collectively “Development Tools”), and unless there is a separate agreement between You and Dell or Licensor for the Development Tools, You may use such Development Tools to create new scripts and code for the purpose of customizing Your use of the Software (within the parameters set forth in this EULA and in the Development Tools themselves) and for no other purpose.\n\n8. Evaluation Software. This EULA does not license use of Software for evaluation purposes (“Evaluation Software”) except to the extent these terms may be invoked by the separate license terms and conditions accompanying that Evaluation Software.\n\n9. Support Services Not Included. If You purchase maintenance and support for Software, such services are identified in Your Order and will be provided under a separate services agreement.\n\n10. Termination. For Subscription Software, this EULA automatically terminates at the end of Your subscription period unless You renew Your rights. Licensor may terminate this EULA if You or a Permitted Third Party commits a material breach of this EULA and fails to cure such breach within thirty (30) days following Your receipt of notice of the breach from Dell. This right to terminate applies accordingly if Dell or the Reseller from whom You made Your purchase does not receive timely payment for the licenses to the Software or for the hardware on which the Software is loaded, if any. When this EULA terminates, all licenses granted automatically terminate and You must immediately cease use of the Software and return or destroy all copies of the Software. Except as otherwise agreed by Dell, You will not get a refund from Dell if this EULA is terminated. Rights and obligations under Sections of this EULA that, by their nature should survive, will survive termination, as well as obligations for payment.\n\n11. Warranty Disclaimer. Under this EULA, Licensor provides neither any warranties for the Software nor does it provide support for the Software. Your rights under any warranties and any support entitlements for Software acquired for a fee are solely between You and the Reseller or Dell entity from whom You procured the Software and related support, and are defined under the commercial terms agreed between You and such selling entity. Accordingly, except as otherwise offered by Dell, the Software is provided by Licensor under this EULA “As Is” without any warranties or conditions. To the maximum extent permitted by applicable law, Licensor, on behalf of itself and its affiliates and suppliers: (a) makes no express warranties or conditions related to the Software; (b) disclaims all implied warranties and conditions related to the Software, including merchantability, fitness for a particular purpose, title, and non-infringement; and (c) disclaims any warranty or condition arising by statute, operation of law, course of dealing or performance, or usage of trade. Licensor does not warrant uninterrupted or error-free operation of the Software. This Section does not affect or modify any of the statutory warranty rights that are available to consumers.\n\n12. Limitation of Liability.\n\n12.1. Limitations on Damages. The limitations, exclusions and disclaimers set forth in a Pre-Existing Agreement or Dell Terms of Sale that applies your Order (in each case, the “Order Terms”) shall apply to all disputes, claims or controversies (whether in contract, tort or otherwise) between You and Licensor or Dell related to or arising out of: (a) this EULA; (b) the breach, termination or validity of this EULA; or (c) any Orders (each, a “Dispute”). In the absence of applicable Order Terms, the terms set forth in this Section shall apply to all Disputes.\n \nThe terms of this Section are agreed allocations of risk constituting part of the consideration for Licensor’s licensing of Software to You and will apply even if there is a failure of the essential purpose of any limited remedy, and regardless of whether a party has been advised of the possibility of the liabilities. If applicable law prohibits any portion of the limits on liability stated below, the parties agree that such limitation will be automatically modified, but only to the extent required to make the limitation compliant with applicable law.\n\nA. Limitation on Direct Damages. Except for Your obligation to pay for the Software, or for Your violation of the License Grant and License Conditions set forth herein or of Licensor’s or Dell’s intellectual property rights, the total liability of You and Licensor (including Licensor’s affiliates and suppliers) arising out of any Dispute is limited to the amount You paid for the Software that is the subject of the Dispute, but excluding amounts received as reimbursement of expenses or payment of taxes. Notwithstanding anything otherwise set forth above, Licensor and its affiliates have no liability for any direct damages resulting from Your use or attempted use of Third Party Software, Free Software or Development Tools.\n\nB. Disclaimer of Certain Other Damages. Except for Your obligation to pay for the Software, or for Your violation of the License Grant and License Conditions set forth herein or of Licensor’s or Dell’s intellectual property rights, neither You nor Licensor (including Licensor’s affiliates and suppliers) shall have any liability under this EULA for special, consequential, exemplary, punitive, incidental or indirect damages, or for lost profits, loss of revenue, loss or corruption of data, loss of use or procurement of substitute products or services.\n\n12.2. Regular Backups. You are solely responsible for Your data. You must back up Your data before Licensor or a third party performs any remedial, upgrade or other work on Your production systems. You acknowledge that it is a best practice to have more than one back up copy of Your data. If applicable law prohibits exclusion of liability for lost data, then Licensor will only be liable for the cost of the typical effort to recover the lost data from Your last available back up.\n\n12.3. Limitation Period. Except as stated in this Section, all claims must be made within the period specified by applicable law. If the law allows the parties to specify a shorter period for bringing claims, or the law does not provide a time at all, then claims must be made within 18 months after the cause of action accrues.\n\n13. Additional Terms.\n\n13.1. Notices. The parties will provide all notices under this EULA in writing. Unless provided otherwise in an Order, You must provide notices to the local Dell entity in Your Order, or, if Your Order is not with a Dell entity, by e-mail to Dell_Legal_Notices@dell.com.\n\n13.2. Waiver and Severability. Failure to enforce a provision of this EULA will not constitute a waiver of that or any other provision of this EULA. If a court of competent jurisdiction determines that any part of this EULA or document that incorporates this EULA by reference is unenforceable, that ruling will not affect the validity of all remaining parts.\n\n13.3. Modifications. This EULA may only be modified in writing signed by both parties; provided, however, that Licensor may, in its sole discretion, update the Licensor Table, the OST Table, the UOM Terms and the Subscription Terms at any time. Any changes that Licensor makes to the Licensor Table, the OST Table, the UOM Terms or the Subscription Terms will only apply to Orders that occur after Licensor posts those changes online.\n \n13.4. Governing Law and Jurisdiction. If You obtained the Software directly from Dell, then the governing law and jurisdiction provisions set forth in Your Order Terms shall apply to this EULA. Otherwise the following shall apply:\n\nA. Subject to Section 13.4 D and 13.5, if You are domiciled in the United States or Canada: (1) this EULA and any Dispute is governed by the laws of the State of Texas (excluding the conflicts of law rules) and the federal laws of the United States; and (2) to the extent permitted by law, the state and federal courts located in Texas will have exclusive jurisdiction for any Dispute. Both parties agree to submit to the personal jurisdiction of the state and federal courts located within Travis or Williamson County, Texas, and agree to waive any and all objections to the exercise of jurisdiction over the parties by those courts and to venue in those courts.\n\nB. Subject to Section 13.4 D, if You are domiciled outside of the United States or Canada: (1) this EULA and any Dispute is governed by the substantive laws in force in the country in which the Licensor is located (as indicated in the Licensor Table located at www.dell.com/swlicensortable), without regard to its conflict of law rules; and (2) the exclusive place of jurisdiction for any Dispute shall be in such country.\n\nC. In any event, neither the U.N. Convention on Contracts for the International Sale of Goods, nor the Uniform Computer Information Transaction Act shall apply to this EULA or any Dispute.\n\nD. If You are an individual consumer, this Section 13.4 does not deprive You of the protection afforded to You by the provisions of mandatory consumer protections laws that are applicable to You, nor does it prevent you from seeking remedies or enforcing your rights as a consumer under such laws.\n\n13.5. Dispute Resolution and Binding Individual (non-class) Arbitration. This Section only applies if You are an individual consumer that resides in (or obtained the Software in) the United States or Canada. All Disputes shall be resolved exclusively and finally by binding individual arbitration. This means You and Licensor waive any right to litigate disputes in a court or before a jury and neither You nor Licensor shall be entitled to join, consolidate, or include any claims belonging to or alleged or arising from, by or on behalf of any third party to an arbitration brought hereunder, or to arbitrate any claim as a class action, class representative, class member, or in a private attorney general capacity. If You reside in (or obtained the Software in) the United States, the arbitration will be administered by the American Arbitration Association (AAA), or JAMS. If You reside in (or obtained the Software in) Canada, arbitration will be at ADR Chambers pursuant to the general ADR Chambers Rules for Arbitration located at www.adrchambers.com. The arbitration shall be conducted in the English language. The arbitration panel shall have exclusive authority to resolve any arbitrability issues including any dispute over this EULA or this arbitration provision’s scope, application, meaning and enforceability. The arbitration panel shall be empowered to grant whatever relief would be available in court, including without limitation preliminary relief, injunctive relief and specific performance. Any award of the arbitration panel shall be final and binding immediately when rendered, and judgment on the award may be entered in any court of competent jurisdiction. If any portion of this arbitration agreement is found unenforceable, the unenforceable portion shall be severed and the remaining arbitration terms shall be enforced (but in no event will there be a class arbitration). Consumer claimants (individuals whose transaction is intended for personal, family or household use) may elect to pursue their claims in small-claims court rather than arbitration. Licensor will be responsible for paying any individual consumer's arbitration/arbitrator fees. Notwithstanding the foregoing, Licensor may apply to any relevant government agency or any court of competent jurisdiction to preserve its rights under this EULA and to obtain any injunctive or preliminary relief, or any award of specific performance, to which it may be entitled, either against You or against a non-party; provided, however, that no such administrative or judicial authority shall have the right or power to render a judgment or award (or to enjoin the rendering of an arbitral award) for damages that may be due to or from either party under this EULA, which right and power shall be reserved exclusively to an arbitration panel proceeding in accordance herewith.\n\n13.6. Third Party Rights. Other than as expressly set out in this EULA, this EULA does not create any rights for any person who is not a party to it, and no person who is not a party to this EULA may enforce any of its terms or rely on any exclusion or limitation contained in it.\n\n13.7 Entire Agreement. You acknowledge that You have read this EULA, that You understand it, that You agree to be bound by its terms, and that this EULA, along with the Order Terms into which this EULA may be incorporated (as applicable), is the complete and exclusive statement of the agreement between You and Licensor regarding Your use of the Software. All content referenced in this EULA by hyperlink is incorporated into this EULA in its entirety and is available to You in hardcopy form upon Your request. The pre-printed terms of Your purchase order or any other document that is not issued or signed by Licensor or Dell do not apply to Software. You represent that You did not rely on any representations or statements that do not appear in this EULA when accepting this EULA.\n\n\n\n(Dell EULA rev 24FEB2020)",
                "ServiceTag": "ABCDEFG",
                "LicenseExpiry": "Never",
                "DeviceId": "20210624140433e8"
              }
            ],
            "Licenses@odata.count": 1,
            "@odata.id": "/redfish/v1/SFSSApp/Licenses?$expand=Licenses",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#Licenses",
            "@odata.type": "#LicensesCollection.LicensesCollection"
          }
        },
        "examples": [
          {
            "Licenses": [
              {
                "Identifier": "2",
                "LicenseType": "Perpetual",
                "TotalNumOfEndPoints": 10,
                "EULA": "This End User License Agreement (“EULA”) is between the individual consumer or business entity that will use the Software (“You”) and the applicable entity identified in the “Licensor Table” located at www.dell.com/swlicensortable (“Licensor”).\n\nThis EULA governs Your use of: (a) the object code version of Dell branded software that is preinstalled on Dell hardware or otherwise provided to You pursuant to a purchase contract, quote, order form, invoice or online procurement process (each, an “Order”); (b) associated software license keys, if any (“License Keys”);\n(c) updates to such software (“Updates”); (d) the documentation for such software; and (e) all copies of the foregoing (collectively, “Software”). If You accept this EULA, or if You install or use the Software, then You agree to this EULA unless You already have a signed agreement with Dell Marketing L.P. or one of its affiliates (“Dell”) that includes licensing terms that govern Your use of the Software (“Pre-Existing Agreement”). If You accept this EULA or install or use the Software on behalf of a business entity, then You represent that You have authority to take those actions, and this EULA will be binding on that business entity unless the entity already has a Pre-Existing Agreement. If You do not agree to this EULA, do not install or use the Software.\n\nIf You are a business entity and You purchase Software from a third party (“Reseller”) who sublicenses the Software to You under the terms of an agreement between You and such Reseller (a “Sublicense Agreement”), then the terms of Your Sublicense Agreement with the Reseller shall govern Your use of the Software and not this EULA. Resellers may only grant rights, and must pass through conditions, consistent with this EULA. Thus, even though Your Sublicense Agreement is between you and the Reseller, by installing or using the Software, You acknowledge and agree that: (a) any license rights in the Sublicense Agreement that are greater than the license rights in this EULA shall not apply; (b) any license conditions in this EULA that are not contained in the Sublicense Agreement apply to You; (c) the limitations of liability set forth in this EULA will apply in favor of Licensor, its affiliates and suppliers despite the existence of a Sublicense Agreement; and (d) Licensor is a third-party beneficiary of the Sublicense Agreement and is entitled to exercise and enforce all of the Reseller’s rights and benefits under that Sublicense Agreement.\n\nIf You purchase Software as an individual consumer, nothing in this EULA affects your statutory rights if the laws of your state or country do not permit it to do so.\n\n1. License Grant.\n\n1.1. Right to Use. Subject to and in consideration of your full compliance with the terms and conditions of this EULA, Licensor grants to You a personal, non-exclusive license to use the Software during the period stated in the applicable Order (if no period is specified, You may use the Software perpetually). If You are an individual consumer, this license grant allows You to use the Software in connection with Your own personal use. If You are a business entity, this license grant allows You to use the Software in connection with the internal business operations of Your entity. In addition, You may make a reasonable number of copies of the Software solely as needed for backup or archival purposes. Additional license terms for certain Software may be included in the Offering Specific Terms Table located at www.dell.com/offeringspecificterms (“OST Table”), and additional terms for Software that is licensed to You for a limited time (“Subscription Software”) are located at www.dellemc.com/subscription_terms (“Subscription Terms”).\n\n1.2. Third Party Use. If You are a business entity, You may allow Your contractors (each, a “Permitted Third Party”) to use the Software solely for the purpose of providing services to You, provided that such use is in compliance with this EULA.  You are liable for any breach of this EULA by any Permitted Third Party.\n\n1.3. Rights Reserved. The Software is licensed and not sold. Except for the license expressly granted in this EULA, Licensor, on behalf of itself and its affiliates and suppliers, retains all rights in and to the Software and in all related materials (“Works”). The rights in these Works are valid and protected in all forms, media and technologies existing now or hereafter developed. Any use of Works other than as expressly set forth herein is strictly prohibited.\n\n1.4. Ownership. Licensor, on behalf of itself and its affiliates, retains ownership of the Works and all related intellectual property rights. If Software is provided to You on removable media (e.g., CD, DVD or USB drive), You may own the media on which the Software is recorded.\n\n2. License Conditions.\n\n2.1. You and Your Permitted Third Parties must do the following:\n\nA. Run the Software only on the hardware for which it was intended to operate, when applicable;\nB. Use License Keys (if applicable) only from Licensor or an authorized Dell License Key provider;\nC. Treat the Software as Dell confidential information;\nD. Use the Software only on as many computers or devices that You purchased, in such configurations permitted by Dell or Licensor, and/or in accordance with the applicable unit of measure, each as may be specified on Your Order. For Software licensed via a unit of measure, the terms and descriptions of each unit of measure are located at www.dellemc.com/UOM_terms (“UOM Terms”);\nE. Abide by the export control and economic sanctions laws of the United States, the European Union and other applicable jurisdictions. Under these laws, the Software must not be used, sold, leased, exported, imported, re-exported or transferred except in compliance with such laws, including, without limitation, export licensing requirements, end user, end-use and end-destination restrictions, prohibitions on dealings with sanctioned individuals and entities, including but not limited to persons on the Office of Foreign Assets Control's Specially Designated Nationals and Blocked Persons List, or the U.S. Department of Commerce Denied Persons List. You represent and warrant that You are not the subject or target of, and that You are not located in a country or territory (including without limitation, North Korea, Cuba, Iran, Syria, and Crimea) that is the subject or target of economic sanctions of the United States, European Union or other applicable jurisdictions; and\nF. Comply with all Third Party Terms (as defined in Section 5 below).\n\n2.2. Except as otherwise permitted by this EULA or by mandatory law (meaning a law that the parties cannot change by contract), You must not, and must not allow Your Permitted Third Parties, to do the following:\n\nA. Modify or remove any proprietary notices or markings on or in the Software;\nB. Transfer License Keys to any other person or entity;\nC. Download Updates from Licensor or an authorized provider unless You have a valid support agreement;\nD. Install Updates on Enterprise Products (e.g., server, networking, storage, integrated solutions, and data protection appliances) that have gone end of service life unless Licensor otherwise agrees in writing;\nE. Install and operate counterfeit versions of Software (i.e. software provided by anyone other than Dell or an authorized representative of Dell) on Dell hardware;\nF. Violate or circumvent any technological use restrictions in the Software;\nG. Sell, loan, rent, lease, sublicense, distribute or encumber (e.g., by lien, security interest, etc.) the Software;\nH. Use any trademarks or service marks of Licensor, its affiliates or suppliers;\nI. Provide access to the Software or allow use by any third party, other than Permitted Third Parties, without Licensor's prior written consent;\nJ. Copy, republish, upload, post or transmit the Software in any way;\nK. Modify or create derivative works based upon the Software, or decompile, disassemble, reverse engineer, or otherwise attempt to derive source code from the Software, in whole or in part;\nL. Attack or attempt to undermine the security, integrity, authentication or intended operation of the Software;\nM. Use the Software on a service bureau, rental or managed services basis;\nN. Create or permit others to create Internet \"links\" to the Software or \"frame\" or \"mirror\" the Software on any other server, wireless or Internet-based device;\nO. Use the Software to create a competitive offering;\nP. Use the Software to create other software, products or technologies unless the Software contains Development Tools as described in Section 7;\nQ. Share or publish the results of any benchmarking of the Software without Dell’s prior written consent;\nR. Use the Software for high risk activities, including without limitation online control systems, or use in hazardous environments requiring fail-safe performance, such as in the operation of nuclear facilities, aircraft navigation or communications systems, air traffic control, life support, weapons systems or in any other device or system in which function or malfunction of the Software could result in death, personal injury or physical or environmental damage;\nS. Use the Software for activities related to weapons of mass destruction, including but not limited to, activities related to the design, development, production or use of nuclear materials, nuclear facilities, nuclear weapons, missiles or support of missile projects, or chemical or biological weapons; and\nT. Assign this EULA, or any right or obligation under this EULA, or delegate any performance, without Dell’s prior written consent, unless You are transferring the Software in accordance with the Transferability Section 3 below. Even if Dell consents to an assignment, You remain responsible for all obligations under this EULA that You incurred prior to the effective date of the assignment.\n\n3. Transferability. If You are an individual consumer, You may transfer the Software on a permanent basis as part of the sale or transfer of the hardware system on which the Software is loaded, provided that You retain no copies of any version of the Software. If You are a business entity, You may not transfer the Software to another person or entity without the express written permission of Dell, unless allowed by applicable law stating that transfer may not be restricted (note that a transfer fee may be charged by Dell).\n\n4. Compliance Verification. If You are a business entity, You must: (a) maintain and use systems and procedures that allow You to accurately track Your use of the Software; (b) certify to Dell in writing, at Dell’s request, that Your use of Software fully complies with this EULA, indicating the number of Software licenses deployed at that time; and (c) cooperate fully and timely with Dell and its auditors if Dell notifies You that it will conduct an audit to confirm Your compliance with this EULA. Any such audit will be conducted during normal business hours. If Dell determines that You have over-deployed Software, You agree to immediately purchase licenses at the then-current list price to bring Your use into compliance. If You over-deployed Software by 5% or more, then You agree to pay the total cost of the audit, in addition to any other liabilities You may have.\n\n5. Third Party Software. “Third Party Software” is software, including open source software, that is contained in or provided with the Software and is licensed by a third party under its own terms of use (“Third Party Terms”). Third Party Software is governed solely by the applicable Third Party Terms and not by this EULA. Third Party Terms may be provided with the Third Party Software or may be included in the OST Table. For certain open source software, the applicable Third Party Terms may entitle You to obtain the corresponding source files. You may find corresponding source files for such open source software at //opensource.dell.com/ or in the “About” or “Read Me” file of Software, or other locations that Licensor may specify.\n\n6. Free Software. “Free Software” means Software that is provided to You without additional charge (e.g., scripts that enable customer installation; code that enables You to monitor Your use of Dell products; etc.).  You may only use Free Software on or with equipment or in the operating environments for which Dell has designed that Free Software to operate. Licensor may terminate any license to Free Software at any time in its sole discretion. You may not transfer Free Software to anyone else.\n\n7. Development Tools. If the Software includes development tools, such as scripting tools, APIs or sample scripts (collectively “Development Tools”), and unless there is a separate agreement between You and Dell or Licensor for the Development Tools, You may use such Development Tools to create new scripts and code for the purpose of customizing Your use of the Software (within the parameters set forth in this EULA and in the Development Tools themselves) and for no other purpose.\n\n8. Evaluation Software. This EULA does not license use of Software for evaluation purposes (“Evaluation Software”) except to the extent these terms may be invoked by the separate license terms and conditions accompanying that Evaluation Software.\n\n9. Support Services Not Included. If You purchase maintenance and support for Software, such services are identified in Your Order and will be provided under a separate services agreement.\n\n10. Termination. For Subscription Software, this EULA automatically terminates at the end of Your subscription period unless You renew Your rights. Licensor may terminate this EULA if You or a Permitted Third Party commits a material breach of this EULA and fails to cure such breach within thirty (30) days following Your receipt of notice of the breach from Dell. This right to terminate applies accordingly if Dell or the Reseller from whom You made Your purchase does not receive timely payment for the licenses to the Software or for the hardware on which the Software is loaded, if any. When this EULA terminates, all licenses granted automatically terminate and You must immediately cease use of the Software and return or destroy all copies of the Software. Except as otherwise agreed by Dell, You will not get a refund from Dell if this EULA is terminated. Rights and obligations under Sections of this EULA that, by their nature should survive, will survive termination, as well as obligations for payment.\n\n11. Warranty Disclaimer. Under this EULA, Licensor provides neither any warranties for the Software nor does it provide support for the Software. Your rights under any warranties and any support entitlements for Software acquired for a fee are solely between You and the Reseller or Dell entity from whom You procured the Software and related support, and are defined under the commercial terms agreed between You and such selling entity. Accordingly, except as otherwise offered by Dell, the Software is provided by Licensor under this EULA “As Is” without any warranties or conditions. To the maximum extent permitted by applicable law, Licensor, on behalf of itself and its affiliates and suppliers: (a) makes no express warranties or conditions related to the Software; (b) disclaims all implied warranties and conditions related to the Software, including merchantability, fitness for a particular purpose, title, and non-infringement; and (c) disclaims any warranty or condition arising by statute, operation of law, course of dealing or performance, or usage of trade. Licensor does not warrant uninterrupted or error-free operation of the Software. This Section does not affect or modify any of the statutory warranty rights that are available to consumers.\n\n12. Limitation of Liability.\n\n12.1. Limitations on Damages. The limitations, exclusions and disclaimers set forth in a Pre-Existing Agreement or Dell Terms of Sale that applies your Order (in each case, the “Order Terms”) shall apply to all disputes, claims or controversies (whether in contract, tort or otherwise) between You and Licensor or Dell related to or arising out of: (a) this EULA; (b) the breach, termination or validity of this EULA; or (c) any Orders (each, a “Dispute”). In the absence of applicable Order Terms, the terms set forth in this Section shall apply to all Disputes.\n \nThe terms of this Section are agreed allocations of risk constituting part of the consideration for Licensor’s licensing of Software to You and will apply even if there is a failure of the essential purpose of any limited remedy, and regardless of whether a party has been advised of the possibility of the liabilities. If applicable law prohibits any portion of the limits on liability stated below, the parties agree that such limitation will be automatically modified, but only to the extent required to make the limitation compliant with applicable law.\n\nA. Limitation on Direct Damages. Except for Your obligation to pay for the Software, or for Your violation of the License Grant and License Conditions set forth herein or of Licensor’s or Dell’s intellectual property rights, the total liability of You and Licensor (including Licensor’s affiliates and suppliers) arising out of any Dispute is limited to the amount You paid for the Software that is the subject of the Dispute, but excluding amounts received as reimbursement of expenses or payment of taxes. Notwithstanding anything otherwise set forth above, Licensor and its affiliates have no liability for any direct damages resulting from Your use or attempted use of Third Party Software, Free Software or Development Tools.\n\nB. Disclaimer of Certain Other Damages. Except for Your obligation to pay for the Software, or for Your violation of the License Grant and License Conditions set forth herein or of Licensor’s or Dell’s intellectual property rights, neither You nor Licensor (including Licensor’s affiliates and suppliers) shall have any liability under this EULA for special, consequential, exemplary, punitive, incidental or indirect damages, or for lost profits, loss of revenue, loss or corruption of data, loss of use or procurement of substitute products or services.\n\n12.2. Regular Backups. You are solely responsible for Your data. You must back up Your data before Licensor or a third party performs any remedial, upgrade or other work on Your production systems. You acknowledge that it is a best practice to have more than one back up copy of Your data. If applicable law prohibits exclusion of liability for lost data, then Licensor will only be liable for the cost of the typical effort to recover the lost data from Your last available back up.\n\n12.3. Limitation Period. Except as stated in this Section, all claims must be made within the period specified by applicable law. If the law allows the parties to specify a shorter period for bringing claims, or the law does not provide a time at all, then claims must be made within 18 months after the cause of action accrues.\n\n13. Additional Terms.\n\n13.1. Notices. The parties will provide all notices under this EULA in writing. Unless provided otherwise in an Order, You must provide notices to the local Dell entity in Your Order, or, if Your Order is not with a Dell entity, by e-mail to Dell_Legal_Notices@dell.com.\n\n13.2. Waiver and Severability. Failure to enforce a provision of this EULA will not constitute a waiver of that or any other provision of this EULA. If a court of competent jurisdiction determines that any part of this EULA or document that incorporates this EULA by reference is unenforceable, that ruling will not affect the validity of all remaining parts.\n\n13.3. Modifications. This EULA may only be modified in writing signed by both parties; provided, however, that Licensor may, in its sole discretion, update the Licensor Table, the OST Table, the UOM Terms and the Subscription Terms at any time. Any changes that Licensor makes to the Licensor Table, the OST Table, the UOM Terms or the Subscription Terms will only apply to Orders that occur after Licensor posts those changes online.\n \n13.4. Governing Law and Jurisdiction. If You obtained the Software directly from Dell, then the governing law and jurisdiction provisions set forth in Your Order Terms shall apply to this EULA. Otherwise the following shall apply:\n\nA. Subject to Section 13.4 D and 13.5, if You are domiciled in the United States or Canada: (1) this EULA and any Dispute is governed by the laws of the State of Texas (excluding the conflicts of law rules) and the federal laws of the United States; and (2) to the extent permitted by law, the state and federal courts located in Texas will have exclusive jurisdiction for any Dispute. Both parties agree to submit to the personal jurisdiction of the state and federal courts located within Travis or Williamson County, Texas, and agree to waive any and all objections to the exercise of jurisdiction over the parties by those courts and to venue in those courts.\n\nB. Subject to Section 13.4 D, if You are domiciled outside of the United States or Canada: (1) this EULA and any Dispute is governed by the substantive laws in force in the country in which the Licensor is located (as indicated in the Licensor Table located at www.dell.com/swlicensortable), without regard to its conflict of law rules; and (2) the exclusive place of jurisdiction for any Dispute shall be in such country.\n\nC. In any event, neither the U.N. Convention on Contracts for the International Sale of Goods, nor the Uniform Computer Information Transaction Act shall apply to this EULA or any Dispute.\n\nD. If You are an individual consumer, this Section 13.4 does not deprive You of the protection afforded to You by the provisions of mandatory consumer protections laws that are applicable to You, nor does it prevent you from seeking remedies or enforcing your rights as a consumer under such laws.\n\n13.5. Dispute Resolution and Binding Individual (non-class) Arbitration. This Section only applies if You are an individual consumer that resides in (or obtained the Software in) the United States or Canada. All Disputes shall be resolved exclusively and finally by binding individual arbitration. This means You and Licensor waive any right to litigate disputes in a court or before a jury and neither You nor Licensor shall be entitled to join, consolidate, or include any claims belonging to or alleged or arising from, by or on behalf of any third party to an arbitration brought hereunder, or to arbitrate any claim as a class action, class representative, class member, or in a private attorney general capacity. If You reside in (or obtained the Software in) the United States, the arbitration will be administered by the American Arbitration Association (AAA), or JAMS. If You reside in (or obtained the Software in) Canada, arbitration will be at ADR Chambers pursuant to the general ADR Chambers Rules for Arbitration located at www.adrchambers.com. The arbitration shall be conducted in the English language. The arbitration panel shall have exclusive authority to resolve any arbitrability issues including any dispute over this EULA or this arbitration provision’s scope, application, meaning and enforceability. The arbitration panel shall be empowered to grant whatever relief would be available in court, including without limitation preliminary relief, injunctive relief and specific performance. Any award of the arbitration panel shall be final and binding immediately when rendered, and judgment on the award may be entered in any court of competent jurisdiction. If any portion of this arbitration agreement is found unenforceable, the unenforceable portion shall be severed and the remaining arbitration terms shall be enforced (but in no event will there be a class arbitration). Consumer claimants (individuals whose transaction is intended for personal, family or household use) may elect to pursue their claims in small-claims court rather than arbitration. Licensor will be responsible for paying any individual consumer's arbitration/arbitrator fees. Notwithstanding the foregoing, Licensor may apply to any relevant government agency or any court of competent jurisdiction to preserve its rights under this EULA and to obtain any injunctive or preliminary relief, or any award of specific performance, to which it may be entitled, either against You or against a non-party; provided, however, that no such administrative or judicial authority shall have the right or power to render a judgment or award (or to enjoin the rendering of an arbitral award) for damages that may be due to or from either party under this EULA, which right and power shall be reserved exclusively to an arbitration panel proceeding in accordance herewith.\n\n13.6. Third Party Rights. Other than as expressly set out in this EULA, this EULA does not create any rights for any person who is not a party to it, and no person who is not a party to this EULA may enforce any of its terms or rely on any exclusion or limitation contained in it.\n\n13.7 Entire Agreement. You acknowledge that You have read this EULA, that You understand it, that You agree to be bound by its terms, and that this EULA, along with the Order Terms into which this EULA may be incorporated (as applicable), is the complete and exclusive statement of the agreement between You and Licensor regarding Your use of the Software. All content referenced in this EULA by hyperlink is incorporated into this EULA in its entirety and is available to You in hardcopy form upon Your request. The pre-printed terms of Your purchase order or any other document that is not issued or signed by Licensor or Dell do not apply to Software. You represent that You did not rely on any representations or statements that do not appear in this EULA when accepting this EULA.\n\n\n\n(Dell EULA rev 24FEB2020)",
                "ServiceTag": "ABCDEFG",
                "LicenseExpiry": "Never",
                "DeviceId": "20210624140433e8"
              }
            ],
            "Licenses@odata.count": 1,
            "@odata.id": "/redfish/v1/SFSSApp/Licenses?$expand=Licenses",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#Licenses",
            "@odata.type": "#LicensesCollection.LicensesCollection"
          }
        ],
        "title": "LicensesGET-Expand",
        "properties": {
          "Licenses": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "description": "A set of licenses",
            "items": {
              "type": "object",
              "properties": {
                "Identifier": {
                  "type": "string",
                  "minLength": 1,
                  "description": "License identifier"
                },
                "LicenseType": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Type of license; possible values include Evaluation, Enterprise, Partner, and Expansion licenses"
                },
                "TotalNumOfEndPoints": {
                  "type": "number",
                  "description": "Total number of endpoints the license supports"
                },
                "EULA": {
                  "type": "string",
                  "minLength": 1,
                  "description": "End User License Agreement"
                },
                "ServiceTag": {
                  "type": "string",
                  "minLength": 1,
                  "description": "License service tag"
                },
                "LicenseExpiry": {
                  "type": "string",
                  "minLength": 1,
                  "description": "License expiry date"
                },
                "DeviceId": {
                  "type": "string",
                  "minLength": 1,
                  "description": "A unique NVMe Qualified Name (NQN) that is used to identify the SFSS VM."
                }
              },
              "required": [
                "Identifier",
                "LicenseType",
                "TotalNumOfEndPoints",
                "EULA",
                "ServiceTag",
                "LicenseExpiry",
                "DeviceId"
              ]
            }
          },
          "Licenses@odata.count": {
            "type": "number",
            "description": "Number of licenses installed on the SFSS VM"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "Licenses",
          "Licenses@odata.count",
          "@odata.id",
          "@odata.context",
          "@odata.type"
        ]
      },
      "AuthenticationSequence-ENUMs": {
        "description": "This model lists the supported enumerations for the authentication sequence configuration.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "AuthenticationSequence": [
              "radius",
              "local",
              "tacacs+"
            ]
          }
        },
        "examples": [
          {
            "AuthenticationSequence": [
              "radius",
              "local",
              "tacacs+"
            ]
          }
        ],
        "title": "AuthenticationSequence-Enums",
        "properties": {
          "AuthenticationSequence": {
            "type": "array",
            "description": "Authentication sequence list; possible values include Local, RADIUS, and TACACS+ ",
            "items": {
              "type": "object"
            }
          }
        },
        "required": [
          "AuthenticationSequence"
        ]
      },
      "AuthenticationSequenceGET": {
        "description": "This model lists the authentication sequence configured in SFSS.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "AuthenticationSequence": [
              "tacacs+",
              "local"
            ],
            "@odata.id": "/redfish/v1/SFSSApp/AuthenticationSequence",
            "@odata.type": "#AuthenticationSequence.AuthenticationSequence",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#AuthenticationSequence/AuthenticationSequence/$entity"
          }
        },
        "examples": [
          {
            "AuthenticationSequence": [
              "tacacs+",
              "local"
            ],
            "@odata.id": "/redfish/v1/SFSSApp/AuthenticationSequence",
            "@odata.type": "#AuthenticationSequence.AuthenticationSequence",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#AuthenticationSequence/AuthenticationSequence/$entity"
          }
        ],
        "title": "AuthenticationSequenceGET",
        "properties": {
          "AuthenticationSequence": {
            "type": "array",
            "description": "Authentication sequence list",
            "items": {
              "type": "object"
            }
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "AuthenticationSequence",
          "@odata.id",
          "@odata.type",
          "@odata.context"
        ]
      },
      "TacacsServersGET": {
        "description": "This model lists all the TACACS+ servers configured in SFSS.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "ServerIp": "111.1.1.1",
            "ServerPass": "xxxxxx",
            "@odata.id": "/redfish/v1/SFSSApp/TacacsServers('111.1.1.1')",
            "@odata.type": "#TacacsServers.TacacsServers",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#TacacsServers/TacacsServers/$entity"
          }
        },
        "examples": [
          null,
          {
            "ServerIp": "111.1.1.1",
            "ServerPass": "xxxxxx",
            "@odata.id": "/redfish/v1/SFSSApp/TacacsServers('111.1.1.1')",
            "@odata.type": "#TacacsServers.TacacsServers",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#TacacsServers/TacacsServers/$entity"
          }
        ],
        "title": "TacacsServersGET",
        "properties": {
          "ServerIp": {
            "type": "string",
            "minLength": 1,
            "description": "IP address of the TACACS+ server"
          },
          "ServerPass": {
            "type": "string",
            "minLength": 1,
            "description": "Password to access the TACACS+ server"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "ServerIp",
          "ServerPass",
          "@odata.id",
          "@odata.type",
          "@odata.context"
        ]
      },
      "RadiusServersGET": {
        "description": "This model lists all the RADIUS servers configured in SFSS.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "RadiusServers": [
              {
                "@odata.id": "/redfish/v1/SFSSApp/RadiusServers('200.1.1.1')"
              }
            ],
            "RadiusServers@odata.count": 1,
            "@odata.id": "/redfish/v1/SFSSApp/RadiusServers",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#RadiusServers",
            "@odata.type": "#RadiusServersCollection.RadiusServersCollection"
          }
        },
        "examples": [
          {
            "RadiusServers": [
              {
                "@odata.id": "/redfish/v1/SFSSApp/RadiusServers('200.1.1.1')"
              }
            ],
            "RadiusServers@odata.count": 1,
            "@odata.id": "/redfish/v1/SFSSApp/RadiusServers",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#RadiusServers",
            "@odata.type": "#RadiusServersCollection.RadiusServersCollection"
          }
        ],
        "title": "RadiusServerGET",
        "properties": {
          "RadiusServers": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "description": "List of configured RADIUS servers",
            "items": {
              "type": "object",
              "properties": {
                "@odata.id": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "@odata.id"
              ]
            }
          },
          "RadiusServers@odata.count": {
            "type": "number",
            "description": "Number of configured RADIUS servers"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "RadiusServers",
          "RadiusServers@odata.count",
          "@odata.id",
          "@odata.context",
          "@odata.type"
        ]
      },
      "NTPServerGET": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "NtpServer": "10.199.39.1",
            "State": "Connected",
            "Status": "Disable",
            "@odata.id": "/redfish/v1/SFSSApp/NTP",
            "@odata.type": "#NTP.NTP",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#NTP/NTP/$entity"
          }
        },
        "description": "This model fetches the NTP server information.",
        "examples": [
          {
            "NtpServer": "10.199.39.1",
            "State": "Connected",
            "Status": "Disable",
            "@odata.id": "/redfish/v1/SFSSApp/NTP",
            "@odata.type": "#NTP.NTP",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#NTP/NTP/$entity"
          }
        ],
        "properties": {
          "NtpServer": {
            "type": "string",
            "description": "IP address of the NTP server"
          },
          "State": {
            "type": "string",
            "description": "NTP connection state; possible values include Connected and Not Connected "
          },
          "Status": {
            "type": "string",
            "description": "Status of the NTP service; possible values include Enable and Disable"
          },
          "@odata.id": {
            "type": "string"
          },
          "@odata.type": {
            "type": "string"
          },
          "@odata.context": {
            "type": "string"
          }
        }
      },
      "NTPServerConfig": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "Status": "Enable"
          }
        },
        "examples": [
          {
            "Status": "Enable"
          }
        ],
        "properties": {
          "Status": {
            "type": "string",
            "description": "Status of the NTP service"
          }
        },
        "title": "",
        "description": "This model enables or disables NTP service."
      },
      "RadiusServersGET-ID": {
        "description": "This model lists information about a RADIUS server based on the specified RADIUS server ID.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "ServerIp": "200.1.1.1",
            "ServerPass": "xxxxxx",
            "@odata.id": "/redfish/v1/SFSSApp/RadiusServers(\"200.1.1.1\")",
            "@odata.type": "#RadiusServers.RadiusServers",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#RadiusServers/RadiusServers/$entity"
          }
        },
        "examples": [
          {
            "ServerIp": "200.1.1.1",
            "ServerPass": "xxxxxx",
            "@odata.id": "/redfish/v1/SFSSApp/RadiusServers(\"200.1.1.1\")",
            "@odata.type": "#RadiusServers.RadiusServers",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#RadiusServers/RadiusServers/$entity"
          }
        ],
        "title": "RadiusServerGET-ID",
        "properties": {
          "ServerIp": {
            "type": "string",
            "minLength": 1,
            "description": "IPv4 address of the remote RADIUS server"
          },
          "ServerPass": {
            "type": "string",
            "minLength": 1,
            "description": "Password to access the remote RADIUS server"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "ServerIp",
          "ServerPass",
          "@odata.id",
          "@odata.type",
          "@odata.context"
        ]
      },
      "TacacsServersGET-ID": {
        "description": "This model lists the TACACS+ server information based on the specified TACACS+ server ID. ",
        "type": "object",
        "x-examples": {
          "example-1": {
            "TacacsServers": [
              {
                "@odata.id": "/redfish/v1/SFSSApp/TacacsServers('111.1.1.1')"
              }
            ],
            "TacacsServers@odata.count": 1,
            "@odata.id": "/redfish/v1/SFSSApp/TacacsServers",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#TacacsServers",
            "@odata.type": "#TacacsServersCollection.TacacsServersCollection"
          }
        },
        "examples": [
          {
            "TacacsServers": [
              {
                "@odata.id": "string"
              }
            ],
            "TacacsServers@odata.count": 0,
            "@odata.id": "string",
            "@odata.context": "string",
            "@odata.type": "string"
          },
          {
            "TacacsServers": [
              {
                "@odata.id": "string"
              }
            ],
            "TacacsServers@odata.count": 0,
            "@odata.id": "string",
            "@odata.context": "string",
            "@odata.type": "string"
          }
        ],
        "title": "TacacsServersGET-ID",
        "properties": {
          "TacacsServers": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "description": "List of configured TACACS+ servers",
            "items": {
              "type": "object",
              "properties": {
                "@odata.id": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "@odata.id"
              ]
            }
          },
          "TacacsServers@odata.count": {
            "type": "number",
            "description": "Number of configured TACACS+ servers"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "TacacsServers",
          "TacacsServers@odata.count",
          "@odata.id",
          "@odata.context",
          "@odata.type"
        ]
      },
      "EventsGET": {
        "description": "This model lists all the events in SFSS.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "Events": [
              {
                "Args": [
                  "1",
                  "NQN1"
                ],
                "CDCInstance": "1",
                "EEMI": "SVEP0004",
                "HostName": "J104XC3",
                "Message": "CDC Instance 1: Subsystem NQN1 is added.",
                "OriginOfCondition": [
                  "ZoneMember"
                ],
                "Severity": "Informational",
                "Source": "NZ-CENTRAL",
                "SourceSubType": "Zone",
                "timeStamp": "2021-05-18 16:36:25.353495",
                "@odata.id": "/redfish/v1/SFSSApp/Events('17')",
                "@odata.type": "#Events.Events",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#Events/Events/$entity"
              },
              {
                "Args": [
                  "1",
                  "NQN1"
                ],
                "CDCInstance": "1",
                "EEMI": "SVEP0004",
                "HostName": "J104XC3",
                "Message": "CDC Instance 1: Subsystem NQN1 is added.",
                "OriginOfCondition": [
                  "ZoneMember"
                ],
                "Severity": "Informational",
                "Source": "NZ-CENTRAL",
                "SourceSubType": "Zone",
                "timeStamp": "2021-05-14 15:08:07.864327",
                "@odata.id": "/redfish/v1/SFSSApp/Events('16')",
                "@odata.type": "#Events.Events",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#Events/Events/$entity"
              }
            ],
            "Events@odata.count": 17,
            "@odata.id": "/redfish/v1/SFSSApp/Events",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#Events",
            "@odata.type": "#EventsCollection.EventsCollection",
            "TotalCount": 22
          }
        },
        "examples": [
          {
            "Events": [
              {
                "Args": [
                  "1",
                  "NQN1"
                ],
                "CDCInstance": "1",
                "EEMI": "SVEP0004",
                "HostName": "J104XC3",
                "Message": "CDC Instance 1: Subsystem NQN1 is added.",
                "OriginOfCondition": [
                  "ZoneMember"
                ],
                "Severity": "Informational",
                "Source": "NZ-CENTRAL",
                "SourceSubType": "Zone",
                "timeStamp": "2021-05-18 16:36:25.353495",
                "@odata.id": "/redfish/v1/SFSSApp/Events('17')",
                "@odata.type": "#Events.Events",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#Events/Events/$entity"
              },
              {
                "Args": [
                  "1",
                  "NQN1"
                ],
                "CDCInstance": "1",
                "EEMI": "SVEP0004",
                "HostName": "J104XC3",
                "Message": "CDC Instance 1: Subsystem NQN1 is added.",
                "OriginOfCondition": [
                  "ZoneMember"
                ],
                "Severity": "Informational",
                "Source": "NZ-CENTRAL",
                "SourceSubType": "Zone",
                "timeStamp": "2021-05-14 15:08:07.864327",
                "@odata.id": "/redfish/v1/SFSSApp/Events('16')",
                "@odata.type": "#Events.Events",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#Events/Events/$entity"
              }
            ],
            "Events@odata.count": 17,
            "@odata.id": "/redfish/v1/SFSSApp/Events",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#Events",
            "@odata.type": "#EventsCollection.EventsCollection",
            "TotalCount": 22
          }
        ],
        "title": "EventsGET",
        "properties": {
          "Events": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "description": "A set of events",
            "items": {
              "type": "object",
              "properties": {
                "Args": {
                  "type": "array",
                  "description": "Required arguments",
                  "items": {
                    "type": "object"
                  }
                },
                "CDCInstance": {
                  "type": "string",
                  "minLength": 1,
                  "description": "CDC instance identifier"
                },
                "EEMI": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Enhanced Event Message Initiative (EEMI) Message Code"
                },
                "HostName": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Hostname of the CDC instance"
                },
                "Message": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Message summary"
                },
                "OriginOfCondition": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "Severity": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Severity of the event; possible values include Critical, Warning, and Informational"
                },
                "Source": {
                  "type": "string",
                  "minLength": 1,
                  "description": "SFSS service that is responsible for handling the event"
                },
                "SourceSubType": {
                  "type": "string",
                  "minLength": 1,
                  "description": "The module within the SFSS service that is responsible for handling the event "
                },
                "timeStamp": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Date and time at which the event occurred; date is of the mm/dd/yyyy format and time is of hh:mm:ss format"
                },
                "@odata.id": {
                  "type": "string",
                  "minLength": 1
                },
                "@odata.type": {
                  "type": "string",
                  "minLength": 1
                },
                "@odata.context": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "CDCInstance",
                "EEMI",
                "HostName",
                "Message",
                "Severity",
                "Source",
                "SourceSubType",
                "timeStamp",
                "@odata.id",
                "@odata.type",
                "@odata.context"
              ]
            }
          },
          "Events@odata.count": {
            "type": "number",
            "description": "Number of events reported"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          },
          "TotalCount": {
            "type": "number"
          }
        },
        "required": [
          "Events",
          "Events@odata.count",
          "@odata.id",
          "@odata.context",
          "@odata.type",
          "TotalCount"
        ]
      },
      "EventsGET-ID": {
        "description": "This model lists event information based on the specified event ID.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "Args": [
              "1",
              "NQN1"
            ],
            "CDCInstance": "1",
            "EEMI": "SVEP0004",
            "HostName": "J104XC3",
            "Message": "CDC Instance 1: Subsystem NQN1 is added.",
            "OriginOfCondition": [
              "ZoneMember"
            ],
            "Severity": "Informational",
            "Source": "NZ-CENTRAL",
            "SourceSubType": "Zone",
            "timeStamp": "2021-05-14 15:08:07.864327",
            "@odata.id": "/redfish/v1/SFSSApp/Events('16')",
            "@odata.type": "#Events.Events",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#Events/Events/$entity"
          }
        },
        "examples": [
          {
            "Args": [
              "1",
              "NQN1"
            ],
            "CDCInstance": "1",
            "EEMI": "SVEP0004",
            "HostName": "J104XC3",
            "Message": "CDC Instance 1: Subsystem NQN1 is added.",
            "OriginOfCondition": [
              "ZoneMember"
            ],
            "Severity": "Informational",
            "Source": "NZ-CENTRAL",
            "SourceSubType": "Zone",
            "timeStamp": "2021-05-14 15:08:07.864327",
            "@odata.id": "/redfish/v1/SFSSApp/Events('16')",
            "@odata.type": "#Events.Events",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#Events/Events/$entity"
          }
        ],
        "title": "EventsGET-ID",
        "properties": {
          "Args": {
            "type": "array",
            "description": "Required arguments for the specified event ",
            "items": {
              "type": "object"
            }
          },
          "CDCInstance": {
            "type": "string",
            "minLength": 1,
            "description": "CDC instance identifier"
          },
          "EEMI": {
            "type": "string",
            "minLength": 1,
            "description": "Enhanced Event Message Initiative (EEMI) Message Code"
          },
          "HostName": {
            "type": "string",
            "minLength": 1,
            "description": "Hostname of the SFSS VM"
          },
          "Message": {
            "type": "string",
            "minLength": 1,
            "description": "Message summary"
          },
          "OriginOfCondition": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "Severity": {
            "type": "string",
            "minLength": 1,
            "description": "Severity of the system message; possible values include Critical, Warning, and Informational"
          },
          "Source": {
            "type": "string",
            "minLength": 1,
            "description": "SFSS service that is responsible for handling the event"
          },
          "SourceSubType": {
            "type": "string",
            "minLength": 1,
            "description": "The module within the SFSS service that is responsible for handling the event "
          },
          "timeStamp": {
            "type": "string",
            "minLength": 1,
            "description": "Date and time at which the event took place; the date is of the mm/dd/yyyy format and time is of the hh:mm:ss format"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "Args",
          "CDCInstance",
          "EEMI",
          "HostName",
          "Message",
          "OriginOfCondition",
          "Severity",
          "Source",
          "SourceSubType",
          "timeStamp",
          "@odata.id",
          "@odata.type",
          "@odata.context"
        ]
      },
      "SFSSInterfaceListGET": {
        "description": "This model lists all the available interfaces in SFSS.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "List of Interfaces": [
              "ens160",
              "ens192",
              "ens192.15",
              "ens192.20"
            ]
          }
        },
        "examples": [
          {
            "List of Interfaces": [
              "ens160",
              "ens192",
              "ens192.15",
              "ens192.20"
            ]
          }
        ],
        "title": "SFSSInterfaceListGET",
        "properties": {
          "List of Interfaces": {
            "type": "array",
            "description": "A set of available interfaces",
            "items": {
              "type": "object"
            }
          }
        },
        "required": [
          "List of Interfaces"
        ]
      },
      "SosReportsGET": {
        "description": "This model lists the SOS reports from SFSS.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "SosReports": [
              {
                "@odata.id": "/redfish/v1/SFSSApp/SosReports('d25d9f7e-8ae0-490a-94fe-071e8asdef')"
              }
            ],
            "SosReports@odata.count": 1,
            "@odata.id": "/redfish/v1/SFSSApp/SosReports",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#SosReports",
            "@odata.type": "#SosReportsCollection.SosReportsCollection"
          }
        },
        "examples": [
          {
            "SosReports": [
              {
                "@odata.id": "/redfish/v1/SFSSApp/SosReports('d25d9f7e-8ae0-490a-94fe-071e8asdef')"
              }
            ],
            "SosReports@odata.count": 1,
            "@odata.id": "/redfish/v1/SFSSApp/SosReports",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#SosReports",
            "@odata.type": "#SosReportsCollection.SosReportsCollection"
          }
        ],
        "title": "SosReportsGET",
        "properties": {
          "SosReports": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "description": "A collection of system information that includes configuration details and diagnostic information",
            "items": {
              "type": "object",
              "properties": {
                "@odata.id": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "@odata.id"
              ]
            }
          },
          "SosReports@odata.count": {
            "type": "number",
            "description": "Number of SOS reports downloaded"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "SosReports",
          "SosReports@odata.count",
          "@odata.id",
          "@odata.context",
          "@odata.type"
        ]
      },
      "SosReportsGET-EXPAND": {
        "description": "This model lists detailed information about the SOS reports in SFSS.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "SosReports": [
              {
                "ID": "d25d9f7e-8ae0-490a-94fe-071e8asdef",
                "FileLocation": "100.94.72.166:/home/dell/temp_images/",
                "StatusMessage": "Successfully backed up",
                "ServerPassword": "r8p7yiHCeqHp59bN/X7GAjZij0POAeBafsxfj8dekbloWYIevbxpMvieLuwsb/+C",
                "Status": "Success",
                "TimeStamp": "1626734910.8032453",
                "TransportType": "SCP",
                "ServerUserName": "dell",
                "@odata.id": "/redfish/v1/SFSSApp/SosReports('d25d9f7e-8ae0-490a-94fe-071e8asdef')",
                "@odata.type": "#SosReports.SosReports",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#SosReports/SosReports/$entity"
              }
            ],
            "SosReports@odata.count": 1,
            "@odata.id": "/redfish/v1/SFSSApp/SosReports?$expand=SosReports",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#SosReports",
            "@odata.type": "#SosReportsCollection.SosReportsCollection"
          }
        },
        "examples": [
          {
            "SosReports": [
              {
                "ID": "d25d9f7e-8ae0-490a-94fe-071e8asdef",
                "FileLocation": "100.94.72.166:/home/dell/temp_images/",
                "StatusMessage": "Successfully backed up",
                "ServerPassword": "r8p7yiHCeqHp59bN/X7GAjZij0POAeBafsxfj8dekbloWYIevbxpMvieLuwsb/+C",
                "Status": "Success",
                "TimeStamp": "1626734910.8032453",
                "TransportType": "SCP",
                "ServerUserName": "dell",
                "@odata.id": "/redfish/v1/SFSSApp/SosReports('d25d9f7e-8ae0-490a-94fe-071e8asdef')",
                "@odata.type": "#SosReports.SosReports",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#SosReports/SosReports/$entity"
              }
            ],
            "SosReports@odata.count": 1,
            "@odata.id": "/redfish/v1/SFSSApp/SosReports?$expand=SosReports",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#SosReports",
            "@odata.type": "#SosReportsCollection.SosReportsCollection"
          }
        ],
        "title": "SosReportsGET-Expand",
        "properties": {
          "SosReports": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "description": "A collection of system information that includes configuration details and diagnostic information",
            "items": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "string",
                  "minLength": 1,
                  "description": "SOS report ID"
                },
                "FileLocation": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Location of the remote server to download the SOS report"
                },
                "StatusMessage": {
                  "type": "string",
                  "minLength": 1,
                  "description": "A detailed message on the status of the download operation"
                },
                "ServerPassword": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Password to access the remote server"
                },
                "Status": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Status of the SOS report download operation"
                },
                "TimeStamp": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Date and time of the SOS report download operation; the date is of the mm/dd/yyyy format and time is of the hh:mm:ss format"
                },
                "TransportType": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Protocol used for file transfer; possible values include SCP, SFTP, HTTP, and HTTPS"
                },
                "ServerUserName": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Username to access the remote server"
                },
                "@odata.id": {
                  "type": "string",
                  "minLength": 1
                },
                "@odata.type": {
                  "type": "string",
                  "minLength": 1
                },
                "@odata.context": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "ID",
                "FileLocation",
                "StatusMessage",
                "ServerPassword",
                "Status",
                "TimeStamp",
                "TransportType",
                "ServerUserName",
                "@odata.id",
                "@odata.type",
                "@odata.context"
              ]
            }
          },
          "SosReports@odata.count": {
            "type": "number",
            "description": "Number of SOS reports downloaded"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "SosReports",
          "SosReports@odata.count",
          "@odata.id",
          "@odata.context",
          "@odata.type"
        ]
      },
      "SosReportsGET-ID": {
        "description": "This model lists the SOS report based on the specified SOS report ID.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "ID": "d25d9f7e-8ae0-490a-94fe-071e8asdef",
            "FileLocation": "100.94.72.166:/home/dell/temp_images/",
            "StatusMessage": "Successfully backed up",
            "ServerPassword": "r8p7yiHCeqHp59bN/X7GAjZij0POAeBafsxfj8dekbloWYIevbxpMvieLuwsb/+C",
            "Status": "Success",
            "TimeStamp": "1626734910.8032453",
            "TransportType": "SCP",
            "ServerUserName": "dell",
            "@odata.id": "/redfish/v1/SFSSApp/SosReports('d25d9f7e-8ae0-490a-94fe-071e8asdef')",
            "@odata.type": "#SosReports.SosReports",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#SosReports/SosReports/$entity"
          }
        },
        "examples": [
          {
            "ID": "d25d9f7e-8ae0-490a-94fe-071e8asdef",
            "FileLocation": "100.94.72.166:/home/dell/temp_images/",
            "StatusMessage": "Successfully backed up",
            "ServerPassword": "r8p7yiHCeqHp59bN/X7GAjZij0POAeBafsxfj8dekbloWYIevbxpMvieLuwsb/+C",
            "Status": "Success",
            "TimeStamp": "1626734910.8032453",
            "TransportType": "SCP",
            "ServerUserName": "dell",
            "@odata.id": "/redfish/v1/SFSSApp/SosReports('d25d9f7e-8ae0-490a-94fe-071e8asdef')",
            "@odata.type": "#SosReports.SosReports",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#SosReports/SosReports/$entity"
          }
        ],
        "title": "SosReportsGET-ID",
        "properties": {
          "ID": {
            "type": "string",
            "minLength": 1,
            "description": "SOS report ID"
          },
          "FileLocation": {
            "type": "string",
            "minLength": 1,
            "description": "Location of the remote server to download the SOS report "
          },
          "StatusMessage": {
            "type": "string",
            "minLength": 1,
            "description": "A detailed status message of the SOS report download operation"
          },
          "ServerPassword": {
            "type": "string",
            "minLength": 1,
            "description": "Password to access the remote server"
          },
          "Status": {
            "type": "string",
            "minLength": 1,
            "description": "SOS report download status"
          },
          "TimeStamp": {
            "type": "string",
            "minLength": 1,
            "description": "Date and time at which the SOS report was downloaded; the date is of the mm/dd/yyyy and time is of the hh:mm:ss format"
          },
          "TransportType": {
            "type": "string",
            "minLength": 1,
            "description": "Protocol used for file transfer; possible values include SCP, SFTP, HTTP, and HTTPS"
          },
          "ServerUserName": {
            "type": "string",
            "minLength": 1,
            "description": "Username to access the remote server"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "ID",
          "FileLocation",
          "StatusMessage",
          "ServerPassword",
          "Status",
          "TimeStamp",
          "TransportType",
          "ServerUserName",
          "@odata.id",
          "@odata.type",
          "@odata.context"
        ]
      },
      "UserActivityAuditGET": {
        "description": "This model lists all the user activities. ",
        "type": "object",
        "x-examples": {
          "example-1": {
            "UserActivityAudits": [
              {
                "CDCInstance": "APP",
                "HTTPCode": "200 OK",
                "Operation": "GET",
                "Payload": "",
                "SourceIP": "10.134.7.5",
                "TimeStamp": "2021-06-28 08:33:21.686088",
                "URL": "http://stfs-infra/redfish/v1/SFSSApp/UserActivityAudit",
                "UserAgent": "PostmanRuntime/7.28.0",
                "UserName": "admin",
                "UserRole": "cdrom;floppy;sudo;audio;dip;video;plugdev;crontab;netdev;docker;admin",
                "@odata.id": "/redfish/v1/SFSSApp/UserActivityAudit('2')",
                "@odata.type": "#UserActivityAudit.UserActivityAudit",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#UserActivityAudit/UserActivityAudit/$entity"
              },
              {
                "CDCInstance": "APP",
                "HTTPCode": "201 Created",
                "Operation": "PATCH",
                "Payload": "{\"InstanceIdentifier\":\"1\",\"Interfaces\":[\"ens192\"]}",
                "SourceIP": "127.0.0.1",
                "TimeStamp": "2021-06-28 08:32:59.186355",
                "URL": "http://stfs-infra/redfish/v1/SFSSApp/CDCInstanceManagers('1')",
                "UserAgent": "curl/7.64.0",
                "UserName": "MENU_USER",
                "UserRole": "admin",
                "@odata.id": "/redfish/v1/SFSSApp/UserActivityAudit('1')",
                "@odata.type": "#UserActivityAudit.UserActivityAudit",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#UserActivityAudit/UserActivityAudit/$entity"
              }
            ],
            "UserActivityAudits@odata.count": 2,
            "@odata.id": "/redfish/v1/SFSSApp/UserActivityAudit",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#UserActivityAudit",
            "@odata.type": "#UserActivityAuditsCollection.UserActivityAuditsCollection",
            "TotalCount": "25"
          }
        },
        "examples": [
          {
            "UserActivityAudits": [
              {
                "CDCInstance": "APP",
                "HTTPCode": "200 OK",
                "Operation": "GET",
                "Payload": "",
                "SourceIP": "10.134.7.5",
                "TimeStamp": "2021-06-28 08:33:21.686088",
                "URL": "http://stfs-infra/redfish/v1/SFSSApp/UserActivityAudit",
                "UserAgent": "PostmanRuntime/7.28.0",
                "UserName": "admin",
                "UserRole": "cdrom;floppy;sudo;audio;dip;video;plugdev;crontab;netdev;docker;admin",
                "@odata.id": "/redfish/v1/SFSSApp/UserActivityAudit('2')",
                "@odata.type": "#UserActivityAudit.UserActivityAudit",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#UserActivityAudit/UserActivityAudit/$entity"
              },
              {
                "CDCInstance": "APP",
                "HTTPCode": "201 Created",
                "Operation": "PATCH",
                "Payload": "{\"InstanceIdentifier\":\"1\",\"Interfaces\":[\"ens192\"]}",
                "SourceIP": "127.0.0.1",
                "TimeStamp": "2021-06-28 08:32:59.186355",
                "URL": "http://stfs-infra/redfish/v1/SFSSApp/CDCInstanceManagers('1')",
                "UserAgent": "curl/7.64.0",
                "UserName": "MENU_USER",
                "UserRole": "admin",
                "@odata.id": "/redfish/v1/SFSSApp/UserActivityAudit('1')",
                "@odata.type": "#UserActivityAudit.UserActivityAudit",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#UserActivityAudit/UserActivityAudit/$entity"
              }
            ],
            "UserActivityAudits@odata.count": 2,
            "@odata.id": "/redfish/v1/SFSSApp/UserActivityAudit",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#UserActivityAudit",
            "@odata.type": "#UserActivityAuditsCollection.UserActivityAuditsCollection",
            "TotalCount": "25"
          }
        ],
        "title": "UserActivityAuditGET",
        "properties": {
          "UserActivityAudits": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "description": "A set of user activity audit records",
            "items": {
              "type": "object",
              "properties": {
                "CDCInstance": {
                  "type": "string",
                  "minLength": 1,
                  "description": "CDC instance identifier"
                },
                "HTTPCode": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Response code that indicates whether the user activity is successfully completed or not"
                },
                "Operation": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Operation performed by the user"
                },
                "Payload": {
                  "type": "string",
                  "description": "Information provided by the user for the specific user activity"
                },
                "SourceIP": {
                  "type": "string",
                  "minLength": 1,
                  "description": "IP address of the system from which the specific user activity was done "
                },
                "TimeStamp": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Date and time at which the operation was performed; the date is of the mm/dd/yyyy format and time is of the hh:mm:ss format"
                },
                "URL": {
                  "type": "string",
                  "minLength": 1,
                  "description": "RESTAPI URL that is used for the specific user activity"
                },
                "UserAgent": {
                  "type": "string",
                  "minLength": 1,
                  "description": "API platform from which the specific user activity was triggered "
                },
                "UserName": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Username of the user who performed the operation"
                },
                "UserRole": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Role of the user"
                },
                "@odata.id": {
                  "type": "string",
                  "minLength": 1
                },
                "@odata.type": {
                  "type": "string",
                  "minLength": 1
                },
                "@odata.context": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "CDCInstance",
                "HTTPCode",
                "Operation",
                "Payload",
                "SourceIP",
                "TimeStamp",
                "URL",
                "UserAgent",
                "UserName",
                "UserRole",
                "@odata.id",
                "@odata.type",
                "@odata.context"
              ]
            }
          },
          "UserActivityAudits@odata.count": {
            "type": "number",
            "description": "Number of user activity audit records"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          },
          "TotalCount": {
            "type": "string",
            "minLength": 1,
            "description": "Total number of user activity audit records"
          }
        },
        "required": [
          "UserActivityAudits",
          "UserActivityAudits@odata.count",
          "@odata.id",
          "@odata.context",
          "@odata.type",
          "TotalCount"
        ]
      },
      "UserActivityAuditGET-ID": {
        "description": "This model lists the user activity information based on the specified user activity ID",
        "type": "object",
        "x-examples": {
          "example-1": {
            "CDCInstance": "APP",
            "HTTPCode": "201 Created",
            "Operation": "PATCH",
            "Payload": "{\"InstanceIdentifier\":\"1\",\"Interfaces\":[\"ens192\"]}",
            "SourceIP": "127.0.0.1",
            "TimeStamp": "2021-06-28 08:32:59.186355",
            "URL": "http://stfs-infra/redfish/v1/SFSSApp/CDCInstanceManagers('1')",
            "UserAgent": "curl/7.64.0",
            "UserName": "MENU_USER",
            "UserRole": "admin",
            "@odata.id": "/redfish/v1/SFSSApp/UserActivityAudit('1')",
            "@odata.type": "#UserActivityAudit.UserActivityAudit",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#UserActivityAudit/UserActivityAudit/$entity"
          }
        },
        "examples": [
          {
            "CDCInstance": "APP",
            "HTTPCode": "201 Created",
            "Operation": "PATCH",
            "Payload": "{\"InstanceIdentifier\":\"1\",\"Interfaces\":[\"ens192\"]}",
            "SourceIP": "127.0.0.1",
            "TimeStamp": "2021-06-28 08:32:59.186355",
            "URL": "http://stfs-infra/redfish/v1/SFSSApp/CDCInstanceManagers('1')",
            "UserAgent": "curl/7.64.0",
            "UserName": "MENU_USER",
            "UserRole": "admin",
            "@odata.id": "/redfish/v1/SFSSApp/UserActivityAudit('1')",
            "@odata.type": "#UserActivityAudit.UserActivityAudit",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#UserActivityAudit/UserActivityAudit/$entity"
          }
        ],
        "title": "UserActivityAuditGET-ID",
        "properties": {
          "CDCInstance": {
            "type": "string",
            "minLength": 1,
            "description": "CDC instance identifier"
          },
          "HTTPCode": {
            "type": "string",
            "minLength": 1,
            "description": "Response code that indicates whether the user activity is successfully completed or not"
          },
          "Operation": {
            "type": "string",
            "minLength": 1,
            "description": "Operation performed by the user"
          },
          "Payload": {
            "type": "string",
            "minLength": 1,
            "description": "Information provided by the user for the specific user activity"
          },
          "SourceIP": {
            "type": "string",
            "minLength": 1,
            "description": "IP address of the system from which the specific user activity was done "
          },
          "TimeStamp": {
            "type": "string",
            "minLength": 1,
            "description": "Date and time at which the operation was performed; the date is of the mm/dd/yyyy format and time is of hh:mm:ss format"
          },
          "URL": {
            "type": "string",
            "minLength": 1,
            "description": "RESTAPI URL that is used for the specific user activity"
          },
          "UserAgent": {
            "type": "string",
            "minLength": 1
          },
          "UserName": {
            "type": "string",
            "minLength": 1,
            "description": "Username of the user who performed the operation "
          },
          "UserRole": {
            "type": "string",
            "minLength": 1,
            "description": "Role of the user"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "CDCInstance",
          "HTTPCode",
          "Operation",
          "Payload",
          "SourceIP",
          "TimeStamp",
          "URL",
          "UserAgent",
          "UserName",
          "UserRole",
          "@odata.id",
          "@odata.type",
          "@odata.context"
        ]
      },
      "IpAddressManagementGET": {
        "description": "This model lists all the available interfaces and VLANs configured in SFSS. ",
        "type": "object",
        "x-examples": {
          "example-1": {
            "IpAddressManagements": [
              {
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens160')"
              },
              {
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192')"
              },
              {
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens224')"
              },
              {
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens160.60')"
              },
              {
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192.24')"
              },
              {
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192.50')"
              },
              {
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192.51')"
              },
              {
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192.20')"
              },
              {
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192.21')"
              },
              {
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192.22')"
              }
            ],
            "IpAddressMgmts@odata.count": 10,
            "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements",
            "@odata.type": "#IpAddressMgmtsCollection.IpAddressMgmtsCollection"
          }
        },
        "examples": [
          {
            "IpAddressManagements": [
              {
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens160')"
              },
              {
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192')"
              },
              {
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens224')"
              },
              {
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens160.60')"
              },
              {
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192.24')"
              },
              {
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192.50')"
              },
              {
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192.51')"
              },
              {
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192.20')"
              },
              {
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192.21')"
              },
              {
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192.22')"
              }
            ],
            "IpAddressMgmts@odata.count": 10,
            "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements",
            "@odata.type": "#IpAddressMgmtsCollection.IpAddressMgmtsCollection"
          }
        ],
        "title": "IpAddressManagementGET",
        "properties": {
          "IpAddressManagements": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "description": "List of available interfaces",
            "items": {
              "type": "object",
              "properties": {
                "@odata.id": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "@odata.id"
              ]
            }
          },
          "IpAddressMgmts@odata.count": {
            "type": "number",
            "description": "Number of available interfaces"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "IpAddressManagements",
          "IpAddressMgmts@odata.count",
          "@odata.id",
          "@odata.context",
          "@odata.type"
        ]
      },
      "IpAddressManagementGET-EXPAND": {
        "description": "This model lists detailed information about all the available and configured interfaces in SFSS.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "IpAddressManagements": [
              {
                "Interface": "ens161.10",
                "Type": "VLAN",
                "IPV4Config": "AUTOMATIC",
                "IPV6Config": "AUTOMATIC",
                "Name": "SAN NETWORK 1 vlan10",
                "ParentInterface": "ens161",
                "VlanId": 10,
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens161.10')",
                "@odata.type": "#IpAddressManagements.IpAddressManagements",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements/IpAddressManagements/$entity"
              },
              {
                "Interface": "ens225",
                "Type": "ETHERNET",
                "IPV4Address": [
                  "0.0.0.0"
                ],
                "IPV4Config": "MANUAL",
                "IPV4PrefixLength": 32,
                "IPV6Config": "AUTOMATIC",
                "MACAddress": "00:50:56:B9:D0:0D",
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens225')",
                "@odata.type": "#IpAddressManagements.IpAddressManagements",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements/IpAddressManagements/$entity"
              },
              {
                "Interface": "ens160",
                "Type": "ETHERNET",
                "IPV4Address": [
                  "100.94.73.61"
                ],
                "IPV4Config": "MANUAL",
                "IPV4Gateway": "100.94.73.254",
                "IPV4PrefixLength": 24,
                "IPV6Config": "AUTOMATIC",
                "MACAddress": "00:50:56:B9:6D:9B",
                "MTU": 1500,
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens160')",
                "@odata.type": "#IpAddressManagements.IpAddressManagements",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements/IpAddressManagements/$entity"
              },
              {
                "Interface": "ens192",
                "Type": "ETHERNET",
                "IPV4Address": [
                  "1.1.1.1"
                ],
                "IPV4Config": "MANUAL",
                "IPV4Gateway": "1.1.1.2",
                "IPV4PrefixLength": 24,
                "IPV6Address": [
                  "6::5"
                ],
                "IPV6Config": "MANUAL",
                "IPV6Gateway": "6::4",
                "IPV6PrefixLength": 64,
                "MACAddress": "00:50:56:B9:64:CC",
                "MTU": 0,
                "Name": "b-b",
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192')",
                "@odata.type": "#IpAddressManagements.IpAddressManagements",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements/IpAddressManagements/$entity"
              },
              {
                "Interface": "ens256",
                "Type": "ETHERNET",
                "IPV4Address": [
                  "3.3.3.3"
                ],
                "IPV4Config": "MANUAL",
                "IPV4Gateway": "3.3.3.254",
                "IPV4PrefixLength": 32,
                "IPV6Config": "AUTOMATIC",
                "MACAddress": "00:50:56:B9:07:DD",
                "MTU": 0,
                "Name": "ens256",
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens256')",
                "@odata.type": "#IpAddressManagements.IpAddressManagements",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements/IpAddressManagements/$entity"
              },
              {
                "Interface": "ens224",
                "Type": "ETHERNET",
                "IPV4Address": [
                  "6.6.6.6"
                ],
                "IPV4Config": "MANUAL",
                "IPV4Gateway": "6.6.6.254",
                "IPV4PrefixLength": 32,
                "IPV6Config": "AUTOMATIC",
                "MACAddress": "00:50:56:B9:55:9B",
                "MTU": 1500,
                "Name": "ens224",
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens224')",
                "@odata.type": "#IpAddressManagements.IpAddressManagements",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements/IpAddressManagements/$entity"
              },
              {
                "Interface": "ens194",
                "Type": "ETHERNET",
                "IPV4Address": [
                  "0.0.0.0"
                ],
                "IPV4Config": "MANUAL",
                "IPV4PrefixLength": 32,
                "IPV6Config": "AUTOMATIC",
                "MACAddress": "00:50:56:B9:94:E1",
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens194')",
                "@odata.type": "#IpAddressManagements.IpAddressManagements",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements/IpAddressManagements/$entity"
              },
              {
                "Interface": "ens162",
                "Type": "ETHERNET",
                "IPV4Address": [
                  "0.0.0.0"
                ],
                "IPV4Config": "MANUAL",
                "IPV4PrefixLength": 32,
                "IPV6Config": "AUTOMATIC",
                "MACAddress": "00:50:56:B9:B2:D8",
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens162')",
                "@odata.type": "#IpAddressManagements.IpAddressManagements",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements/IpAddressManagements/$entity"
              },
              {
                "Interface": "ens257",
                "Type": "ETHERNET",
                "IPV4Address": [
                  "0.0.0.0"
                ],
                "IPV4Config": "MANUAL",
                "IPV4PrefixLength": 32,
                "IPV6Config": "AUTOMATIC",
                "MACAddress": "00:50:56:B9:A8:0B",
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens257')",
                "@odata.type": "#IpAddressManagements.IpAddressManagements",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements/IpAddressManagements/$entity"
              },
              {
                "Interface": "ens161",
                "Type": "ETHERNET",
                "IPV4Address": [
                  "0.0.0.0"
                ],
                "IPV4Config": "MANUAL",
                "IPV4PrefixLength": 32,
                "IPV6Config": "AUTOMATIC",
                "MACAddress": "00:50:56:B9:68:06",
                "MTU": 0,
                "Name": "SAN NETWORK 1",
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens161')",
                "@odata.type": "#IpAddressManagements.IpAddressManagements",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements/IpAddressManagements/$entity"
              },
              {
                "Interface": "ens193",
                "Type": "ETHERNET",
                "IPV4Address": [
                  "0.0.0.0"
                ],
                "IPV4Config": "MANUAL",
                "IPV4PrefixLength": 32,
                "IPV6Config": "AUTOMATIC",
                "MACAddress": "00:50:56:B9:00:39",
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens193')",
                "@odata.type": "#IpAddressManagements.IpAddressManagements",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements/IpAddressManagements/$entity"
              }
            ],
            "IpAddressManagements@odata.count": 11,
            "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements?$expand=IpAddressManagements",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements",
            "@odata.type": "#IpAddressManagementsCollection.IpAddressManagementsCollection"
          }
        },
        "examples": [
          {
            "IpAddressManagements": [
              {
                "Interface": "ens161.10",
                "Type": "VLAN",
                "IPV4Config": "AUTOMATIC",
                "IPV6Config": "AUTOMATIC",
                "Name": "SAN NETWORK 1 vlan10",
                "ParentInterface": "ens161",
                "VlanId": 10,
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens161.10')",
                "@odata.type": "#IpAddressManagements.IpAddressManagements",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements/IpAddressManagements/$entity"
              },
              {
                "Interface": "ens225",
                "Type": "ETHERNET",
                "IPV4Address": [
                  "0.0.0.0"
                ],
                "IPV4Config": "MANUAL",
                "IPV4PrefixLength": 32,
                "IPV6Config": "AUTOMATIC",
                "MACAddress": "00:50:56:B9:D0:0D",
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens225')",
                "@odata.type": "#IpAddressManagements.IpAddressManagements",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements/IpAddressManagements/$entity"
              },
              {
                "Interface": "ens160",
                "Type": "ETHERNET",
                "IPV4Address": [
                  "100.94.73.61"
                ],
                "IPV4Config": "MANUAL",
                "IPV4Gateway": "100.94.73.254",
                "IPV4PrefixLength": 24,
                "IPV6Config": "AUTOMATIC",
                "MACAddress": "00:50:56:B9:6D:9B",
                "MTU": 1500,
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens160')",
                "@odata.type": "#IpAddressManagements.IpAddressManagements",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements/IpAddressManagements/$entity"
              },
              {
                "Interface": "ens192",
                "Type": "ETHERNET",
                "IPV4Address": [
                  "1.1.1.1"
                ],
                "IPV4Config": "MANUAL",
                "IPV4Gateway": "1.1.1.2",
                "IPV4PrefixLength": 24,
                "IPV6Address": [
                  "6::5"
                ],
                "IPV6Config": "MANUAL",
                "IPV6Gateway": "6::4",
                "IPV6PrefixLength": 64,
                "MACAddress": "00:50:56:B9:64:CC",
                "MTU": 0,
                "Name": "b-b",
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192')",
                "@odata.type": "#IpAddressManagements.IpAddressManagements",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements/IpAddressManagements/$entity"
              },
              {
                "Interface": "ens256",
                "Type": "ETHERNET",
                "IPV4Address": [
                  "3.3.3.3"
                ],
                "IPV4Config": "MANUAL",
                "IPV4Gateway": "3.3.3.254",
                "IPV4PrefixLength": 32,
                "IPV6Config": "AUTOMATIC",
                "MACAddress": "00:50:56:B9:07:DD",
                "MTU": 0,
                "Name": "ens256",
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens256')",
                "@odata.type": "#IpAddressManagements.IpAddressManagements",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements/IpAddressManagements/$entity"
              },
              {
                "Interface": "ens224",
                "Type": "ETHERNET",
                "IPV4Address": [
                  "6.6.6.6"
                ],
                "IPV4Config": "MANUAL",
                "IPV4Gateway": "6.6.6.254",
                "IPV4PrefixLength": 32,
                "IPV6Config": "AUTOMATIC",
                "MACAddress": "00:50:56:B9:55:9B",
                "MTU": 1500,
                "Name": "ens224",
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens224')",
                "@odata.type": "#IpAddressManagements.IpAddressManagements",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements/IpAddressManagements/$entity"
              },
              {
                "Interface": "ens194",
                "Type": "ETHERNET",
                "IPV4Address": [
                  "0.0.0.0"
                ],
                "IPV4Config": "MANUAL",
                "IPV4PrefixLength": 32,
                "IPV6Config": "AUTOMATIC",
                "MACAddress": "00:50:56:B9:94:E1",
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens194')",
                "@odata.type": "#IpAddressManagements.IpAddressManagements",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements/IpAddressManagements/$entity"
              },
              {
                "Interface": "ens162",
                "Type": "ETHERNET",
                "IPV4Address": [
                  "0.0.0.0"
                ],
                "IPV4Config": "MANUAL",
                "IPV4PrefixLength": 32,
                "IPV6Config": "AUTOMATIC",
                "MACAddress": "00:50:56:B9:B2:D8",
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens162')",
                "@odata.type": "#IpAddressManagements.IpAddressManagements",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements/IpAddressManagements/$entity"
              },
              {
                "Interface": "ens257",
                "Type": "ETHERNET",
                "IPV4Address": [
                  "0.0.0.0"
                ],
                "IPV4Config": "MANUAL",
                "IPV4PrefixLength": 32,
                "IPV6Config": "AUTOMATIC",
                "MACAddress": "00:50:56:B9:A8:0B",
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens257')",
                "@odata.type": "#IpAddressManagements.IpAddressManagements",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements/IpAddressManagements/$entity"
              },
              {
                "Interface": "ens161",
                "Type": "ETHERNET",
                "IPV4Address": [
                  "0.0.0.0"
                ],
                "IPV4Config": "MANUAL",
                "IPV4PrefixLength": 32,
                "IPV6Config": "AUTOMATIC",
                "MACAddress": "00:50:56:B9:68:06",
                "MTU": 0,
                "Name": "SAN NETWORK 1",
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens161')",
                "@odata.type": "#IpAddressManagements.IpAddressManagements",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements/IpAddressManagements/$entity"
              },
              {
                "Interface": "ens193",
                "Type": "ETHERNET",
                "IPV4Address": [
                  "0.0.0.0"
                ],
                "IPV4Config": "MANUAL",
                "IPV4PrefixLength": 32,
                "IPV6Config": "AUTOMATIC",
                "MACAddress": "00:50:56:B9:00:39",
                "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens193')",
                "@odata.type": "#IpAddressManagements.IpAddressManagements",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements/IpAddressManagements/$entity"
              }
            ],
            "IpAddressManagements@odata.count": 11,
            "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements?$expand=IpAddressManagements",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements",
            "@odata.type": "#IpAddressManagementsCollection.IpAddressManagementsCollection"
          }
        ],
        "title": "IpAddressManagementGET-Expand",
        "properties": {
          "IpAddressManagements": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "description": "A set of available interfaces",
            "items": {
              "type": "object",
              "properties": {
                "Interface": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Interface identifier"
                },
                "Type": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Interface type; possible values include Ethernet and VLAN"
                },
                "IPV4Address": {
                  "type": "array",
                  "description": "IPv4 address configured on the interface",
                  "items": {
                    "type": "object"
                  }
                },
                "IPV4Config": {
                  "type": "string",
                  "minLength": 1,
                  "description": "IPv4 configuration type; possible values include Manual, Automatic, and Disabled "
                },
                "IPV4Gateway": {
                  "type": "string",
                  "minLength": 1,
                  "description": "IPv4 gateway address"
                },
                "IPV4PrefixLength": {
                  "type": "number",
                  "description": "Subnet mask"
                },
                "IPV6Address": {
                  "type": "array",
                  "description": "IPv6 address configured on the interface",
                  "items": {
                    "type": "object"
                  }
                },
                "IPV6Config": {
                  "type": "string",
                  "minLength": 1,
                  "description": "IPv6 configuration type; possible values include Manual, Automatic, and Disabled"
                },
                "IPV6Gateway": {
                  "type": "string",
                  "minLength": 1,
                  "description": "IPv6 gateway address"
                },
                "IPV6PrefixLength": {
                  "type": "number",
                  "description": "Subnet mask"
                },
                "MACAddress": {
                  "type": "string",
                  "minLength": 1,
                  "description": "MAC address of the interface"
                },
                "MTU": {
                  "type": "number",
                  "description": "Maximum transmission unit of the interface; default value is 1500"
                },
                "Name": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Friendly name configured for the interface"
                },
                "@odata.id": {
                  "type": "string",
                  "minLength": 1
                },
                "@odata.type": {
                  "type": "string",
                  "minLength": 1
                },
                "@odata.context": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "Interface",
                "Type",
                "IPV4Config",
                "IPV4Gateway",
                "IPV4PrefixLength",
                "IPV6Config",
                "IPV6Gateway",
                "IPV6PrefixLength",
                "MACAddress",
                "MTU",
                "Name",
                "@odata.id",
                "@odata.type",
                "@odata.context"
              ]
            }
          },
          "IpAddressManagements@odata.count": {
            "type": "number",
            "description": "Total number of available interfaces"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "IpAddressManagements",
          "IpAddressManagements@odata.count",
          "@odata.id",
          "@odata.context",
          "@odata.type"
        ]
      },
      "IpAddressManagementGET-ID": {
        "description": "This model lists the interface information based on the specified interface ID.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "Interface": "ens160",
            "IPV4Address": [
              "100.94.72.198"
            ],
            "Type": "ETHERNET",
            "IPV4Config": "MANUAL",
            "Name": "Management Interface",
            "IPV4Gateway": "100.94.72.254",
            "IPV4PrefixLength": 16,
            "IPV6Address": [
              "fe80::1699:6f09:43dd:56c1"
            ],
            "IPV6Config": "MANUAL",
            "IPV6PrefixLength": 32,
            "MTU": 9000,
            "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens160')",
            "@odata.type": "#IpAddressManagements.IpAddressManagements",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements/IpAddressManagements/$entity"
          }
        },
        "examples": [
          {
            "Interface": "ens160",
            "IPV4Address": [
              "100.94.72.198"
            ],
            "Type": "ETHERNET",
            "IPV4Config": "MANUAL",
            "Name": "Management Interface",
            "IPV4Gateway": "100.94.72.254",
            "IPV4PrefixLength": 16,
            "IPV6Address": [
              "fe80::1699:6f09:43dd:56c1"
            ],
            "IPV6Config": "MANUAL",
            "IPV6PrefixLength": 32,
            "MTU": 9000,
            "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens160')",
            "@odata.type": "#IpAddressManagements.IpAddressManagements",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements/IpAddressManagements/$entity"
          },
          {
            "Interface": "ens160.60",
            "Type": "VLAN",
            "IPV4Address": [
              "30.1.1.1"
            ],
            "IPV4Config": "MANUAL",
            "IPV4Gateway": "30.1.1.254",
            "Name": "Some User Defined Interface",
            "IPV4PrefixLength": 16,
            "IPV6Config": "AUTOMATIC",
            "ParentInterface": "ens160",
            "VlanId": 60,
            "MTU": 9000,
            "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens160.60')",
            "@odata.type": "#IpAddressManagements.IpAddressManagements",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements/IpAddressManagements/$entity"
          },
          {
            "Interface": "ens192.50",
            "Type": "VLAN",
            "IPV4Address": [
              "100.104.91.1"
            ],
            "IPV4Config": "MANUAL",
            "IPV4Gateway": "30.1.1.254",
            "IPV4PrefixLength": 24,
            "IPV4Route": [
              {
                "Destination": "2.1.1.7",
                "DestinationPrefix": "24,",
                "Metric": "20",
                "NextHop": "2.3.4.7,"
              },
              {
                "Destination": "2.1.1.8",
                "DestinationPrefix": "20,",
                "Metric": "20",
                "NextHop": "2.3.4.8,"
              }
            ],
            "IPV6Address": [
              "fe80::1699:6fff:43dd:56c1"
            ],
            "IPV6Config": "MANUAL",
            "IPV6Gateway": "fe10::1699:6f09:43dd:ffff",
            "IPV6PrefixLength": 64,
            "IPV6Route": [
              {
                "Destination": "1280::1ae9:6bff:431a:561b",
                "DestinationPrefix": "64,",
                "Metric": "55",
                "NextHop": "fe80::1ff:fe23:4567:890a,"
              }
            ],
            "ParentInterface": "ens192",
            "VlanId": 50,
            "@odata.id": "/redfish/v1/SFSSApp/IpAddressManagements('ens192.50')",
            "@odata.type": "#IpAddressManagements.IpAddressManagements",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#IpAddressManagements/IpAddressManagements/$entity"
          }
        ],
        "title": "IpAddressManagementGET-ID",
        "properties": {
          "Interface": {
            "type": "string",
            "minLength": 1,
            "description": "Interface identifier"
          },
          "IPV4Address": {
            "type": "array",
            "description": "IPv4 address configured on the interface",
            "items": {
              "type": "object"
            }
          },
          "Type": {
            "type": "string",
            "minLength": 1,
            "description": "Interface type; possible values include Ethernet and VLAN"
          },
          "IPV4Config": {
            "type": "string",
            "minLength": 1,
            "description": "IPv4 configuration type; possible values include Manual, Automatic, and Disabled"
          },
          "Name": {
            "type": "string",
            "minLength": 1,
            "description": "Friendly name for the configured interface"
          },
          "IPV4Gateway": {
            "type": "string",
            "minLength": 1,
            "description": "IPv4 gateway address"
          },
          "IPV4PrefixLength": {
            "type": "number",
            "description": "Subnet mask"
          },
          "IPV4Route": {
            "type": "array",
            "description": "IPv4 static route configuration",
            "items": {
              "type": "object",
              "properties": {
                "Destination": {
                  "type": "string",
                  "description": "Destination IP address"
                },
                "DestinationPrefix": {
                  "type": "integer",
                  "description": "Destination subnet mask"
                },
                "NextHop": {
                  "type": "string",
                  "description": "Next hop IP address"
                },
                "Metric": {
                  "type": "integer",
                  "description": "The cost assigned to the route; valid range is from 1 to 255"
                }
              }
            }
          },
          "IPV6Address": {
            "type": "array",
            "description": "IPv6 address configured on the interface",
            "items": {
              "type": "object"
            }
          },
          "IPV6Config": {
            "type": "string",
            "minLength": 1,
            "description": "IPv6 configuration type; possible values include Manual, Automatic, and Disabled"
          },
          "IPV6PrefixLength": {
            "type": "number",
            "description": "IPv6 address subnet mask"
          },
          "MTU": {
            "type": "number",
            "description": "Maximum transmission unit for the interface; default value is 1500"
          },
          "IPV6Route": {
            "type": "array",
            "description": "IPv6 static route configuration",
            "items": {
              "type": "object",
              "properties": {
                "Destination": {
                  "type": "string",
                  "description": "Destination IP address"
                },
                "DestinationPrefix": {
                  "type": "integer",
                  "description": "Destination subnet mask"
                },
                "NextHop": {
                  "type": "string",
                  "description": "Next hop IP address"
                },
                "Metric": {
                  "type": "integer",
                  "description": "The cost assigned to the route; valid range is from 1 to 255"
                }
              }
            }
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "Interface",
          "IPV4Address",
          "Type",
          "IPV4Config",
          "Name",
          "IPV4Gateway",
          "IPV4PrefixLength",
          "IPV6Address",
          "IPV6Config",
          "IPV6PrefixLength",
          "MTU",
          "@odata.id",
          "@odata.type",
          "@odata.context"
        ]
      },
      "GlobalSettingsGET": {
        "description": "This model contains the global setting information.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "HostName": "dellemc-networkappliance",
            "ReservedIPV4SubnetPrefix": "172.20.x.x",
            "ReservedIPV6SubnetPrefix": "fd02::x",
            "StorageInterfaceMTU": 7000,
            "@odata.id": "/redfish/v1/SFSSApp/GlobalSettings",
            "@odata.type": "#GlobalSettings.GlobalSettings",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#GlobalSettings/GlobalSettings/$entity"
          }
        },
        "examples": [
          {
            "HostName": "string",
            "ReservedIPV4SubnetPrefix": "string",
            "ReservedIPV6SubnetPrefix": "string",
            "StorageInterfaceMTU": 0,
            "@odata.id": "string",
            "@odata.type": "string",
            "@odata.context": "string"
          }
        ],
        "title": "GlobalSettingsGET",
        "properties": {
          "HostName": {
            "type": "string",
            "minLength": 1,
            "description": "Hostname of the SFSS VM"
          },
          "ReservedIPV4SubnetPrefix": {
            "type": "string",
            "minLength": 1,
            "description": "Reserved IPv4 subnet prefix for internal VM networking use; the default value is 172.18.x.x"
          },
          "ReservedIPV6SubnetPrefix": {
            "type": "string",
            "minLength": 1,
            "description": "Reserved IPv6 subnet prefix for internal VM networking use; the default value is fd01::x"
          },
          "StorageInterfaceMTU": {
            "type": "number",
            "description": "Maximum transmission unit; range is from 1250 to 9000; default value is 1500"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "HostName",
          "ReservedIPV4SubnetPrefix",
          "ReservedIPV6SubnetPrefix",
          "StorageInterfaceMTU",
          "@odata.id",
          "@odata.type",
          "@odata.context"
        ]
      },
      "RestoresGET": {
        "description": "This model lists the restore information from SFSS. ",
        "type": "object",
        "x-examples": {
          "example-1": {
            "Restores": [
              {
                "@odata.id": "/redfish/v1/SFSSApp/Restores('d25d9f7e-8ae0-490a-94fe-071e8b2fdf60')"
              }
            ],
            "Restores@odata.count": 1,
            "@odata.id": "/redfish/v1/SFSSApp/Restores",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#Restores",
            "@odata.type": "#RestoresCollection.RestoresCollection"
          }
        },
        "examples": [
          {
            "Restores": [
              {
                "@odata.id": "/redfish/v1/SFSSApp/Restores('d25d9f7e-8ae0-490a-94fe-071e8b2fdf60')"
              }
            ],
            "Restores@odata.count": 1,
            "@odata.id": "/redfish/v1/SFSSApp/Restores",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#Restores",
            "@odata.type": "#RestoresCollection.RestoresCollection"
          }
        ],
        "title": "RestoresGET",
        "properties": {
          "Restores": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "description": "A set of restore operations performed on SFSS",
            "items": {
              "type": "object",
              "properties": {
                "@odata.id": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "@odata.id"
              ]
            }
          },
          "Restores@odata.count": {
            "type": "number",
            "description": "Number of restore operations performed"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "Restores",
          "Restores@odata.count",
          "@odata.id",
          "@odata.context",
          "@odata.type"
        ]
      },
      "RestoresGET-ID": {
        "description": "This model lists the restore information based on the specified restore ID.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "ID": "d25d9f7e-8ae0-490a-94fe-071e8b2fdf60",
            "ImageServerLocation": "100.94.72.166:/home/dell/temp_images/some_uuid.tar.gz",
            "StatusMessage": "Successfully restored",
            "ImageServerPassword": "dKc4igmRo9c5niXxRBdRsN45PBuFq2P2b+FfMf4D9DPXwKU05vYRW2vViSAfGamm",
            "Status": "Success",
            "TimeStamp": "1626334910.8032453",
            "TransportType": "SCP",
            "ImageServerUserName": "dell",
            "@odata.id": "/redfish/v1/SFSSApp/Restores('d25d9f7e-8ae0-490a-94fe-071e8b2fdf60')",
            "@odata.type": "#Restores.Restores",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#Restores/Restores/$entity"
          }
        },
        "examples": [
          {
            "ID": "d25d9f7e-8ae0-490a-94fe-071e8b2fdf60",
            "ImageServerLocation": "100.94.72.166:/home/dell/temp_images/some_uuid.tar.gz",
            "StatusMessage": "Successfully restored",
            "ImageServerPassword": "dKc4igmRo9c5niXxRBdRsN45PBuFq2P2b+FfMf4D9DPXwKU05vYRW2vViSAfGamm",
            "Status": "Success",
            "TimeStamp": "1626334910.8032453",
            "TransportType": "SCP",
            "ImageServerUserName": "dell",
            "@odata.id": "/redfish/v1/SFSSApp/Restores('d25d9f7e-8ae0-490a-94fe-071e8b2fdf60')",
            "@odata.type": "#Restores.Restores",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#Restores/Restores/$entity"
          }
        ],
        "title": "RestoresGET-ID",
        "properties": {
          "ID": {
            "type": "string",
            "minLength": 1,
            "description": "Restore identifier"
          },
          "ImageServerLocation": {
            "type": "string",
            "minLength": 1,
            "description": "Remote server location where the backup file that is to be restored is available"
          },
          "StatusMessage": {
            "type": "string",
            "minLength": 1,
            "description": "Detailed status message of the restore operation"
          },
          "ImageServerPassword": {
            "type": "string",
            "minLength": 1,
            "description": "Password to access the remote server"
          },
          "Status": {
            "type": "string",
            "minLength": 1,
            "description": "Status of the restore operation; possible values include Success and Failure"
          },
          "TimeStamp": {
            "type": "string",
            "minLength": 1,
            "description": "Date and time of the restore operation; date in mm/dd/yyyy format and time in hh:mm:ss format"
          },
          "TransportType": {
            "type": "string",
            "minLength": 1,
            "description": "Transport type used to copy the backup file to the remote server; possible values include SCP, HTTP, HTTPS, and SFTP"
          },
          "ImageServerUserName": {
            "type": "string",
            "minLength": 1,
            "description": "Username to access the remote server"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "ID",
          "ImageServerLocation",
          "StatusMessage",
          "ImageServerPassword",
          "Status",
          "TimeStamp",
          "TransportType",
          "ImageServerUserName",
          "@odata.id",
          "@odata.type",
          "@odata.context"
        ]
      },
      "BackupsGET": {
        "description": "This model lists all the backups taken from the SFSS VM.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "Backups": [
              {
                "@odata.id": "/redfish/v1/SFSSApp/Backups('d25d9f7e-8ae0-490a-94fe-071e8asdef')"
              }
            ],
            "Backups@odata.count": 1,
            "@odata.id": "/redfish/v1/SFSSApp/Backups",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#Backups",
            "@odata.type": "#BackupsCollection.BackupsCollection"
          }
        },
        "examples": [
          {
            "Backups": [
              {
                "@odata.id": "/redfish/v1/SFSSApp/Backups('d25d9f7e-8ae0-490a-94fe-071e8asdef')"
              }
            ],
            "Backups@odata.count": 1,
            "@odata.id": "/redfish/v1/SFSSApp/Backups",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#Backups",
            "@odata.type": "#BackupsCollection.BackupsCollection"
          }
        ],
        "title": "BackupsGET",
        "properties": {
          "Backups": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "description": "A set of backups obtained from SFSS",
            "items": {
              "type": "object",
              "properties": {
                "@odata.id": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "@odata.id"
              ]
            }
          },
          "Backups@odata.count": {
            "type": "number",
            "description": "Number of backups available"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "Backups",
          "Backups@odata.count",
          "@odata.id",
          "@odata.context",
          "@odata.type"
        ]
      },
      "BackupsGET-ID": {
        "description": "This model lists the backup information based on the specified backup ID.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "ID": "d25d9f7e-8ae0-490a-94fe-071e8asdef",
            "ImageServerLocation": "100.94.72.166:/home/dell/temp_images/",
            "StatusMessage": "Successfully backed up",
            "ImageServerPassword": "Uf3qPJR2UAby42Keqd1NhU5BbtoHDVr+3IVkJJPzVi1Dc5ilyWlGTi/5ZbDprwwE",
            "Status": "Success",
            "TimeStamp": "1626734910.8032453",
            "TransportType": "SCP",
            "ImageServerUserName": "dell",
            "@odata.id": "/redfish/v1/SFSSApp/Backups('d25d9f7e-8ae0-490a-94fe-071e8asdef')",
            "@odata.type": "#Backups.Backups",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#Backups/Backups/$entity"
          }
        },
        "examples": [
          {
            "ID": "d25d9f7e-8ae0-490a-94fe-071e8asdef",
            "ImageServerLocation": "100.94.72.166:/home/dell/temp_images/",
            "StatusMessage": "Successfully backed up",
            "ImageServerPassword": "Uf3qPJR2UAby42Keqd1NhU5BbtoHDVr+3IVkJJPzVi1Dc5ilyWlGTi/5ZbDprwwE",
            "Status": "Success",
            "TimeStamp": "1626734910.8032453",
            "TransportType": "SCP",
            "ImageServerUserName": "dell",
            "@odata.id": "/redfish/v1/SFSSApp/Backups('d25d9f7e-8ae0-490a-94fe-071e8asdef')",
            "@odata.type": "#Backups.Backups",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#Backups/Backups/$entity"
          }
        ],
        "title": "BackupsGET-ID",
        "properties": {
          "ID": {
            "type": "string",
            "minLength": 1,
            "description": "Backup identifier"
          },
          "ImageServerLocation": {
            "type": "string",
            "minLength": 1,
            "description": "Remote server location where the backup file is copied to; only IPv4 communication is supported"
          },
          "StatusMessage": {
            "type": "string",
            "minLength": 1,
            "description": "Detailed status message of the backup operation"
          },
          "ImageServerPassword": {
            "type": "string",
            "minLength": 1,
            "description": "Password to access the remote server"
          },
          "Status": {
            "type": "string",
            "minLength": 1,
            "description": "Status of the backup; possible values include Success, Failure, NotStarted, InProgress"
          },
          "TimeStamp": {
            "type": "string",
            "minLength": 1,
            "description": "Date and time at which the backup was taken; date in mm/dd/yyyy format and time in hh:mm:ss format"
          },
          "TransportType": {
            "type": "string",
            "minLength": 1,
            "description": "Transport type used to copy the backup file to the remote server; possible values include SCP, HTTP, HTTPS, and SFTP"
          },
          "ImageServerUserName": {
            "type": "string",
            "minLength": 1,
            "description": "Username to access the remote server"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "ID",
          "ImageServerLocation",
          "StatusMessage",
          "ImageServerPassword",
          "Status",
          "TimeStamp",
          "TransportType",
          "ImageServerUserName",
          "@odata.id",
          "@odata.type",
          "@odata.context"
        ]
      },
      "BackupsGET-EXPAND": {
        "description": "This model lists detailed information about all the backups taken from the SFSS VM.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "Backups": [
              {
                "ID": "d25d9f7e-8ae0-490a-94fe-071e8asdef",
                "ImageServerLocation": "100.94.72.166:/home/dell/temp_images/",
                "StatusMessage": "Successfully backed up",
                "ImageServerPassword": "Uf3qPJR2UAby42Keqd1NhU5BbtoHDVr+3IVkJJPzVi1Dc5ilyWlGTi/5ZbDprwwE",
                "Status": "Success",
                "TimeStamp": "1626734910.8032453",
                "TransportType": "SCP",
                "ImageServerUserName": "dell",
                "@odata.id": "/redfish/v1/SFSSApp/Backups('d25d9f7e-8ae0-490a-94fe-071e8asdef')",
                "@odata.type": "#Backups.Backups",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#Backups/Backups/$entity"
              }
            ],
            "Backups@odata.count": 1,
            "@odata.id": "/redfish/v1/SFSSApp/Backups?$expand=Backups",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#Backups",
            "@odata.type": "#BackupsCollection.BackupsCollection"
          }
        },
        "examples": [
          {
            "Backups": [
              {
                "ID": "d25d9f7e-8ae0-490a-94fe-071e8asdef",
                "ImageServerLocation": "100.94.72.166:/home/dell/temp_images/",
                "StatusMessage": "Successfully backed up",
                "ImageServerPassword": "Uf3qPJR2UAby42Keqd1NhU5BbtoHDVr+3IVkJJPzVi1Dc5ilyWlGTi/5ZbDprwwE",
                "Status": "Success",
                "TimeStamp": "1626734910.8032453",
                "TransportType": "SCP",
                "ImageServerUserName": "dell",
                "@odata.id": "/redfish/v1/SFSSApp/Backups('d25d9f7e-8ae0-490a-94fe-071e8asdef')",
                "@odata.type": "#Backups.Backups",
                "@odata.context": "/redfish/v1/SFSSApp/$metadata#Backups/Backups/$entity"
              }
            ],
            "Backups@odata.count": 1,
            "@odata.id": "/redfish/v1/SFSSApp/Backups?$expand=Backups",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#Backups",
            "@odata.type": "#BackupsCollection.BackupsCollection"
          }
        ],
        "title": "BackupsGET-Expand",
        "properties": {
          "Backups": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "description": "List of available backups",
            "items": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Backup identifier"
                },
                "ImageServerLocation": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Location where the backup file is copied to"
                },
                "StatusMessage": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Detailed status message of the backup operation"
                },
                "ImageServerPassword": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Password to access the remote server"
                },
                "Status": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Status of the backup; possible values include Success, Failue, NotStarted, and InProgress"
                },
                "TimeStamp": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Date and time at which the backup was taken; date in mm/dd/yyyy format and time in hh:mm:ss format."
                },
                "TransportType": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Transport type used to copy the backup file to the remote server; possible values include SCP, HTTP, HTTPS, and SFTP"
                },
                "ImageServerUserName": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Username to access the remote server"
                },
                "@odata.id": {
                  "type": "string",
                  "minLength": 1
                },
                "@odata.type": {
                  "type": "string",
                  "minLength": 1
                },
                "@odata.context": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "ID",
                "ImageServerLocation",
                "StatusMessage",
                "ImageServerPassword",
                "Status",
                "TimeStamp",
                "TransportType",
                "ImageServerUserName",
                "@odata.id",
                "@odata.type",
                "@odata.context"
              ]
            }
          },
          "Backups@odata.count": {
            "type": "number",
            "description": "Number of backups available "
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "Backups",
          "Backups@odata.count",
          "@odata.id",
          "@odata.context",
          "@odata.type"
        ]
      },
      "SFSSHealthStatusGET": {
        "description": "This model lists the SFSS health status.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "Health": "Warning",
            "ReasonCode": [
              "Instance: instance1 module-testing reported:eemi-2"
            ],
            "@odata.id": "/redfish/v1/SFSSApp/SFSSHealthStatus",
            "@odata.type": "#SFSSHealthStatus.SFSSHealthStatus",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#SFSSHealthStatus/SFSSHealthStatus/$entity"
          }
        },
        "examples": [
          {
            "Health": "Warning",
            "ReasonCode": [
              "Instance: instance1 module-testing reported:eemi-2"
            ],
            "@odata.id": "/redfish/v1/SFSSApp/SFSSHealthStatus",
            "@odata.type": "#SFSSHealthStatus.SFSSHealthStatus",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#SFSSHealthStatus/SFSSHealthStatus/$entity"
          }
        ],
        "title": "SFSSHealthStatusGET",
        "properties": {
          "Health": {
            "type": "string",
            "minLength": 1,
            "description": "Health status of the SFSS VM; possible values include Ok, Warning, and Critical"
          },
          "ReasonCode": {
            "type": "array",
            "description": "Reason for the SFSS VM health to be in Warning or Critical state",
            "items": {
              "type": "object"
            }
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "Health",
          "ReasonCode",
          "@odata.id",
          "@odata.type",
          "@odata.context"
        ]
      },
      "CDCHealthStatusGET": {
        "description": "This model lists health status information for all the CDC instances.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "CDCHealthStatus": [
              {
                "@odata.id": "/redfish/v1/SFSSApp/CDCHealthStatus('1')"
              }
            ],
            "CDCHealthStatus@odata.count": 1,
            "@odata.id": "/redfish/v1/SFSSApp/CDCHealthStatus",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#CDCHealthStatus",
            "@odata.type": "#CDCHealthStatusCollection.CDCHealthStatusCollection"
          }
        },
        "examples": [
          {
            "CDCHealthStatus": [
              {
                "@odata.id": "/redfish/v1/SFSSApp/CDCHealthStatus('1')"
              }
            ],
            "CDCHealthStatus@odata.count": 1,
            "@odata.id": "/redfish/v1/SFSSApp/CDCHealthStatus",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#CDCHealthStatus",
            "@odata.type": "#CDCHealthStatusCollection.CDCHealthStatusCollection"
          }
        ],
        "title": "CDCHealthStatusGET",
        "properties": {
          "CDCHealthStatus": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "description": "CDC health status",
            "items": {
              "type": "object",
              "properties": {
                "@odata.id": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "@odata.id"
              ]
            }
          },
          "CDCHealthStatus@odata.count": {
            "type": "number",
            "description": "Number of CDC instances"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "CDCHealthStatus",
          "CDCHealthStatus@odata.count",
          "@odata.id",
          "@odata.context",
          "@odata.type"
        ]
      },
      "CDCHealthStatusGET-ID": {
        "description": "This model lists the health status information for a particular CDC instance based on the specified CDC instance ID.  ",
        "type": "object",
        "x-examples": {
          "example-1": {
            "Health": "Warning",
            "ReasonCode": [
              "offline"
            ],
            "InstanceIdentifier": "1",
            "@odata.id": "/redfish/v1/SFSSApp/CDCHealthStatus('1')",
            "@odata.type": "#CDCHealthStatus.CDCHealthStatus",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#CDCHealthStatus/CDCHealthStatus/$entity"
          }
        },
        "examples": [
          {
            "Health": "Warning",
            "ReasonCode": [
              "offline"
            ],
            "InstanceIdentifier": "1",
            "@odata.id": "/redfish/v1/SFSSApp/CDCHealthStatus('1')",
            "@odata.type": "#CDCHealthStatus.CDCHealthStatus",
            "@odata.context": "/redfish/v1/SFSSApp/$metadata#CDCHealthStatus/CDCHealthStatus/$entity"
          }
        ],
        "title": "CDCHealthStatusGET-ID",
        "properties": {
          "Health": {
            "type": "string",
            "minLength": 1,
            "description": "Health status of the CDC instance; possible values include Ok, Warning, and Critical"
          },
          "ReasonCode": {
            "type": "array",
            "description": "Reason for the CDC instance to be in Warning or Critical state",
            "items": {
              "type": "object"
            }
          },
          "InstanceIdentifier": {
            "type": "string",
            "minLength": 1,
            "description": "CDC instance identifier"
          },
          "@odata.id": {
            "type": "string",
            "minLength": 1
          },
          "@odata.type": {
            "type": "string",
            "minLength": 1
          },
          "@odata.context": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "Health",
          "ReasonCode",
          "InstanceIdentifier",
          "@odata.id",
          "@odata.type",
          "@odata.context"
        ]
      }
    },
    "securitySchemes": {
      "BasicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}