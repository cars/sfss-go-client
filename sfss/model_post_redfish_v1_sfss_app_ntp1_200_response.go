/*
SmartFabric Storage Software Application REST APIs

REST APIs used for managing SFSS application are captured in this section.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sfss

import (
	"encoding/json"
)

// checks if the PostRedfishV1SFSSAppNTP1200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostRedfishV1SFSSAppNTP1200Response{}

// PostRedfishV1SFSSAppNTP1200Response struct for PostRedfishV1SFSSAppNTP1200Response
type PostRedfishV1SFSSAppNTP1200Response struct {
	// IP address of the NTP server
	NTPServer *string `json:"NTPServer ,omitempty"`
}

// NewPostRedfishV1SFSSAppNTP1200Response instantiates a new PostRedfishV1SFSSAppNTP1200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostRedfishV1SFSSAppNTP1200Response() *PostRedfishV1SFSSAppNTP1200Response {
	this := PostRedfishV1SFSSAppNTP1200Response{}
	return &this
}

// NewPostRedfishV1SFSSAppNTP1200ResponseWithDefaults instantiates a new PostRedfishV1SFSSAppNTP1200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostRedfishV1SFSSAppNTP1200ResponseWithDefaults() *PostRedfishV1SFSSAppNTP1200Response {
	this := PostRedfishV1SFSSAppNTP1200Response{}
	return &this
}

// GetNTPServer returns the NTPServer field value if set, zero value otherwise.
func (o *PostRedfishV1SFSSAppNTP1200Response) GetNTPServer() string {
	if o == nil || IsNil(o.NTPServer) {
		var ret string
		return ret
	}
	return *o.NTPServer
}

// GetNTPServerOk returns a tuple with the NTPServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostRedfishV1SFSSAppNTP1200Response) GetNTPServerOk() (*string, bool) {
	if o == nil || IsNil(o.NTPServer) {
		return nil, false
	}
	return o.NTPServer, true
}

// HasNTPServer returns a boolean if a field has been set.
func (o *PostRedfishV1SFSSAppNTP1200Response) HasNTPServer() bool {
	if o != nil && !IsNil(o.NTPServer) {
		return true
	}

	return false
}

// SetNTPServer gets a reference to the given string and assigns it to the NTPServer field.
func (o *PostRedfishV1SFSSAppNTP1200Response) SetNTPServer(v string) {
	o.NTPServer = &v
}

func (o PostRedfishV1SFSSAppNTP1200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostRedfishV1SFSSAppNTP1200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NTPServer) {
		toSerialize["NTPServer "] = o.NTPServer
	}
	return toSerialize, nil
}

type NullablePostRedfishV1SFSSAppNTP1200Response struct {
	value *PostRedfishV1SFSSAppNTP1200Response
	isSet bool
}

func (v NullablePostRedfishV1SFSSAppNTP1200Response) Get() *PostRedfishV1SFSSAppNTP1200Response {
	return v.value
}

func (v *NullablePostRedfishV1SFSSAppNTP1200Response) Set(val *PostRedfishV1SFSSAppNTP1200Response) {
	v.value = val
	v.isSet = true
}

func (v NullablePostRedfishV1SFSSAppNTP1200Response) IsSet() bool {
	return v.isSet
}

func (v *NullablePostRedfishV1SFSSAppNTP1200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostRedfishV1SFSSAppNTP1200Response(val *PostRedfishV1SFSSAppNTP1200Response) *NullablePostRedfishV1SFSSAppNTP1200Response {
	return &NullablePostRedfishV1SFSSAppNTP1200Response{value: val, isSet: true}
}

func (v NullablePostRedfishV1SFSSAppNTP1200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostRedfishV1SFSSAppNTP1200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


