/*
SmartFabric Storage Software Application REST APIs

REST APIs used for managing SFSS application are captured in this section.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sfss

import (
	"encoding/json"
)

// checks if the DeleteRedfishV1SFSSAppNTPServerIP200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteRedfishV1SFSSAppNTPServerIP200Response{}

// DeleteRedfishV1SFSSAppNTPServerIP200Response struct for DeleteRedfishV1SFSSAppNTPServerIP200Response
type DeleteRedfishV1SFSSAppNTPServerIP200Response struct {
	// IP address of the NTP server; only IPv4 address is supported
	IPAddress *string `json:"IPAddress,omitempty"`
}

// NewDeleteRedfishV1SFSSAppNTPServerIP200Response instantiates a new DeleteRedfishV1SFSSAppNTPServerIP200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteRedfishV1SFSSAppNTPServerIP200Response() *DeleteRedfishV1SFSSAppNTPServerIP200Response {
	this := DeleteRedfishV1SFSSAppNTPServerIP200Response{}
	return &this
}

// NewDeleteRedfishV1SFSSAppNTPServerIP200ResponseWithDefaults instantiates a new DeleteRedfishV1SFSSAppNTPServerIP200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteRedfishV1SFSSAppNTPServerIP200ResponseWithDefaults() *DeleteRedfishV1SFSSAppNTPServerIP200Response {
	this := DeleteRedfishV1SFSSAppNTPServerIP200Response{}
	return &this
}

// GetIPAddress returns the IPAddress field value if set, zero value otherwise.
func (o *DeleteRedfishV1SFSSAppNTPServerIP200Response) GetIPAddress() string {
	if o == nil || IsNil(o.IPAddress) {
		var ret string
		return ret
	}
	return *o.IPAddress
}

// GetIPAddressOk returns a tuple with the IPAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteRedfishV1SFSSAppNTPServerIP200Response) GetIPAddressOk() (*string, bool) {
	if o == nil || IsNil(o.IPAddress) {
		return nil, false
	}
	return o.IPAddress, true
}

// HasIPAddress returns a boolean if a field has been set.
func (o *DeleteRedfishV1SFSSAppNTPServerIP200Response) HasIPAddress() bool {
	if o != nil && !IsNil(o.IPAddress) {
		return true
	}

	return false
}

// SetIPAddress gets a reference to the given string and assigns it to the IPAddress field.
func (o *DeleteRedfishV1SFSSAppNTPServerIP200Response) SetIPAddress(v string) {
	o.IPAddress = &v
}

func (o DeleteRedfishV1SFSSAppNTPServerIP200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteRedfishV1SFSSAppNTPServerIP200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IPAddress) {
		toSerialize["IPAddress"] = o.IPAddress
	}
	return toSerialize, nil
}

type NullableDeleteRedfishV1SFSSAppNTPServerIP200Response struct {
	value *DeleteRedfishV1SFSSAppNTPServerIP200Response
	isSet bool
}

func (v NullableDeleteRedfishV1SFSSAppNTPServerIP200Response) Get() *DeleteRedfishV1SFSSAppNTPServerIP200Response {
	return v.value
}

func (v *NullableDeleteRedfishV1SFSSAppNTPServerIP200Response) Set(val *DeleteRedfishV1SFSSAppNTPServerIP200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteRedfishV1SFSSAppNTPServerIP200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteRedfishV1SFSSAppNTPServerIP200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteRedfishV1SFSSAppNTPServerIP200Response(val *DeleteRedfishV1SFSSAppNTPServerIP200Response) *NullableDeleteRedfishV1SFSSAppNTPServerIP200Response {
	return &NullableDeleteRedfishV1SFSSAppNTPServerIP200Response{value: val, isSet: true}
}

func (v NullableDeleteRedfishV1SFSSAppNTPServerIP200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteRedfishV1SFSSAppNTPServerIP200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


