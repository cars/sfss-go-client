/*
SmartFabric Storage Software Application REST APIs

REST APIs used for managing SFSS application are captured in this section.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sfss

import (
	"encoding/json"
)

// checks if the NTPServerGET type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NTPServerGET{}

// NTPServerGET This model fetches the NTP server information.
type NTPServerGET struct {
	// IP address of the NTP server
	NtpServer *string `json:"NtpServer,omitempty"`
	// NTP connection state; possible values include Connected and Not Connected 
	State *string `json:"State,omitempty"`
	// Status of the NTP service; possible values include Enable and Disable
	Status *string `json:"Status,omitempty"`
	OdataId *string `json:"@odata.id,omitempty"`
	OdataType *string `json:"@odata.type,omitempty"`
	OdataContext *string `json:"@odata.context,omitempty"`
}

// NewNTPServerGET instantiates a new NTPServerGET object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNTPServerGET() *NTPServerGET {
	this := NTPServerGET{}
	return &this
}

// NewNTPServerGETWithDefaults instantiates a new NTPServerGET object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNTPServerGETWithDefaults() *NTPServerGET {
	this := NTPServerGET{}
	return &this
}

// GetNtpServer returns the NtpServer field value if set, zero value otherwise.
func (o *NTPServerGET) GetNtpServer() string {
	if o == nil || IsNil(o.NtpServer) {
		var ret string
		return ret
	}
	return *o.NtpServer
}

// GetNtpServerOk returns a tuple with the NtpServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NTPServerGET) GetNtpServerOk() (*string, bool) {
	if o == nil || IsNil(o.NtpServer) {
		return nil, false
	}
	return o.NtpServer, true
}

// HasNtpServer returns a boolean if a field has been set.
func (o *NTPServerGET) HasNtpServer() bool {
	if o != nil && !IsNil(o.NtpServer) {
		return true
	}

	return false
}

// SetNtpServer gets a reference to the given string and assigns it to the NtpServer field.
func (o *NTPServerGET) SetNtpServer(v string) {
	o.NtpServer = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *NTPServerGET) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NTPServerGET) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *NTPServerGET) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *NTPServerGET) SetState(v string) {
	o.State = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *NTPServerGET) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NTPServerGET) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *NTPServerGET) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *NTPServerGET) SetStatus(v string) {
	o.Status = &v
}

// GetOdataId returns the OdataId field value if set, zero value otherwise.
func (o *NTPServerGET) GetOdataId() string {
	if o == nil || IsNil(o.OdataId) {
		var ret string
		return ret
	}
	return *o.OdataId
}

// GetOdataIdOk returns a tuple with the OdataId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NTPServerGET) GetOdataIdOk() (*string, bool) {
	if o == nil || IsNil(o.OdataId) {
		return nil, false
	}
	return o.OdataId, true
}

// HasOdataId returns a boolean if a field has been set.
func (o *NTPServerGET) HasOdataId() bool {
	if o != nil && !IsNil(o.OdataId) {
		return true
	}

	return false
}

// SetOdataId gets a reference to the given string and assigns it to the OdataId field.
func (o *NTPServerGET) SetOdataId(v string) {
	o.OdataId = &v
}

// GetOdataType returns the OdataType field value if set, zero value otherwise.
func (o *NTPServerGET) GetOdataType() string {
	if o == nil || IsNil(o.OdataType) {
		var ret string
		return ret
	}
	return *o.OdataType
}

// GetOdataTypeOk returns a tuple with the OdataType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NTPServerGET) GetOdataTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OdataType) {
		return nil, false
	}
	return o.OdataType, true
}

// HasOdataType returns a boolean if a field has been set.
func (o *NTPServerGET) HasOdataType() bool {
	if o != nil && !IsNil(o.OdataType) {
		return true
	}

	return false
}

// SetOdataType gets a reference to the given string and assigns it to the OdataType field.
func (o *NTPServerGET) SetOdataType(v string) {
	o.OdataType = &v
}

// GetOdataContext returns the OdataContext field value if set, zero value otherwise.
func (o *NTPServerGET) GetOdataContext() string {
	if o == nil || IsNil(o.OdataContext) {
		var ret string
		return ret
	}
	return *o.OdataContext
}

// GetOdataContextOk returns a tuple with the OdataContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NTPServerGET) GetOdataContextOk() (*string, bool) {
	if o == nil || IsNil(o.OdataContext) {
		return nil, false
	}
	return o.OdataContext, true
}

// HasOdataContext returns a boolean if a field has been set.
func (o *NTPServerGET) HasOdataContext() bool {
	if o != nil && !IsNil(o.OdataContext) {
		return true
	}

	return false
}

// SetOdataContext gets a reference to the given string and assigns it to the OdataContext field.
func (o *NTPServerGET) SetOdataContext(v string) {
	o.OdataContext = &v
}

func (o NTPServerGET) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NTPServerGET) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NtpServer) {
		toSerialize["NtpServer"] = o.NtpServer
	}
	if !IsNil(o.State) {
		toSerialize["State"] = o.State
	}
	if !IsNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	if !IsNil(o.OdataId) {
		toSerialize["@odata.id"] = o.OdataId
	}
	if !IsNil(o.OdataType) {
		toSerialize["@odata.type"] = o.OdataType
	}
	if !IsNil(o.OdataContext) {
		toSerialize["@odata.context"] = o.OdataContext
	}
	return toSerialize, nil
}

type NullableNTPServerGET struct {
	value *NTPServerGET
	isSet bool
}

func (v NullableNTPServerGET) Get() *NTPServerGET {
	return v.value
}

func (v *NullableNTPServerGET) Set(val *NTPServerGET) {
	v.value = val
	v.isSet = true
}

func (v NullableNTPServerGET) IsSet() bool {
	return v.isSet
}

func (v *NullableNTPServerGET) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNTPServerGET(val *NTPServerGET) *NullableNTPServerGET {
	return &NullableNTPServerGET{value: val, isSet: true}
}

func (v NullableNTPServerGET) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNTPServerGET) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


