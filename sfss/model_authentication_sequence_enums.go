/*
SmartFabric Storage Software Application REST APIs

REST APIs used for managing SFSS application are captured in this section.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sfss

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AuthenticationSequenceENUMs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthenticationSequenceENUMs{}

// AuthenticationSequenceENUMs This model lists the supported enumerations for the authentication sequence configuration.
type AuthenticationSequenceENUMs struct {
	// Authentication sequence list; possible values include Local, RADIUS, and TACACS+ 
	AuthenticationSequence []map[string]interface{} `json:"AuthenticationSequence"`
}

type _AuthenticationSequenceENUMs AuthenticationSequenceENUMs

// NewAuthenticationSequenceENUMs instantiates a new AuthenticationSequenceENUMs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthenticationSequenceENUMs(authenticationSequence []map[string]interface{}) *AuthenticationSequenceENUMs {
	this := AuthenticationSequenceENUMs{}
	this.AuthenticationSequence = authenticationSequence
	return &this
}

// NewAuthenticationSequenceENUMsWithDefaults instantiates a new AuthenticationSequenceENUMs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthenticationSequenceENUMsWithDefaults() *AuthenticationSequenceENUMs {
	this := AuthenticationSequenceENUMs{}
	return &this
}

// GetAuthenticationSequence returns the AuthenticationSequence field value
func (o *AuthenticationSequenceENUMs) GetAuthenticationSequence() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.AuthenticationSequence
}

// GetAuthenticationSequenceOk returns a tuple with the AuthenticationSequence field value
// and a boolean to check if the value has been set.
func (o *AuthenticationSequenceENUMs) GetAuthenticationSequenceOk() ([]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuthenticationSequence, true
}

// SetAuthenticationSequence sets field value
func (o *AuthenticationSequenceENUMs) SetAuthenticationSequence(v []map[string]interface{}) {
	o.AuthenticationSequence = v
}

func (o AuthenticationSequenceENUMs) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthenticationSequenceENUMs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["AuthenticationSequence"] = o.AuthenticationSequence
	return toSerialize, nil
}

func (o *AuthenticationSequenceENUMs) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"AuthenticationSequence",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAuthenticationSequenceENUMs := _AuthenticationSequenceENUMs{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAuthenticationSequenceENUMs)

	if err != nil {
		return err
	}

	*o = AuthenticationSequenceENUMs(varAuthenticationSequenceENUMs)

	return err
}

type NullableAuthenticationSequenceENUMs struct {
	value *AuthenticationSequenceENUMs
	isSet bool
}

func (v NullableAuthenticationSequenceENUMs) Get() *AuthenticationSequenceENUMs {
	return v.value
}

func (v *NullableAuthenticationSequenceENUMs) Set(val *AuthenticationSequenceENUMs) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthenticationSequenceENUMs) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthenticationSequenceENUMs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthenticationSequenceENUMs(val *AuthenticationSequenceENUMs) *NullableAuthenticationSequenceENUMs {
	return &NullableAuthenticationSequenceENUMs{value: val, isSet: true}
}

func (v NullableAuthenticationSequenceENUMs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthenticationSequenceENUMs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


