/*
SmartFabric Storage Software Application REST APIs

REST APIs used for managing SFSS application are captured in this section.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sfss

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SFSSInterfaceListGET type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SFSSInterfaceListGET{}

// SFSSInterfaceListGET This model lists all the available interfaces in SFSS.
type SFSSInterfaceListGET struct {
	// A set of available interfaces
	ListOfInterfaces []map[string]interface{} `json:"List of Interfaces"`
}

type _SFSSInterfaceListGET SFSSInterfaceListGET

// NewSFSSInterfaceListGET instantiates a new SFSSInterfaceListGET object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSFSSInterfaceListGET(listOfInterfaces []map[string]interface{}) *SFSSInterfaceListGET {
	this := SFSSInterfaceListGET{}
	this.ListOfInterfaces = listOfInterfaces
	return &this
}

// NewSFSSInterfaceListGETWithDefaults instantiates a new SFSSInterfaceListGET object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSFSSInterfaceListGETWithDefaults() *SFSSInterfaceListGET {
	this := SFSSInterfaceListGET{}
	return &this
}

// GetListOfInterfaces returns the ListOfInterfaces field value
func (o *SFSSInterfaceListGET) GetListOfInterfaces() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.ListOfInterfaces
}

// GetListOfInterfacesOk returns a tuple with the ListOfInterfaces field value
// and a boolean to check if the value has been set.
func (o *SFSSInterfaceListGET) GetListOfInterfacesOk() ([]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.ListOfInterfaces, true
}

// SetListOfInterfaces sets field value
func (o *SFSSInterfaceListGET) SetListOfInterfaces(v []map[string]interface{}) {
	o.ListOfInterfaces = v
}

func (o SFSSInterfaceListGET) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SFSSInterfaceListGET) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["List of Interfaces"] = o.ListOfInterfaces
	return toSerialize, nil
}

func (o *SFSSInterfaceListGET) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"List of Interfaces",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSFSSInterfaceListGET := _SFSSInterfaceListGET{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSFSSInterfaceListGET)

	if err != nil {
		return err
	}

	*o = SFSSInterfaceListGET(varSFSSInterfaceListGET)

	return err
}

type NullableSFSSInterfaceListGET struct {
	value *SFSSInterfaceListGET
	isSet bool
}

func (v NullableSFSSInterfaceListGET) Get() *SFSSInterfaceListGET {
	return v.value
}

func (v *NullableSFSSInterfaceListGET) Set(val *SFSSInterfaceListGET) {
	v.value = val
	v.isSet = true
}

func (v NullableSFSSInterfaceListGET) IsSet() bool {
	return v.isSet
}

func (v *NullableSFSSInterfaceListGET) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSFSSInterfaceListGET(val *SFSSInterfaceListGET) *NullableSFSSInterfaceListGET {
	return &NullableSFSSInterfaceListGET{value: val, isSet: true}
}

func (v NullableSFSSInterfaceListGET) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSFSSInterfaceListGET) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


