/*
SmartFabric Storage Software Application REST APIs

REST APIs used for managing SFSS application are captured in this section.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sfssapp

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the GetRedfishV1SFSSAppSosReportsID200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRedfishV1SFSSAppSosReportsID200Response{}

// GetRedfishV1SFSSAppSosReportsID200Response
type GetRedfishV1SFSSAppSosReportsID200Response struct {
	// SOS report ID
	ID string `json:"ID"`
	// Location of the remote server to download the SOS report
	FileLocation string `json:"FileLocation"`
	// A detailed message on the status of the download operation
	StatusMessage string `json:"StatusMessage"`
	// Password to access the remote server
	ServerPassword string `json:"ServerPassword"`
	// Status of the SOS report download operation
	Status string `json:"Status"`
	// Date and time of the SOS report download operation; the date is of dd/mm/yyyy format and time is of hh:mm:ss format
	TimeStamp string `json:"TimeStamp"`
	// Transport type used for file transfer; possible values include SCP, HTTP, HTTPS, and SFTP
	TransportType string `json:"TransportType"`
	// Username to access the remote server
	ServerUserName string `json:"ServerUserName"`
	OdataId        string `json:"@odata.id"`
	OdataType      string `json:"@odata.type"`
	OdataContext   string `json:"@odata.context"`
}

type _GetRedfishV1SFSSAppSosReportsID200Response GetRedfishV1SFSSAppSosReportsID200Response

// NewGetRedfishV1SFSSAppSosReportsID200Response instantiates a new GetRedfishV1SFSSAppSosReportsID200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRedfishV1SFSSAppSosReportsID200Response(iD string, fileLocation string, statusMessage string, serverPassword string, status string, timeStamp string, transportType string, serverUserName string, odataId string, odataType string, odataContext string) *GetRedfishV1SFSSAppSosReportsID200Response {
	this := GetRedfishV1SFSSAppSosReportsID200Response{}
	this.ID = iD
	this.FileLocation = fileLocation
	this.StatusMessage = statusMessage
	this.ServerPassword = serverPassword
	this.Status = status
	this.TimeStamp = timeStamp
	this.TransportType = transportType
	this.ServerUserName = serverUserName
	this.OdataId = odataId
	this.OdataType = odataType
	this.OdataContext = odataContext
	return &this
}

// NewGetRedfishV1SFSSAppSosReportsID200ResponseWithDefaults instantiates a new GetRedfishV1SFSSAppSosReportsID200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRedfishV1SFSSAppSosReportsID200ResponseWithDefaults() *GetRedfishV1SFSSAppSosReportsID200Response {
	this := GetRedfishV1SFSSAppSosReportsID200Response{}
	return &this
}

// GetID returns the ID field value
func (o *GetRedfishV1SFSSAppSosReportsID200Response) GetID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ID
}

// GetIDOk returns a tuple with the ID field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSAppSosReportsID200Response) GetIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ID, true
}

// SetID sets field value
func (o *GetRedfishV1SFSSAppSosReportsID200Response) SetID(v string) {
	o.ID = v
}

// GetFileLocation returns the FileLocation field value
func (o *GetRedfishV1SFSSAppSosReportsID200Response) GetFileLocation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileLocation
}

// GetFileLocationOk returns a tuple with the FileLocation field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSAppSosReportsID200Response) GetFileLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileLocation, true
}

// SetFileLocation sets field value
func (o *GetRedfishV1SFSSAppSosReportsID200Response) SetFileLocation(v string) {
	o.FileLocation = v
}

// GetStatusMessage returns the StatusMessage field value
func (o *GetRedfishV1SFSSAppSosReportsID200Response) GetStatusMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StatusMessage
}

// GetStatusMessageOk returns a tuple with the StatusMessage field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSAppSosReportsID200Response) GetStatusMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusMessage, true
}

// SetStatusMessage sets field value
func (o *GetRedfishV1SFSSAppSosReportsID200Response) SetStatusMessage(v string) {
	o.StatusMessage = v
}

// GetServerPassword returns the ServerPassword field value
func (o *GetRedfishV1SFSSAppSosReportsID200Response) GetServerPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerPassword
}

// GetServerPasswordOk returns a tuple with the ServerPassword field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSAppSosReportsID200Response) GetServerPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerPassword, true
}

// SetServerPassword sets field value
func (o *GetRedfishV1SFSSAppSosReportsID200Response) SetServerPassword(v string) {
	o.ServerPassword = v
}

// GetStatus returns the Status field value
func (o *GetRedfishV1SFSSAppSosReportsID200Response) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSAppSosReportsID200Response) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *GetRedfishV1SFSSAppSosReportsID200Response) SetStatus(v string) {
	o.Status = v
}

// GetTimeStamp returns the TimeStamp field value
func (o *GetRedfishV1SFSSAppSosReportsID200Response) GetTimeStamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TimeStamp
}

// GetTimeStampOk returns a tuple with the TimeStamp field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSAppSosReportsID200Response) GetTimeStampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeStamp, true
}

// SetTimeStamp sets field value
func (o *GetRedfishV1SFSSAppSosReportsID200Response) SetTimeStamp(v string) {
	o.TimeStamp = v
}

// GetTransportType returns the TransportType field value
func (o *GetRedfishV1SFSSAppSosReportsID200Response) GetTransportType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransportType
}

// GetTransportTypeOk returns a tuple with the TransportType field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSAppSosReportsID200Response) GetTransportTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransportType, true
}

// SetTransportType sets field value
func (o *GetRedfishV1SFSSAppSosReportsID200Response) SetTransportType(v string) {
	o.TransportType = v
}

// GetServerUserName returns the ServerUserName field value
func (o *GetRedfishV1SFSSAppSosReportsID200Response) GetServerUserName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerUserName
}

// GetServerUserNameOk returns a tuple with the ServerUserName field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSAppSosReportsID200Response) GetServerUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerUserName, true
}

// SetServerUserName sets field value
func (o *GetRedfishV1SFSSAppSosReportsID200Response) SetServerUserName(v string) {
	o.ServerUserName = v
}

// GetOdataId returns the OdataId field value
func (o *GetRedfishV1SFSSAppSosReportsID200Response) GetOdataId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OdataId
}

// GetOdataIdOk returns a tuple with the OdataId field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSAppSosReportsID200Response) GetOdataIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OdataId, true
}

// SetOdataId sets field value
func (o *GetRedfishV1SFSSAppSosReportsID200Response) SetOdataId(v string) {
	o.OdataId = v
}

// GetOdataType returns the OdataType field value
func (o *GetRedfishV1SFSSAppSosReportsID200Response) GetOdataType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OdataType
}

// GetOdataTypeOk returns a tuple with the OdataType field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSAppSosReportsID200Response) GetOdataTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OdataType, true
}

// SetOdataType sets field value
func (o *GetRedfishV1SFSSAppSosReportsID200Response) SetOdataType(v string) {
	o.OdataType = v
}

// GetOdataContext returns the OdataContext field value
func (o *GetRedfishV1SFSSAppSosReportsID200Response) GetOdataContext() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OdataContext
}

// GetOdataContextOk returns a tuple with the OdataContext field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSAppSosReportsID200Response) GetOdataContextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OdataContext, true
}

// SetOdataContext sets field value
func (o *GetRedfishV1SFSSAppSosReportsID200Response) SetOdataContext(v string) {
	o.OdataContext = v
}

func (o GetRedfishV1SFSSAppSosReportsID200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRedfishV1SFSSAppSosReportsID200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ID"] = o.ID
	toSerialize["FileLocation"] = o.FileLocation
	toSerialize["StatusMessage"] = o.StatusMessage
	toSerialize["ServerPassword"] = o.ServerPassword
	toSerialize["Status"] = o.Status
	toSerialize["TimeStamp"] = o.TimeStamp
	toSerialize["TransportType"] = o.TransportType
	toSerialize["ServerUserName"] = o.ServerUserName
	toSerialize["@odata.id"] = o.OdataId
	toSerialize["@odata.type"] = o.OdataType
	toSerialize["@odata.context"] = o.OdataContext
	return toSerialize, nil
}

func (o *GetRedfishV1SFSSAppSosReportsID200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ID",
		"FileLocation",
		"StatusMessage",
		"ServerPassword",
		"Status",
		"TimeStamp",
		"TransportType",
		"ServerUserName",
		"@odata.id",
		"@odata.type",
		"@odata.context",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetRedfishV1SFSSAppSosReportsID200Response := _GetRedfishV1SFSSAppSosReportsID200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetRedfishV1SFSSAppSosReportsID200Response)

	if err != nil {
		return err
	}

	*o = GetRedfishV1SFSSAppSosReportsID200Response(varGetRedfishV1SFSSAppSosReportsID200Response)

	return err
}

type NullableGetRedfishV1SFSSAppSosReportsID200Response struct {
	value *GetRedfishV1SFSSAppSosReportsID200Response
	isSet bool
}

func (v NullableGetRedfishV1SFSSAppSosReportsID200Response) Get() *GetRedfishV1SFSSAppSosReportsID200Response {
	return v.value
}

func (v *NullableGetRedfishV1SFSSAppSosReportsID200Response) Set(val *GetRedfishV1SFSSAppSosReportsID200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRedfishV1SFSSAppSosReportsID200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRedfishV1SFSSAppSosReportsID200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRedfishV1SFSSAppSosReportsID200Response(val *GetRedfishV1SFSSAppSosReportsID200Response) *NullableGetRedfishV1SFSSAppSosReportsID200Response {
	return &NullableGetRedfishV1SFSSAppSosReportsID200Response{value: val, isSet: true}
}

func (v NullableGetRedfishV1SFSSAppSosReportsID200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRedfishV1SFSSAppSosReportsID200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
