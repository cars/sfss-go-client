/*
SmartFabric Storage Software Application REST APIs

REST APIs used for managing SFSS application are captured in this section.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sfssapp

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the UserActivityAuditGETID type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserActivityAuditGETID{}

// UserActivityAuditGETID This model lists the user activity information based on the specified user activity ID
type UserActivityAuditGETID struct {
	// CDC instance identifier
	CDCInstance string `json:"CDCInstance"`
	// Response code that indicates whether the user activity is successfully completed or not
	HTTPCode string `json:"HTTPCode"`
	// Operation performed by the user
	Operation string `json:"Operation"`
	// Information provided by the user for the specific user activity
	Payload string `json:"Payload"`
	// IP address of the system from which the specific user activity was done
	SourceIP string `json:"SourceIP"`
	// Date and time at which the operation was performed; the date is of the mm/dd/yyyy format and time is of hh:mm:ss format
	TimeStamp string `json:"TimeStamp"`
	// RESTAPI URL that is used for the specific user activity
	URL       string `json:"URL"`
	UserAgent string `json:"UserAgent"`
	// Username of the user who performed the operation
	UserName string `json:"UserName"`
	// Role of the user
	UserRole     string `json:"UserRole"`
	OdataId      string `json:"@odata.id"`
	OdataType    string `json:"@odata.type"`
	OdataContext string `json:"@odata.context"`
}

type _UserActivityAuditGETID UserActivityAuditGETID

// NewUserActivityAuditGETID instantiates a new UserActivityAuditGETID object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserActivityAuditGETID(cDCInstance string, hTTPCode string, operation string, payload string, sourceIP string, timeStamp string, uRL string, userAgent string, userName string, userRole string, odataId string, odataType string, odataContext string) *UserActivityAuditGETID {
	this := UserActivityAuditGETID{}
	this.CDCInstance = cDCInstance
	this.HTTPCode = hTTPCode
	this.Operation = operation
	this.Payload = payload
	this.SourceIP = sourceIP
	this.TimeStamp = timeStamp
	this.URL = uRL
	this.UserAgent = userAgent
	this.UserName = userName
	this.UserRole = userRole
	this.OdataId = odataId
	this.OdataType = odataType
	this.OdataContext = odataContext
	return &this
}

// NewUserActivityAuditGETIDWithDefaults instantiates a new UserActivityAuditGETID object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserActivityAuditGETIDWithDefaults() *UserActivityAuditGETID {
	this := UserActivityAuditGETID{}
	return &this
}

// GetCDCInstance returns the CDCInstance field value
func (o *UserActivityAuditGETID) GetCDCInstance() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CDCInstance
}

// GetCDCInstanceOk returns a tuple with the CDCInstance field value
// and a boolean to check if the value has been set.
func (o *UserActivityAuditGETID) GetCDCInstanceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CDCInstance, true
}

// SetCDCInstance sets field value
func (o *UserActivityAuditGETID) SetCDCInstance(v string) {
	o.CDCInstance = v
}

// GetHTTPCode returns the HTTPCode field value
func (o *UserActivityAuditGETID) GetHTTPCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HTTPCode
}

// GetHTTPCodeOk returns a tuple with the HTTPCode field value
// and a boolean to check if the value has been set.
func (o *UserActivityAuditGETID) GetHTTPCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HTTPCode, true
}

// SetHTTPCode sets field value
func (o *UserActivityAuditGETID) SetHTTPCode(v string) {
	o.HTTPCode = v
}

// GetOperation returns the Operation field value
func (o *UserActivityAuditGETID) GetOperation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Operation
}

// GetOperationOk returns a tuple with the Operation field value
// and a boolean to check if the value has been set.
func (o *UserActivityAuditGETID) GetOperationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Operation, true
}

// SetOperation sets field value
func (o *UserActivityAuditGETID) SetOperation(v string) {
	o.Operation = v
}

// GetPayload returns the Payload field value
func (o *UserActivityAuditGETID) GetPayload() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value
// and a boolean to check if the value has been set.
func (o *UserActivityAuditGETID) GetPayloadOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Payload, true
}

// SetPayload sets field value
func (o *UserActivityAuditGETID) SetPayload(v string) {
	o.Payload = v
}

// GetSourceIP returns the SourceIP field value
func (o *UserActivityAuditGETID) GetSourceIP() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceIP
}

// GetSourceIPOk returns a tuple with the SourceIP field value
// and a boolean to check if the value has been set.
func (o *UserActivityAuditGETID) GetSourceIPOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceIP, true
}

// SetSourceIP sets field value
func (o *UserActivityAuditGETID) SetSourceIP(v string) {
	o.SourceIP = v
}

// GetTimeStamp returns the TimeStamp field value
func (o *UserActivityAuditGETID) GetTimeStamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TimeStamp
}

// GetTimeStampOk returns a tuple with the TimeStamp field value
// and a boolean to check if the value has been set.
func (o *UserActivityAuditGETID) GetTimeStampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeStamp, true
}

// SetTimeStamp sets field value
func (o *UserActivityAuditGETID) SetTimeStamp(v string) {
	o.TimeStamp = v
}

// GetURL returns the URL field value
func (o *UserActivityAuditGETID) GetURL() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.URL
}

// GetURLOk returns a tuple with the URL field value
// and a boolean to check if the value has been set.
func (o *UserActivityAuditGETID) GetURLOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.URL, true
}

// SetURL sets field value
func (o *UserActivityAuditGETID) SetURL(v string) {
	o.URL = v
}

// GetUserAgent returns the UserAgent field value
func (o *UserActivityAuditGETID) GetUserAgent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserAgent
}

// GetUserAgentOk returns a tuple with the UserAgent field value
// and a boolean to check if the value has been set.
func (o *UserActivityAuditGETID) GetUserAgentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserAgent, true
}

// SetUserAgent sets field value
func (o *UserActivityAuditGETID) SetUserAgent(v string) {
	o.UserAgent = v
}

// GetUserName returns the UserName field value
func (o *UserActivityAuditGETID) GetUserName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value
// and a boolean to check if the value has been set.
func (o *UserActivityAuditGETID) GetUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserName, true
}

// SetUserName sets field value
func (o *UserActivityAuditGETID) SetUserName(v string) {
	o.UserName = v
}

// GetUserRole returns the UserRole field value
func (o *UserActivityAuditGETID) GetUserRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserRole
}

// GetUserRoleOk returns a tuple with the UserRole field value
// and a boolean to check if the value has been set.
func (o *UserActivityAuditGETID) GetUserRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserRole, true
}

// SetUserRole sets field value
func (o *UserActivityAuditGETID) SetUserRole(v string) {
	o.UserRole = v
}

// GetOdataId returns the OdataId field value
func (o *UserActivityAuditGETID) GetOdataId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OdataId
}

// GetOdataIdOk returns a tuple with the OdataId field value
// and a boolean to check if the value has been set.
func (o *UserActivityAuditGETID) GetOdataIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OdataId, true
}

// SetOdataId sets field value
func (o *UserActivityAuditGETID) SetOdataId(v string) {
	o.OdataId = v
}

// GetOdataType returns the OdataType field value
func (o *UserActivityAuditGETID) GetOdataType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OdataType
}

// GetOdataTypeOk returns a tuple with the OdataType field value
// and a boolean to check if the value has been set.
func (o *UserActivityAuditGETID) GetOdataTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OdataType, true
}

// SetOdataType sets field value
func (o *UserActivityAuditGETID) SetOdataType(v string) {
	o.OdataType = v
}

// GetOdataContext returns the OdataContext field value
func (o *UserActivityAuditGETID) GetOdataContext() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OdataContext
}

// GetOdataContextOk returns a tuple with the OdataContext field value
// and a boolean to check if the value has been set.
func (o *UserActivityAuditGETID) GetOdataContextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OdataContext, true
}

// SetOdataContext sets field value
func (o *UserActivityAuditGETID) SetOdataContext(v string) {
	o.OdataContext = v
}

func (o UserActivityAuditGETID) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserActivityAuditGETID) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["CDCInstance"] = o.CDCInstance
	toSerialize["HTTPCode"] = o.HTTPCode
	toSerialize["Operation"] = o.Operation
	toSerialize["Payload"] = o.Payload
	toSerialize["SourceIP"] = o.SourceIP
	toSerialize["TimeStamp"] = o.TimeStamp
	toSerialize["URL"] = o.URL
	toSerialize["UserAgent"] = o.UserAgent
	toSerialize["UserName"] = o.UserName
	toSerialize["UserRole"] = o.UserRole
	toSerialize["@odata.id"] = o.OdataId
	toSerialize["@odata.type"] = o.OdataType
	toSerialize["@odata.context"] = o.OdataContext
	return toSerialize, nil
}

func (o *UserActivityAuditGETID) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"CDCInstance",
		"HTTPCode",
		"Operation",
		"Payload",
		"SourceIP",
		"TimeStamp",
		"URL",
		"UserAgent",
		"UserName",
		"UserRole",
		"@odata.id",
		"@odata.type",
		"@odata.context",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUserActivityAuditGETID := _UserActivityAuditGETID{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUserActivityAuditGETID)

	if err != nil {
		return err
	}

	*o = UserActivityAuditGETID(varUserActivityAuditGETID)

	return err
}

type NullableUserActivityAuditGETID struct {
	value *UserActivityAuditGETID
	isSet bool
}

func (v NullableUserActivityAuditGETID) Get() *UserActivityAuditGETID {
	return v.value
}

func (v *NullableUserActivityAuditGETID) Set(val *UserActivityAuditGETID) {
	v.value = val
	v.isSet = true
}

func (v NullableUserActivityAuditGETID) IsSet() bool {
	return v.isSet
}

func (v *NullableUserActivityAuditGETID) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserActivityAuditGETID(val *UserActivityAuditGETID) *NullableUserActivityAuditGETID {
	return &NullableUserActivityAuditGETID{value: val, isSet: true}
}

func (v NullableUserActivityAuditGETID) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserActivityAuditGETID) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
