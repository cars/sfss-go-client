/*
SmartFabric Storage Software Application REST APIs

REST APIs used for managing SFSS application are captured in this section.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sfssapp

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the UserActivityAuditGET type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserActivityAuditGET{}

// UserActivityAuditGET This model lists all the user activities.
type UserActivityAuditGET struct {
	// A set of user activity audit records
	UserActivityAudits []UserActivityAuditGETUserActivityAuditsInner `json:"UserActivityAudits"`
	// Number of user activity audit records
	UserActivityAuditsodataCount float32 `json:"UserActivityAudits@odata.count"`
	OdataId                      string  `json:"@odata.id"`
	OdataContext                 string  `json:"@odata.context"`
	OdataType                    string  `json:"@odata.type"`
	// Total number of user activity audit records
	TotalCount string `json:"TotalCount"`
}

type _UserActivityAuditGET UserActivityAuditGET

// NewUserActivityAuditGET instantiates a new UserActivityAuditGET object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserActivityAuditGET(userActivityAudits []UserActivityAuditGETUserActivityAuditsInner, userActivityAuditsodataCount float32, odataId string, odataContext string, odataType string, totalCount string) *UserActivityAuditGET {
	this := UserActivityAuditGET{}
	this.UserActivityAudits = userActivityAudits
	this.UserActivityAuditsodataCount = userActivityAuditsodataCount
	this.OdataId = odataId
	this.OdataContext = odataContext
	this.OdataType = odataType
	this.TotalCount = totalCount
	return &this
}

// NewUserActivityAuditGETWithDefaults instantiates a new UserActivityAuditGET object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserActivityAuditGETWithDefaults() *UserActivityAuditGET {
	this := UserActivityAuditGET{}
	return &this
}

// GetUserActivityAudits returns the UserActivityAudits field value
func (o *UserActivityAuditGET) GetUserActivityAudits() []UserActivityAuditGETUserActivityAuditsInner {
	if o == nil {
		var ret []UserActivityAuditGETUserActivityAuditsInner
		return ret
	}

	return o.UserActivityAudits
}

// GetUserActivityAuditsOk returns a tuple with the UserActivityAudits field value
// and a boolean to check if the value has been set.
func (o *UserActivityAuditGET) GetUserActivityAuditsOk() ([]UserActivityAuditGETUserActivityAuditsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserActivityAudits, true
}

// SetUserActivityAudits sets field value
func (o *UserActivityAuditGET) SetUserActivityAudits(v []UserActivityAuditGETUserActivityAuditsInner) {
	o.UserActivityAudits = v
}

// GetUserActivityAuditsodataCount returns the UserActivityAuditsodataCount field value
func (o *UserActivityAuditGET) GetUserActivityAuditsodataCount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.UserActivityAuditsodataCount
}

// GetUserActivityAuditsodataCountOk returns a tuple with the UserActivityAuditsodataCount field value
// and a boolean to check if the value has been set.
func (o *UserActivityAuditGET) GetUserActivityAuditsodataCountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserActivityAuditsodataCount, true
}

// SetUserActivityAuditsodataCount sets field value
func (o *UserActivityAuditGET) SetUserActivityAuditsodataCount(v float32) {
	o.UserActivityAuditsodataCount = v
}

// GetOdataId returns the OdataId field value
func (o *UserActivityAuditGET) GetOdataId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OdataId
}

// GetOdataIdOk returns a tuple with the OdataId field value
// and a boolean to check if the value has been set.
func (o *UserActivityAuditGET) GetOdataIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OdataId, true
}

// SetOdataId sets field value
func (o *UserActivityAuditGET) SetOdataId(v string) {
	o.OdataId = v
}

// GetOdataContext returns the OdataContext field value
func (o *UserActivityAuditGET) GetOdataContext() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OdataContext
}

// GetOdataContextOk returns a tuple with the OdataContext field value
// and a boolean to check if the value has been set.
func (o *UserActivityAuditGET) GetOdataContextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OdataContext, true
}

// SetOdataContext sets field value
func (o *UserActivityAuditGET) SetOdataContext(v string) {
	o.OdataContext = v
}

// GetOdataType returns the OdataType field value
func (o *UserActivityAuditGET) GetOdataType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OdataType
}

// GetOdataTypeOk returns a tuple with the OdataType field value
// and a boolean to check if the value has been set.
func (o *UserActivityAuditGET) GetOdataTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OdataType, true
}

// SetOdataType sets field value
func (o *UserActivityAuditGET) SetOdataType(v string) {
	o.OdataType = v
}

// GetTotalCount returns the TotalCount field value
func (o *UserActivityAuditGET) GetTotalCount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value
// and a boolean to check if the value has been set.
func (o *UserActivityAuditGET) GetTotalCountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalCount, true
}

// SetTotalCount sets field value
func (o *UserActivityAuditGET) SetTotalCount(v string) {
	o.TotalCount = v
}

func (o UserActivityAuditGET) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserActivityAuditGET) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["UserActivityAudits"] = o.UserActivityAudits
	toSerialize["UserActivityAudits@odata.count"] = o.UserActivityAuditsodataCount
	toSerialize["@odata.id"] = o.OdataId
	toSerialize["@odata.context"] = o.OdataContext
	toSerialize["@odata.type"] = o.OdataType
	toSerialize["TotalCount"] = o.TotalCount
	return toSerialize, nil
}

func (o *UserActivityAuditGET) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"UserActivityAudits",
		"UserActivityAudits@odata.count",
		"@odata.id",
		"@odata.context",
		"@odata.type",
		"TotalCount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUserActivityAuditGET := _UserActivityAuditGET{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUserActivityAuditGET)

	if err != nil {
		return err
	}

	*o = UserActivityAuditGET(varUserActivityAuditGET)

	return err
}

type NullableUserActivityAuditGET struct {
	value *UserActivityAuditGET
	isSet bool
}

func (v NullableUserActivityAuditGET) Get() *UserActivityAuditGET {
	return v.value
}

func (v *NullableUserActivityAuditGET) Set(val *UserActivityAuditGET) {
	v.value = val
	v.isSet = true
}

func (v NullableUserActivityAuditGET) IsSet() bool {
	return v.isSet
}

func (v *NullableUserActivityAuditGET) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserActivityAuditGET(val *UserActivityAuditGET) *NullableUserActivityAuditGET {
	return &NullableUserActivityAuditGET{value: val, isSet: true}
}

func (v NullableUserActivityAuditGET) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserActivityAuditGET) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
