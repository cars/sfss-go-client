/*
SmartFabric Storage Software Application REST APIs

REST APIs used for managing SFSS application are captured in this section.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sfssapp

import (
	"encoding/json"
)

// checks if the PostRedfishV1SFSSAppNTP1Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostRedfishV1SFSSAppNTP1Request{}

// PostRedfishV1SFSSAppNTP1Request struct for PostRedfishV1SFSSAppNTP1Request
type PostRedfishV1SFSSAppNTP1Request struct {
	// IP address of the NTP server; only IPv4 address is supported
	NtpServer *string `json:"NtpServer,omitempty"`
}

// NewPostRedfishV1SFSSAppNTP1Request instantiates a new PostRedfishV1SFSSAppNTP1Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostRedfishV1SFSSAppNTP1Request() *PostRedfishV1SFSSAppNTP1Request {
	this := PostRedfishV1SFSSAppNTP1Request{}
	return &this
}

// NewPostRedfishV1SFSSAppNTP1RequestWithDefaults instantiates a new PostRedfishV1SFSSAppNTP1Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostRedfishV1SFSSAppNTP1RequestWithDefaults() *PostRedfishV1SFSSAppNTP1Request {
	this := PostRedfishV1SFSSAppNTP1Request{}
	return &this
}

// GetNtpServer returns the NtpServer field value if set, zero value otherwise.
func (o *PostRedfishV1SFSSAppNTP1Request) GetNtpServer() string {
	if o == nil || IsNil(o.NtpServer) {
		var ret string
		return ret
	}
	return *o.NtpServer
}

// GetNtpServerOk returns a tuple with the NtpServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostRedfishV1SFSSAppNTP1Request) GetNtpServerOk() (*string, bool) {
	if o == nil || IsNil(o.NtpServer) {
		return nil, false
	}
	return o.NtpServer, true
}

// HasNtpServer returns a boolean if a field has been set.
func (o *PostRedfishV1SFSSAppNTP1Request) HasNtpServer() bool {
	if o != nil && !IsNil(o.NtpServer) {
		return true
	}

	return false
}

// SetNtpServer gets a reference to the given string and assigns it to the NtpServer field.
func (o *PostRedfishV1SFSSAppNTP1Request) SetNtpServer(v string) {
	o.NtpServer = &v
}

func (o PostRedfishV1SFSSAppNTP1Request) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostRedfishV1SFSSAppNTP1Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NtpServer) {
		toSerialize["NtpServer"] = o.NtpServer
	}
	return toSerialize, nil
}

type NullablePostRedfishV1SFSSAppNTP1Request struct {
	value *PostRedfishV1SFSSAppNTP1Request
	isSet bool
}

func (v NullablePostRedfishV1SFSSAppNTP1Request) Get() *PostRedfishV1SFSSAppNTP1Request {
	return v.value
}

func (v *NullablePostRedfishV1SFSSAppNTP1Request) Set(val *PostRedfishV1SFSSAppNTP1Request) {
	v.value = val
	v.isSet = true
}

func (v NullablePostRedfishV1SFSSAppNTP1Request) IsSet() bool {
	return v.isSet
}

func (v *NullablePostRedfishV1SFSSAppNTP1Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostRedfishV1SFSSAppNTP1Request(val *PostRedfishV1SFSSAppNTP1Request) *NullablePostRedfishV1SFSSAppNTP1Request {
	return &NullablePostRedfishV1SFSSAppNTP1Request{value: val, isSet: true}
}

func (v NullablePostRedfishV1SFSSAppNTP1Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostRedfishV1SFSSAppNTP1Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
