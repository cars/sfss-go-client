/*
SmartFabric Storage Software Application REST APIs

REST APIs used for managing SFSS application are captured in this section.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sfssapp

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner{}

// GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner struct for GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner
type GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner struct {
	// SOS report ID
	ID string `json:"ID"`
	// Location of the remote server to download the SOS report
	FileLocation string `json:"FileLocation"`
	// A detailed message on the status of the download operation
	StatusMessage string `json:"StatusMessage"`
	// Password to access the remote server
	ServerPassword string `json:"ServerPassword"`
	// Status of the SOS report download operation
	Status string `json:"Status"`
	// Date and time of the SOS report download operation; the date is of mm/dd/yyyy format and time is of hh:mm:ss format
	TimeStamp string `json:"TimeStamp"`
	// Transport type used for file transfer; possible values include SCP, HTTP, HTTPS, and SFTP
	TransportType string `json:"TransportType"`
	// Username to access the remote server
	ServerUserName string `json:"ServerUserName"`
	OdataId        string `json:"@odata.id"`
	OdataType      string `json:"@odata.type"`
	OdataContext   string `json:"@odata.context"`
}

type _GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner

// NewGetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner instantiates a new GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner(iD string, fileLocation string, statusMessage string, serverPassword string, status string, timeStamp string, transportType string, serverUserName string, odataId string, odataType string, odataContext string) *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner {
	this := GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner{}
	this.ID = iD
	this.FileLocation = fileLocation
	this.StatusMessage = statusMessage
	this.ServerPassword = serverPassword
	this.Status = status
	this.TimeStamp = timeStamp
	this.TransportType = transportType
	this.ServerUserName = serverUserName
	this.OdataId = odataId
	this.OdataType = odataType
	this.OdataContext = odataContext
	return &this
}

// NewGetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInnerWithDefaults instantiates a new GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInnerWithDefaults() *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner {
	this := GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner{}
	return &this
}

// GetID returns the ID field value
func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) GetID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ID
}

// GetIDOk returns a tuple with the ID field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) GetIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ID, true
}

// SetID sets field value
func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) SetID(v string) {
	o.ID = v
}

// GetFileLocation returns the FileLocation field value
func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) GetFileLocation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileLocation
}

// GetFileLocationOk returns a tuple with the FileLocation field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) GetFileLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileLocation, true
}

// SetFileLocation sets field value
func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) SetFileLocation(v string) {
	o.FileLocation = v
}

// GetStatusMessage returns the StatusMessage field value
func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) GetStatusMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StatusMessage
}

// GetStatusMessageOk returns a tuple with the StatusMessage field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) GetStatusMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusMessage, true
}

// SetStatusMessage sets field value
func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) SetStatusMessage(v string) {
	o.StatusMessage = v
}

// GetServerPassword returns the ServerPassword field value
func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) GetServerPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerPassword
}

// GetServerPasswordOk returns a tuple with the ServerPassword field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) GetServerPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerPassword, true
}

// SetServerPassword sets field value
func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) SetServerPassword(v string) {
	o.ServerPassword = v
}

// GetStatus returns the Status field value
func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) SetStatus(v string) {
	o.Status = v
}

// GetTimeStamp returns the TimeStamp field value
func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) GetTimeStamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TimeStamp
}

// GetTimeStampOk returns a tuple with the TimeStamp field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) GetTimeStampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeStamp, true
}

// SetTimeStamp sets field value
func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) SetTimeStamp(v string) {
	o.TimeStamp = v
}

// GetTransportType returns the TransportType field value
func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) GetTransportType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransportType
}

// GetTransportTypeOk returns a tuple with the TransportType field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) GetTransportTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransportType, true
}

// SetTransportType sets field value
func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) SetTransportType(v string) {
	o.TransportType = v
}

// GetServerUserName returns the ServerUserName field value
func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) GetServerUserName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerUserName
}

// GetServerUserNameOk returns a tuple with the ServerUserName field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) GetServerUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerUserName, true
}

// SetServerUserName sets field value
func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) SetServerUserName(v string) {
	o.ServerUserName = v
}

// GetOdataId returns the OdataId field value
func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) GetOdataId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OdataId
}

// GetOdataIdOk returns a tuple with the OdataId field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) GetOdataIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OdataId, true
}

// SetOdataId sets field value
func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) SetOdataId(v string) {
	o.OdataId = v
}

// GetOdataType returns the OdataType field value
func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) GetOdataType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OdataType
}

// GetOdataTypeOk returns a tuple with the OdataType field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) GetOdataTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OdataType, true
}

// SetOdataType sets field value
func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) SetOdataType(v string) {
	o.OdataType = v
}

// GetOdataContext returns the OdataContext field value
func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) GetOdataContext() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OdataContext
}

// GetOdataContextOk returns a tuple with the OdataContext field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) GetOdataContextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OdataContext, true
}

// SetOdataContext sets field value
func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) SetOdataContext(v string) {
	o.OdataContext = v
}

func (o GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ID"] = o.ID
	toSerialize["FileLocation"] = o.FileLocation
	toSerialize["StatusMessage"] = o.StatusMessage
	toSerialize["ServerPassword"] = o.ServerPassword
	toSerialize["Status"] = o.Status
	toSerialize["TimeStamp"] = o.TimeStamp
	toSerialize["TransportType"] = o.TransportType
	toSerialize["ServerUserName"] = o.ServerUserName
	toSerialize["@odata.id"] = o.OdataId
	toSerialize["@odata.type"] = o.OdataType
	toSerialize["@odata.context"] = o.OdataContext
	return toSerialize, nil
}

func (o *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ID",
		"FileLocation",
		"StatusMessage",
		"ServerPassword",
		"Status",
		"TimeStamp",
		"TransportType",
		"ServerUserName",
		"@odata.id",
		"@odata.type",
		"@odata.context",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner := _GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner)

	if err != nil {
		return err
	}

	*o = GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner(varGetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner)

	return err
}

type NullableGetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner struct {
	value *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner
	isSet bool
}

func (v NullableGetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) Get() *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner {
	return v.value
}

func (v *NullableGetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) Set(val *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner(val *GetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) *NullableGetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner {
	return &NullableGetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner{value: val, isSet: true}
}

func (v NullableGetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRedfishV1SFSSAppSosReportsExpandSosReports200ResponseSosReportsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
