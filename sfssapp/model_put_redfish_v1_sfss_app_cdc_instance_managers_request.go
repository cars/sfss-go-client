/*
SmartFabric Storage Software Application REST APIs

REST APIs used for managing SFSS application are captured in this section.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sfssapp

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PutRedfishV1SFSSAppCDCInstanceManagersRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PutRedfishV1SFSSAppCDCInstanceManagersRequest{}

// PutRedfishV1SFSSAppCDCInstanceManagersRequest
type PutRedfishV1SFSSAppCDCInstanceManagersRequest struct {
	// CDC instance identifier
	InstanceIdentifier string `json:"InstanceIdentifier"`
	// Interface(s) assigned to the CDC instance
	Interfaces []string `json:"Interfaces"`
	// Administrative state of the CDC instance
	CDCAdminState string `json:"CDCAdminState"`
	// Administrative state of the discovery service
	DiscoverySvcAdminState string `json:"DiscoverySvcAdminState"`
}

type _PutRedfishV1SFSSAppCDCInstanceManagersRequest PutRedfishV1SFSSAppCDCInstanceManagersRequest

// NewPutRedfishV1SFSSAppCDCInstanceManagersRequest instantiates a new PutRedfishV1SFSSAppCDCInstanceManagersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutRedfishV1SFSSAppCDCInstanceManagersRequest(instanceIdentifier string, interfaces []string, cDCAdminState string, discoverySvcAdminState string) *PutRedfishV1SFSSAppCDCInstanceManagersRequest {
	this := PutRedfishV1SFSSAppCDCInstanceManagersRequest{}
	this.InstanceIdentifier = instanceIdentifier
	this.Interfaces = interfaces
	this.CDCAdminState = cDCAdminState
	this.DiscoverySvcAdminState = discoverySvcAdminState
	return &this
}

// NewPutRedfishV1SFSSAppCDCInstanceManagersRequestWithDefaults instantiates a new PutRedfishV1SFSSAppCDCInstanceManagersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutRedfishV1SFSSAppCDCInstanceManagersRequestWithDefaults() *PutRedfishV1SFSSAppCDCInstanceManagersRequest {
	this := PutRedfishV1SFSSAppCDCInstanceManagersRequest{}
	return &this
}

// GetInstanceIdentifier returns the InstanceIdentifier field value
func (o *PutRedfishV1SFSSAppCDCInstanceManagersRequest) GetInstanceIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceIdentifier
}

// GetInstanceIdentifierOk returns a tuple with the InstanceIdentifier field value
// and a boolean to check if the value has been set.
func (o *PutRedfishV1SFSSAppCDCInstanceManagersRequest) GetInstanceIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceIdentifier, true
}

// SetInstanceIdentifier sets field value
func (o *PutRedfishV1SFSSAppCDCInstanceManagersRequest) SetInstanceIdentifier(v string) {
	o.InstanceIdentifier = v
}

// GetInterfaces returns the Interfaces field value
func (o *PutRedfishV1SFSSAppCDCInstanceManagersRequest) GetInterfaces() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Interfaces
}

// GetInterfacesOk returns a tuple with the Interfaces field value
// and a boolean to check if the value has been set.
func (o *PutRedfishV1SFSSAppCDCInstanceManagersRequest) GetInterfacesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Interfaces, true
}

// SetInterfaces sets field value
func (o *PutRedfishV1SFSSAppCDCInstanceManagersRequest) SetInterfaces(v []string) {
	o.Interfaces = v
}

// GetCDCAdminState returns the CDCAdminState field value
func (o *PutRedfishV1SFSSAppCDCInstanceManagersRequest) GetCDCAdminState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CDCAdminState
}

// GetCDCAdminStateOk returns a tuple with the CDCAdminState field value
// and a boolean to check if the value has been set.
func (o *PutRedfishV1SFSSAppCDCInstanceManagersRequest) GetCDCAdminStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CDCAdminState, true
}

// SetCDCAdminState sets field value
func (o *PutRedfishV1SFSSAppCDCInstanceManagersRequest) SetCDCAdminState(v string) {
	o.CDCAdminState = v
}

// GetDiscoverySvcAdminState returns the DiscoverySvcAdminState field value
func (o *PutRedfishV1SFSSAppCDCInstanceManagersRequest) GetDiscoverySvcAdminState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DiscoverySvcAdminState
}

// GetDiscoverySvcAdminStateOk returns a tuple with the DiscoverySvcAdminState field value
// and a boolean to check if the value has been set.
func (o *PutRedfishV1SFSSAppCDCInstanceManagersRequest) GetDiscoverySvcAdminStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DiscoverySvcAdminState, true
}

// SetDiscoverySvcAdminState sets field value
func (o *PutRedfishV1SFSSAppCDCInstanceManagersRequest) SetDiscoverySvcAdminState(v string) {
	o.DiscoverySvcAdminState = v
}

func (o PutRedfishV1SFSSAppCDCInstanceManagersRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PutRedfishV1SFSSAppCDCInstanceManagersRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["InstanceIdentifier"] = o.InstanceIdentifier
	toSerialize["Interfaces"] = o.Interfaces
	toSerialize["CDCAdminState"] = o.CDCAdminState
	toSerialize["DiscoverySvcAdminState"] = o.DiscoverySvcAdminState
	return toSerialize, nil
}

func (o *PutRedfishV1SFSSAppCDCInstanceManagersRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"InstanceIdentifier",
		"Interfaces",
		"CDCAdminState",
		"DiscoverySvcAdminState",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPutRedfishV1SFSSAppCDCInstanceManagersRequest := _PutRedfishV1SFSSAppCDCInstanceManagersRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPutRedfishV1SFSSAppCDCInstanceManagersRequest)

	if err != nil {
		return err
	}

	*o = PutRedfishV1SFSSAppCDCInstanceManagersRequest(varPutRedfishV1SFSSAppCDCInstanceManagersRequest)

	return err
}

type NullablePutRedfishV1SFSSAppCDCInstanceManagersRequest struct {
	value *PutRedfishV1SFSSAppCDCInstanceManagersRequest
	isSet bool
}

func (v NullablePutRedfishV1SFSSAppCDCInstanceManagersRequest) Get() *PutRedfishV1SFSSAppCDCInstanceManagersRequest {
	return v.value
}

func (v *NullablePutRedfishV1SFSSAppCDCInstanceManagersRequest) Set(val *PutRedfishV1SFSSAppCDCInstanceManagersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePutRedfishV1SFSSAppCDCInstanceManagersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePutRedfishV1SFSSAppCDCInstanceManagersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutRedfishV1SFSSAppCDCInstanceManagersRequest(val *PutRedfishV1SFSSAppCDCInstanceManagersRequest) *NullablePutRedfishV1SFSSAppCDCInstanceManagersRequest {
	return &NullablePutRedfishV1SFSSAppCDCInstanceManagersRequest{value: val, isSet: true}
}

func (v NullablePutRedfishV1SFSSAppCDCInstanceManagersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutRedfishV1SFSSAppCDCInstanceManagersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
