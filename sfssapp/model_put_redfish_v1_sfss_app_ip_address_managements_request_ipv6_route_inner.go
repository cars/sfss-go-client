/*
SmartFabric Storage Software Application REST APIs

REST APIs used for managing SFSS application are captured in this section.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sfssapp

import (
	"encoding/json"
)

// checks if the PutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner{}

// PutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner struct for PutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner
type PutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner struct {
	// Destination IP address
	Destination *string `json:"Destination,omitempty"`
	// Subnet mask
	DestinationPrefix *int32 `json:"DestinationPrefix,omitempty"`
	// Next hop IP address
	NextHop *string `json:"NextHop,omitempty"`
	// The cost assigned to the interface; valid range is from 1 to 255
	Metric *int32 `json:"Metric,omitempty"`
}

// NewPutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner instantiates a new PutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner() *PutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner {
	this := PutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner{}
	return &this
}

// NewPutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInnerWithDefaults instantiates a new PutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInnerWithDefaults() *PutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner {
	this := PutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner{}
	return &this
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *PutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner) GetDestination() string {
	if o == nil || IsNil(o.Destination) {
		var ret string
		return ret
	}
	return *o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner) GetDestinationOk() (*string, bool) {
	if o == nil || IsNil(o.Destination) {
		return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *PutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner) HasDestination() bool {
	if o != nil && !IsNil(o.Destination) {
		return true
	}

	return false
}

// SetDestination gets a reference to the given string and assigns it to the Destination field.
func (o *PutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner) SetDestination(v string) {
	o.Destination = &v
}

// GetDestinationPrefix returns the DestinationPrefix field value if set, zero value otherwise.
func (o *PutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner) GetDestinationPrefix() int32 {
	if o == nil || IsNil(o.DestinationPrefix) {
		var ret int32
		return ret
	}
	return *o.DestinationPrefix
}

// GetDestinationPrefixOk returns a tuple with the DestinationPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner) GetDestinationPrefixOk() (*int32, bool) {
	if o == nil || IsNil(o.DestinationPrefix) {
		return nil, false
	}
	return o.DestinationPrefix, true
}

// HasDestinationPrefix returns a boolean if a field has been set.
func (o *PutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner) HasDestinationPrefix() bool {
	if o != nil && !IsNil(o.DestinationPrefix) {
		return true
	}

	return false
}

// SetDestinationPrefix gets a reference to the given int32 and assigns it to the DestinationPrefix field.
func (o *PutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner) SetDestinationPrefix(v int32) {
	o.DestinationPrefix = &v
}

// GetNextHop returns the NextHop field value if set, zero value otherwise.
func (o *PutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner) GetNextHop() string {
	if o == nil || IsNil(o.NextHop) {
		var ret string
		return ret
	}
	return *o.NextHop
}

// GetNextHopOk returns a tuple with the NextHop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner) GetNextHopOk() (*string, bool) {
	if o == nil || IsNil(o.NextHop) {
		return nil, false
	}
	return o.NextHop, true
}

// HasNextHop returns a boolean if a field has been set.
func (o *PutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner) HasNextHop() bool {
	if o != nil && !IsNil(o.NextHop) {
		return true
	}

	return false
}

// SetNextHop gets a reference to the given string and assigns it to the NextHop field.
func (o *PutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner) SetNextHop(v string) {
	o.NextHop = &v
}

// GetMetric returns the Metric field value if set, zero value otherwise.
func (o *PutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner) GetMetric() int32 {
	if o == nil || IsNil(o.Metric) {
		var ret int32
		return ret
	}
	return *o.Metric
}

// GetMetricOk returns a tuple with the Metric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner) GetMetricOk() (*int32, bool) {
	if o == nil || IsNil(o.Metric) {
		return nil, false
	}
	return o.Metric, true
}

// HasMetric returns a boolean if a field has been set.
func (o *PutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner) HasMetric() bool {
	if o != nil && !IsNil(o.Metric) {
		return true
	}

	return false
}

// SetMetric gets a reference to the given int32 and assigns it to the Metric field.
func (o *PutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner) SetMetric(v int32) {
	o.Metric = &v
}

func (o PutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Destination) {
		toSerialize["Destination"] = o.Destination
	}
	if !IsNil(o.DestinationPrefix) {
		toSerialize["DestinationPrefix"] = o.DestinationPrefix
	}
	if !IsNil(o.NextHop) {
		toSerialize["NextHop"] = o.NextHop
	}
	if !IsNil(o.Metric) {
		toSerialize["Metric"] = o.Metric
	}
	return toSerialize, nil
}

type NullablePutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner struct {
	value *PutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner
	isSet bool
}

func (v NullablePutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner) Get() *PutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner {
	return v.value
}

func (v *NullablePutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner) Set(val *PutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner(val *PutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner) *NullablePutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner {
	return &NullablePutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner{value: val, isSet: true}
}

func (v NullablePutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutRedfishV1SFSSAppIpAddressManagementsRequestIPV6RouteInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


