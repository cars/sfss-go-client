/*
SmartFabric Storage Software Application REST APIs

REST APIs used for managing SFSS application are captured in this section.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sfssapp

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CDCHealthStatusGETID type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CDCHealthStatusGETID{}

// CDCHealthStatusGETID This model lists the health status information for a particular CDC instance based on the specified CDC instance ID.
type CDCHealthStatusGETID struct {
	// Health status of the CDC instance; possible values include Ok, Warning, and Critical
	Health string `json:"Health"`
	// Reason for the CDC instance to be in Warning or Critical state
	ReasonCode []map[string]interface{} `json:"ReasonCode"`
	// CDC instance identifier
	InstanceIdentifier string `json:"InstanceIdentifier"`
	OdataId            string `json:"@odata.id"`
	OdataType          string `json:"@odata.type"`
	OdataContext       string `json:"@odata.context"`
}

type _CDCHealthStatusGETID CDCHealthStatusGETID

// NewCDCHealthStatusGETID instantiates a new CDCHealthStatusGETID object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCDCHealthStatusGETID(health string, reasonCode []map[string]interface{}, instanceIdentifier string, odataId string, odataType string, odataContext string) *CDCHealthStatusGETID {
	this := CDCHealthStatusGETID{}
	this.Health = health
	this.ReasonCode = reasonCode
	this.InstanceIdentifier = instanceIdentifier
	this.OdataId = odataId
	this.OdataType = odataType
	this.OdataContext = odataContext
	return &this
}

// NewCDCHealthStatusGETIDWithDefaults instantiates a new CDCHealthStatusGETID object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCDCHealthStatusGETIDWithDefaults() *CDCHealthStatusGETID {
	this := CDCHealthStatusGETID{}
	return &this
}

// GetHealth returns the Health field value
func (o *CDCHealthStatusGETID) GetHealth() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Health
}

// GetHealthOk returns a tuple with the Health field value
// and a boolean to check if the value has been set.
func (o *CDCHealthStatusGETID) GetHealthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Health, true
}

// SetHealth sets field value
func (o *CDCHealthStatusGETID) SetHealth(v string) {
	o.Health = v
}

// GetReasonCode returns the ReasonCode field value
func (o *CDCHealthStatusGETID) GetReasonCode() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.ReasonCode
}

// GetReasonCodeOk returns a tuple with the ReasonCode field value
// and a boolean to check if the value has been set.
func (o *CDCHealthStatusGETID) GetReasonCodeOk() ([]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReasonCode, true
}

// SetReasonCode sets field value
func (o *CDCHealthStatusGETID) SetReasonCode(v []map[string]interface{}) {
	o.ReasonCode = v
}

// GetInstanceIdentifier returns the InstanceIdentifier field value
func (o *CDCHealthStatusGETID) GetInstanceIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceIdentifier
}

// GetInstanceIdentifierOk returns a tuple with the InstanceIdentifier field value
// and a boolean to check if the value has been set.
func (o *CDCHealthStatusGETID) GetInstanceIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceIdentifier, true
}

// SetInstanceIdentifier sets field value
func (o *CDCHealthStatusGETID) SetInstanceIdentifier(v string) {
	o.InstanceIdentifier = v
}

// GetOdataId returns the OdataId field value
func (o *CDCHealthStatusGETID) GetOdataId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OdataId
}

// GetOdataIdOk returns a tuple with the OdataId field value
// and a boolean to check if the value has been set.
func (o *CDCHealthStatusGETID) GetOdataIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OdataId, true
}

// SetOdataId sets field value
func (o *CDCHealthStatusGETID) SetOdataId(v string) {
	o.OdataId = v
}

// GetOdataType returns the OdataType field value
func (o *CDCHealthStatusGETID) GetOdataType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OdataType
}

// GetOdataTypeOk returns a tuple with the OdataType field value
// and a boolean to check if the value has been set.
func (o *CDCHealthStatusGETID) GetOdataTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OdataType, true
}

// SetOdataType sets field value
func (o *CDCHealthStatusGETID) SetOdataType(v string) {
	o.OdataType = v
}

// GetOdataContext returns the OdataContext field value
func (o *CDCHealthStatusGETID) GetOdataContext() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OdataContext
}

// GetOdataContextOk returns a tuple with the OdataContext field value
// and a boolean to check if the value has been set.
func (o *CDCHealthStatusGETID) GetOdataContextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OdataContext, true
}

// SetOdataContext sets field value
func (o *CDCHealthStatusGETID) SetOdataContext(v string) {
	o.OdataContext = v
}

func (o CDCHealthStatusGETID) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CDCHealthStatusGETID) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Health"] = o.Health
	toSerialize["ReasonCode"] = o.ReasonCode
	toSerialize["InstanceIdentifier"] = o.InstanceIdentifier
	toSerialize["@odata.id"] = o.OdataId
	toSerialize["@odata.type"] = o.OdataType
	toSerialize["@odata.context"] = o.OdataContext
	return toSerialize, nil
}

func (o *CDCHealthStatusGETID) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"Health",
		"ReasonCode",
		"InstanceIdentifier",
		"@odata.id",
		"@odata.type",
		"@odata.context",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCDCHealthStatusGETID := _CDCHealthStatusGETID{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCDCHealthStatusGETID)

	if err != nil {
		return err
	}

	*o = CDCHealthStatusGETID(varCDCHealthStatusGETID)

	return err
}

type NullableCDCHealthStatusGETID struct {
	value *CDCHealthStatusGETID
	isSet bool
}

func (v NullableCDCHealthStatusGETID) Get() *CDCHealthStatusGETID {
	return v.value
}

func (v *NullableCDCHealthStatusGETID) Set(val *CDCHealthStatusGETID) {
	v.value = val
	v.isSet = true
}

func (v NullableCDCHealthStatusGETID) IsSet() bool {
	return v.isSet
}

func (v *NullableCDCHealthStatusGETID) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCDCHealthStatusGETID(val *CDCHealthStatusGETID) *NullableCDCHealthStatusGETID {
	return &NullableCDCHealthStatusGETID{value: val, isSet: true}
}

func (v NullableCDCHealthStatusGETID) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCDCHealthStatusGETID) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
