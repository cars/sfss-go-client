/*
RestServices

REST APIs used for managing CDC instances are captured in this section.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sfssrest

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner{}

// GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner struct for GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner
type GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner struct {
	// Unique Identity of the Entity - Fully Qualified Name (FQN) of the subsystem
	Id string `json:"Id"`
	// NVMe Qualified Name (NQN) of the subsystem
	NQN string `json:"NQN"`
	// IP address of the subsystem
	TransportAddress string `json:"TransportAddress"`
	// IP address family; possible values include IPv4 and IPv6
	TransportAddressFamily string `json:"TransportAddressFamily"`
	// Internal Port ID that is mapped to the NVMe Subsystem Port
	PortId float32 `json:"PortId"`
	// TCP controller ID, 65535
	ControllerId float32 `json:"ControllerId"`
	// Supported transport types that can be used for communication with the controller; possible values are TCP, RoCE, FC
	TransportType string `json:"TransportType"`
	// Possible values include Reserved, Discovery Service, and NVM Subsystem
	SubType string `json:"SubType"`
	// Transport Request Type (TREQ); possible values include Secure channel not specified, Secure channel required, and Secure channel not required
	TREQ string `json:"TREQ"`
	// Admin Queue Size
	ASQZ float32 `json:"ASQZ"`
	// NVMe Transport Service Identifier as an ASCII string
	TransportServiceId string `json:"TransportServiceId"`
	// NVMe Transport Service Address SubType
	TSAS string `json:"TSAS"`
	// Generation Counter that is maintained for the last received Get Log Page command
	RcvdGenCounter float32 `json:"RcvdGenCounter"`
	// Type of endpoint registration; possible values include Implicit, Explicit, Pull, and Manual
	RegistrationType string `json:"RegistrationType"`
	// Status of the TCP connection between the subsystem and the CDC instance; possible values include Online and Offline
	ConnectionStatus string `json:"ConnectionStatus"`
	// Entity Key Type; possible values are Unknown, Port, and TRADDR
	EKType string `json:"EKType"`
	OdataId string `json:"@odata.id"`
	OdataType string `json:"@odata.type"`
	OdataContext string `json:"@odata.context"`
}

type _GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner

// NewGetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner instantiates a new GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner(id string, nQN string, transportAddress string, transportAddressFamily string, portId float32, controllerId float32, transportType string, subType string, tREQ string, aSQZ float32, transportServiceId string, tSAS string, rcvdGenCounter float32, registrationType string, connectionStatus string, eKType string, odataId string, odataType string, odataContext string) *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner {
	this := GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner{}
	this.Id = id
	this.NQN = nQN
	this.TransportAddress = transportAddress
	this.TransportAddressFamily = transportAddressFamily
	this.PortId = portId
	this.ControllerId = controllerId
	this.TransportType = transportType
	this.SubType = subType
	this.TREQ = tREQ
	this.ASQZ = aSQZ
	this.TransportServiceId = transportServiceId
	this.TSAS = tSAS
	this.RcvdGenCounter = rcvdGenCounter
	this.RegistrationType = registrationType
	this.ConnectionStatus = connectionStatus
	this.EKType = eKType
	this.OdataId = odataId
	this.OdataType = odataType
	this.OdataContext = odataContext
	return &this
}

// NewGetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInnerWithDefaults instantiates a new GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInnerWithDefaults() *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner {
	this := GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner{}
	return &this
}

// GetId returns the Id field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) SetId(v string) {
	o.Id = v
}

// GetNQN returns the NQN field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetNQN() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NQN
}

// GetNQNOk returns a tuple with the NQN field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetNQNOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NQN, true
}

// SetNQN sets field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) SetNQN(v string) {
	o.NQN = v
}

// GetTransportAddress returns the TransportAddress field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetTransportAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransportAddress
}

// GetTransportAddressOk returns a tuple with the TransportAddress field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetTransportAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransportAddress, true
}

// SetTransportAddress sets field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) SetTransportAddress(v string) {
	o.TransportAddress = v
}

// GetTransportAddressFamily returns the TransportAddressFamily field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetTransportAddressFamily() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransportAddressFamily
}

// GetTransportAddressFamilyOk returns a tuple with the TransportAddressFamily field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetTransportAddressFamilyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransportAddressFamily, true
}

// SetTransportAddressFamily sets field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) SetTransportAddressFamily(v string) {
	o.TransportAddressFamily = v
}

// GetPortId returns the PortId field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetPortId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.PortId
}

// GetPortIdOk returns a tuple with the PortId field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetPortIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PortId, true
}

// SetPortId sets field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) SetPortId(v float32) {
	o.PortId = v
}

// GetControllerId returns the ControllerId field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetControllerId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ControllerId
}

// GetControllerIdOk returns a tuple with the ControllerId field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetControllerIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ControllerId, true
}

// SetControllerId sets field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) SetControllerId(v float32) {
	o.ControllerId = v
}

// GetTransportType returns the TransportType field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetTransportType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransportType
}

// GetTransportTypeOk returns a tuple with the TransportType field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetTransportTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransportType, true
}

// SetTransportType sets field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) SetTransportType(v string) {
	o.TransportType = v
}

// GetSubType returns the SubType field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetSubType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubType
}

// GetSubTypeOk returns a tuple with the SubType field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetSubTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubType, true
}

// SetSubType sets field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) SetSubType(v string) {
	o.SubType = v
}

// GetTREQ returns the TREQ field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetTREQ() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TREQ
}

// GetTREQOk returns a tuple with the TREQ field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetTREQOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TREQ, true
}

// SetTREQ sets field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) SetTREQ(v string) {
	o.TREQ = v
}

// GetASQZ returns the ASQZ field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetASQZ() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ASQZ
}

// GetASQZOk returns a tuple with the ASQZ field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetASQZOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ASQZ, true
}

// SetASQZ sets field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) SetASQZ(v float32) {
	o.ASQZ = v
}

// GetTransportServiceId returns the TransportServiceId field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetTransportServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransportServiceId
}

// GetTransportServiceIdOk returns a tuple with the TransportServiceId field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetTransportServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransportServiceId, true
}

// SetTransportServiceId sets field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) SetTransportServiceId(v string) {
	o.TransportServiceId = v
}

// GetTSAS returns the TSAS field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetTSAS() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TSAS
}

// GetTSASOk returns a tuple with the TSAS field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetTSASOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TSAS, true
}

// SetTSAS sets field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) SetTSAS(v string) {
	o.TSAS = v
}

// GetRcvdGenCounter returns the RcvdGenCounter field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetRcvdGenCounter() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.RcvdGenCounter
}

// GetRcvdGenCounterOk returns a tuple with the RcvdGenCounter field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetRcvdGenCounterOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RcvdGenCounter, true
}

// SetRcvdGenCounter sets field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) SetRcvdGenCounter(v float32) {
	o.RcvdGenCounter = v
}

// GetRegistrationType returns the RegistrationType field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetRegistrationType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RegistrationType
}

// GetRegistrationTypeOk returns a tuple with the RegistrationType field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetRegistrationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RegistrationType, true
}

// SetRegistrationType sets field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) SetRegistrationType(v string) {
	o.RegistrationType = v
}

// GetConnectionStatus returns the ConnectionStatus field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetConnectionStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectionStatus
}

// GetConnectionStatusOk returns a tuple with the ConnectionStatus field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetConnectionStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectionStatus, true
}

// SetConnectionStatus sets field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) SetConnectionStatus(v string) {
	o.ConnectionStatus = v
}

// GetEKType returns the EKType field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetEKType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EKType
}

// GetEKTypeOk returns a tuple with the EKType field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetEKTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EKType, true
}

// SetEKType sets field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) SetEKType(v string) {
	o.EKType = v
}

// GetOdataId returns the OdataId field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetOdataId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OdataId
}

// GetOdataIdOk returns a tuple with the OdataId field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetOdataIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OdataId, true
}

// SetOdataId sets field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) SetOdataId(v string) {
	o.OdataId = v
}

// GetOdataType returns the OdataType field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetOdataType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OdataType
}

// GetOdataTypeOk returns a tuple with the OdataType field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetOdataTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OdataType, true
}

// SetOdataType sets field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) SetOdataType(v string) {
	o.OdataType = v
}

// GetOdataContext returns the OdataContext field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetOdataContext() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OdataContext
}

// GetOdataContextOk returns a tuple with the OdataContext field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) GetOdataContextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OdataContext, true
}

// SetOdataContext sets field value
func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) SetOdataContext(v string) {
	o.OdataContext = v
}

func (o GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Id"] = o.Id
	toSerialize["NQN"] = o.NQN
	toSerialize["TransportAddress"] = o.TransportAddress
	toSerialize["TransportAddressFamily"] = o.TransportAddressFamily
	toSerialize["PortId"] = o.PortId
	toSerialize["ControllerId"] = o.ControllerId
	toSerialize["TransportType"] = o.TransportType
	toSerialize["SubType"] = o.SubType
	toSerialize["TREQ"] = o.TREQ
	toSerialize["ASQZ"] = o.ASQZ
	toSerialize["TransportServiceId"] = o.TransportServiceId
	toSerialize["TSAS"] = o.TSAS
	toSerialize["RcvdGenCounter"] = o.RcvdGenCounter
	toSerialize["RegistrationType"] = o.RegistrationType
	toSerialize["ConnectionStatus"] = o.ConnectionStatus
	toSerialize["EKType"] = o.EKType
	toSerialize["@odata.id"] = o.OdataId
	toSerialize["@odata.type"] = o.OdataType
	toSerialize["@odata.context"] = o.OdataContext
	return toSerialize, nil
}

func (o *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"Id",
		"NQN",
		"TransportAddress",
		"TransportAddressFamily",
		"PortId",
		"ControllerId",
		"TransportType",
		"SubType",
		"TREQ",
		"ASQZ",
		"TransportServiceId",
		"TSAS",
		"RcvdGenCounter",
		"RegistrationType",
		"ConnectionStatus",
		"EKType",
		"@odata.id",
		"@odata.type",
		"@odata.context",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner := _GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner)

	if err != nil {
		return err
	}

	*o = GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner(varGetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner)

	return err
}

type NullableGetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner struct {
	value *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner
	isSet bool
}

func (v NullableGetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) Get() *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner {
	return v.value
}

func (v *NullableGetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) Set(val *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner(val *GetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) *NullableGetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner {
	return &NullableGetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner{value: val, isSet: true}
}

func (v NullableGetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRedfishV1SFSSInstanceSubsystemsExpandSubsystems200ResponseSubsystemsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


