/*
RestServices

REST APIs used for managing CDC instances are captured in this section.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sfssrest

import (
	"encoding/json"
)

// checks if the PostRedfishV1SFSSInstanceDDCsRequestAnyOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostRedfishV1SFSSInstanceDDCsRequestAnyOf{}

// PostRedfishV1SFSSInstanceDDCsRequestAnyOf struct for PostRedfishV1SFSSInstanceDDCsRequestAnyOf
type PostRedfishV1SFSSInstanceDDCsRequestAnyOf struct {
	DDCs []PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner `json:"DDCs,omitempty"`
}

// NewPostRedfishV1SFSSInstanceDDCsRequestAnyOf instantiates a new PostRedfishV1SFSSInstanceDDCsRequestAnyOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostRedfishV1SFSSInstanceDDCsRequestAnyOf() *PostRedfishV1SFSSInstanceDDCsRequestAnyOf {
	this := PostRedfishV1SFSSInstanceDDCsRequestAnyOf{}
	return &this
}

// NewPostRedfishV1SFSSInstanceDDCsRequestAnyOfWithDefaults instantiates a new PostRedfishV1SFSSInstanceDDCsRequestAnyOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostRedfishV1SFSSInstanceDDCsRequestAnyOfWithDefaults() *PostRedfishV1SFSSInstanceDDCsRequestAnyOf {
	this := PostRedfishV1SFSSInstanceDDCsRequestAnyOf{}
	return &this
}

// GetDDCs returns the DDCs field value if set, zero value otherwise.
func (o *PostRedfishV1SFSSInstanceDDCsRequestAnyOf) GetDDCs() []PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner {
	if o == nil || IsNil(o.DDCs) {
		var ret []PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner
		return ret
	}
	return o.DDCs
}

// GetDDCsOk returns a tuple with the DDCs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostRedfishV1SFSSInstanceDDCsRequestAnyOf) GetDDCsOk() ([]PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner, bool) {
	if o == nil || IsNil(o.DDCs) {
		return nil, false
	}
	return o.DDCs, true
}

// HasDDCs returns a boolean if a field has been set.
func (o *PostRedfishV1SFSSInstanceDDCsRequestAnyOf) HasDDCs() bool {
	if o != nil && !IsNil(o.DDCs) {
		return true
	}

	return false
}

// SetDDCs gets a reference to the given []PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner and assigns it to the DDCs field.
func (o *PostRedfishV1SFSSInstanceDDCsRequestAnyOf) SetDDCs(v []PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner) {
	o.DDCs = v
}

func (o PostRedfishV1SFSSInstanceDDCsRequestAnyOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostRedfishV1SFSSInstanceDDCsRequestAnyOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DDCs) {
		toSerialize["DDCs"] = o.DDCs
	}
	return toSerialize, nil
}

type NullablePostRedfishV1SFSSInstanceDDCsRequestAnyOf struct {
	value *PostRedfishV1SFSSInstanceDDCsRequestAnyOf
	isSet bool
}

func (v NullablePostRedfishV1SFSSInstanceDDCsRequestAnyOf) Get() *PostRedfishV1SFSSInstanceDDCsRequestAnyOf {
	return v.value
}

func (v *NullablePostRedfishV1SFSSInstanceDDCsRequestAnyOf) Set(val *PostRedfishV1SFSSInstanceDDCsRequestAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullablePostRedfishV1SFSSInstanceDDCsRequestAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullablePostRedfishV1SFSSInstanceDDCsRequestAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostRedfishV1SFSSInstanceDDCsRequestAnyOf(val *PostRedfishV1SFSSInstanceDDCsRequestAnyOf) *NullablePostRedfishV1SFSSInstanceDDCsRequestAnyOf {
	return &NullablePostRedfishV1SFSSInstanceDDCsRequestAnyOf{value: val, isSet: true}
}

func (v NullablePostRedfishV1SFSSInstanceDDCsRequestAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostRedfishV1SFSSInstanceDDCsRequestAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


