/*
RestServices

REST APIs used for managing CDC instances are captured in this section.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sfssrest

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response{}

// GetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response 
type GetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response struct {
	// Type of endpoint; possible values are host and subsystem 
	Role []string `json:"Role"`
	// Possible values include NVMe Qualified Name (NQN) and Fully Qualified Name (FQN)
	ZoneMemberType []string `json:"ZoneMemberType"`
}

type _GetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response GetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response

// NewGetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response instantiates a new GetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response(role []string, zoneMemberType []string) *GetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response {
	this := GetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response{}
	this.Role = role
	this.ZoneMemberType = zoneMemberType
	return &this
}

// NewGetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200ResponseWithDefaults instantiates a new GetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200ResponseWithDefaults() *GetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response {
	this := GetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response{}
	return &this
}

// GetRole returns the Role field value
func (o *GetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response) GetRole() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response) GetRoleOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Role, true
}

// SetRole sets field value
func (o *GetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response) SetRole(v []string) {
	o.Role = v
}

// GetZoneMemberType returns the ZoneMemberType field value
func (o *GetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response) GetZoneMemberType() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ZoneMemberType
}

// GetZoneMemberTypeOk returns a tuple with the ZoneMemberType field value
// and a boolean to check if the value has been set.
func (o *GetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response) GetZoneMemberTypeOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ZoneMemberType, true
}

// SetZoneMemberType sets field value
func (o *GetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response) SetZoneMemberType(v []string) {
	o.ZoneMemberType = v
}

func (o GetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Role"] = o.Role
	toSerialize["ZoneMemberType"] = o.ZoneMemberType
	return toSerialize, nil
}

func (o *GetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"Role",
		"ZoneMemberType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response := _GetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response)

	if err != nil {
		return err
	}

	*o = GetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response(varGetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response)

	return err
}

type NullableGetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response struct {
	value *GetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response
	isSet bool
}

func (v NullableGetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response) Get() *GetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response {
	return v.value
}

func (v *NullableGetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response) Set(val *GetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response(val *GetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response) *NullableGetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response {
	return &NullableGetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response{value: val, isSet: true}
}

func (v NullableGetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRedfishV1SFSSInstanceZoneDBsZoneGroupsZonesZoneMembersEnums200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


