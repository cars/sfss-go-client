/*
RestServices

REST APIs used for managing CDC instances are captured in this section.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sfssrest

import (
	"encoding/json"
)

// checks if the DeleteRedfishV1SFSSInstanceIDDDCs200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteRedfishV1SFSSInstanceIDDDCs200Response{}

// DeleteRedfishV1SFSSInstanceIDDDCs200Response struct for DeleteRedfishV1SFSSInstanceIDDDCs200Response
type DeleteRedfishV1SFSSInstanceIDDDCs200Response struct {
	DDCs []PutRedfishV1SFSSInstanceIDDDCs200Response `json:"DDCs,omitempty"`
}

// NewDeleteRedfishV1SFSSInstanceIDDDCs200Response instantiates a new DeleteRedfishV1SFSSInstanceIDDDCs200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteRedfishV1SFSSInstanceIDDDCs200Response() *DeleteRedfishV1SFSSInstanceIDDDCs200Response {
	this := DeleteRedfishV1SFSSInstanceIDDDCs200Response{}
	return &this
}

// NewDeleteRedfishV1SFSSInstanceIDDDCs200ResponseWithDefaults instantiates a new DeleteRedfishV1SFSSInstanceIDDDCs200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteRedfishV1SFSSInstanceIDDDCs200ResponseWithDefaults() *DeleteRedfishV1SFSSInstanceIDDDCs200Response {
	this := DeleteRedfishV1SFSSInstanceIDDDCs200Response{}
	return &this
}

// GetDDCs returns the DDCs field value if set, zero value otherwise.
func (o *DeleteRedfishV1SFSSInstanceIDDDCs200Response) GetDDCs() []PutRedfishV1SFSSInstanceIDDDCs200Response {
	if o == nil || IsNil(o.DDCs) {
		var ret []PutRedfishV1SFSSInstanceIDDDCs200Response
		return ret
	}
	return o.DDCs
}

// GetDDCsOk returns a tuple with the DDCs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteRedfishV1SFSSInstanceIDDDCs200Response) GetDDCsOk() ([]PutRedfishV1SFSSInstanceIDDDCs200Response, bool) {
	if o == nil || IsNil(o.DDCs) {
		return nil, false
	}
	return o.DDCs, true
}

// HasDDCs returns a boolean if a field has been set.
func (o *DeleteRedfishV1SFSSInstanceIDDDCs200Response) HasDDCs() bool {
	if o != nil && !IsNil(o.DDCs) {
		return true
	}

	return false
}

// SetDDCs gets a reference to the given []PutRedfishV1SFSSInstanceIDDDCs200Response and assigns it to the DDCs field.
func (o *DeleteRedfishV1SFSSInstanceIDDDCs200Response) SetDDCs(v []PutRedfishV1SFSSInstanceIDDDCs200Response) {
	o.DDCs = v
}

func (o DeleteRedfishV1SFSSInstanceIDDDCs200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteRedfishV1SFSSInstanceIDDDCs200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DDCs) {
		toSerialize["DDCs"] = o.DDCs
	}
	return toSerialize, nil
}

type NullableDeleteRedfishV1SFSSInstanceIDDDCs200Response struct {
	value *DeleteRedfishV1SFSSInstanceIDDDCs200Response
	isSet bool
}

func (v NullableDeleteRedfishV1SFSSInstanceIDDDCs200Response) Get() *DeleteRedfishV1SFSSInstanceIDDDCs200Response {
	return v.value
}

func (v *NullableDeleteRedfishV1SFSSInstanceIDDDCs200Response) Set(val *DeleteRedfishV1SFSSInstanceIDDDCs200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteRedfishV1SFSSInstanceIDDDCs200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteRedfishV1SFSSInstanceIDDDCs200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteRedfishV1SFSSInstanceIDDDCs200Response(val *DeleteRedfishV1SFSSInstanceIDDDCs200Response) *NullableDeleteRedfishV1SFSSInstanceIDDDCs200Response {
	return &NullableDeleteRedfishV1SFSSInstanceIDDDCs200Response{value: val, isSet: true}
}

func (v NullableDeleteRedfishV1SFSSInstanceIDDDCs200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteRedfishV1SFSSInstanceIDDDCs200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


