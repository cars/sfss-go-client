/*
RestServices

REST APIs used for managing CDC instances are captured in this section.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sfssrest

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PostRedfishV1SFSSInstanceGlobalPoliciesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostRedfishV1SFSSInstanceGlobalPoliciesRequest{}

// PostRedfishV1SFSSInstanceGlobalPoliciesRequest 
type PostRedfishV1SFSSInstanceGlobalPoliciesRequest struct {
	// Global zoning policy that allows all hosts to communicate with all subsystems; disabled by default
	ZoningPolicy string `json:"ZoningPolicy"`
	// Timeout value to remove endpoints (hosts and subsystems) that have lost connection with the CDC
	NameServerEntityPurgeTOV string `json:"NameServerEntityPurgeTOV"`
}

type _PostRedfishV1SFSSInstanceGlobalPoliciesRequest PostRedfishV1SFSSInstanceGlobalPoliciesRequest

// NewPostRedfishV1SFSSInstanceGlobalPoliciesRequest instantiates a new PostRedfishV1SFSSInstanceGlobalPoliciesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostRedfishV1SFSSInstanceGlobalPoliciesRequest(zoningPolicy string, nameServerEntityPurgeTOV string) *PostRedfishV1SFSSInstanceGlobalPoliciesRequest {
	this := PostRedfishV1SFSSInstanceGlobalPoliciesRequest{}
	this.ZoningPolicy = zoningPolicy
	this.NameServerEntityPurgeTOV = nameServerEntityPurgeTOV
	return &this
}

// NewPostRedfishV1SFSSInstanceGlobalPoliciesRequestWithDefaults instantiates a new PostRedfishV1SFSSInstanceGlobalPoliciesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostRedfishV1SFSSInstanceGlobalPoliciesRequestWithDefaults() *PostRedfishV1SFSSInstanceGlobalPoliciesRequest {
	this := PostRedfishV1SFSSInstanceGlobalPoliciesRequest{}
	return &this
}

// GetZoningPolicy returns the ZoningPolicy field value
func (o *PostRedfishV1SFSSInstanceGlobalPoliciesRequest) GetZoningPolicy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ZoningPolicy
}

// GetZoningPolicyOk returns a tuple with the ZoningPolicy field value
// and a boolean to check if the value has been set.
func (o *PostRedfishV1SFSSInstanceGlobalPoliciesRequest) GetZoningPolicyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ZoningPolicy, true
}

// SetZoningPolicy sets field value
func (o *PostRedfishV1SFSSInstanceGlobalPoliciesRequest) SetZoningPolicy(v string) {
	o.ZoningPolicy = v
}

// GetNameServerEntityPurgeTOV returns the NameServerEntityPurgeTOV field value
func (o *PostRedfishV1SFSSInstanceGlobalPoliciesRequest) GetNameServerEntityPurgeTOV() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NameServerEntityPurgeTOV
}

// GetNameServerEntityPurgeTOVOk returns a tuple with the NameServerEntityPurgeTOV field value
// and a boolean to check if the value has been set.
func (o *PostRedfishV1SFSSInstanceGlobalPoliciesRequest) GetNameServerEntityPurgeTOVOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NameServerEntityPurgeTOV, true
}

// SetNameServerEntityPurgeTOV sets field value
func (o *PostRedfishV1SFSSInstanceGlobalPoliciesRequest) SetNameServerEntityPurgeTOV(v string) {
	o.NameServerEntityPurgeTOV = v
}

func (o PostRedfishV1SFSSInstanceGlobalPoliciesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostRedfishV1SFSSInstanceGlobalPoliciesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ZoningPolicy"] = o.ZoningPolicy
	toSerialize["NameServerEntityPurgeTOV"] = o.NameServerEntityPurgeTOV
	return toSerialize, nil
}

func (o *PostRedfishV1SFSSInstanceGlobalPoliciesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ZoningPolicy",
		"NameServerEntityPurgeTOV",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostRedfishV1SFSSInstanceGlobalPoliciesRequest := _PostRedfishV1SFSSInstanceGlobalPoliciesRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostRedfishV1SFSSInstanceGlobalPoliciesRequest)

	if err != nil {
		return err
	}

	*o = PostRedfishV1SFSSInstanceGlobalPoliciesRequest(varPostRedfishV1SFSSInstanceGlobalPoliciesRequest)

	return err
}

type NullablePostRedfishV1SFSSInstanceGlobalPoliciesRequest struct {
	value *PostRedfishV1SFSSInstanceGlobalPoliciesRequest
	isSet bool
}

func (v NullablePostRedfishV1SFSSInstanceGlobalPoliciesRequest) Get() *PostRedfishV1SFSSInstanceGlobalPoliciesRequest {
	return v.value
}

func (v *NullablePostRedfishV1SFSSInstanceGlobalPoliciesRequest) Set(val *PostRedfishV1SFSSInstanceGlobalPoliciesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostRedfishV1SFSSInstanceGlobalPoliciesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostRedfishV1SFSSInstanceGlobalPoliciesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostRedfishV1SFSSInstanceGlobalPoliciesRequest(val *PostRedfishV1SFSSInstanceGlobalPoliciesRequest) *NullablePostRedfishV1SFSSInstanceGlobalPoliciesRequest {
	return &NullablePostRedfishV1SFSSInstanceGlobalPoliciesRequest{value: val, isSet: true}
}

func (v NullablePostRedfishV1SFSSInstanceGlobalPoliciesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostRedfishV1SFSSInstanceGlobalPoliciesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


