/*
RestServices

REST APIs used for managing CDC instances are captured in this section.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sfssrest

import (
	"encoding/json"
)

// checks if the PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner{}

// PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner struct for PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner
type PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner struct {
	TransportAddress *string `json:"TransportAddress,omitempty"`
	TransportAddressFamily *string `json:"TransportAddressFamily,omitempty"`
	PortId *int32 `json:"PortId,omitempty"`
	TransportType *string `json:"TransportType,omitempty"`
	Activate *bool `json:"Activate,omitempty"`
}

// NewPostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner instantiates a new PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner() *PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner {
	this := PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner{}
	return &this
}

// NewPostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInnerWithDefaults instantiates a new PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInnerWithDefaults() *PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner {
	this := PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner{}
	return &this
}

// GetTransportAddress returns the TransportAddress field value if set, zero value otherwise.
func (o *PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner) GetTransportAddress() string {
	if o == nil || IsNil(o.TransportAddress) {
		var ret string
		return ret
	}
	return *o.TransportAddress
}

// GetTransportAddressOk returns a tuple with the TransportAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner) GetTransportAddressOk() (*string, bool) {
	if o == nil || IsNil(o.TransportAddress) {
		return nil, false
	}
	return o.TransportAddress, true
}

// HasTransportAddress returns a boolean if a field has been set.
func (o *PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner) HasTransportAddress() bool {
	if o != nil && !IsNil(o.TransportAddress) {
		return true
	}

	return false
}

// SetTransportAddress gets a reference to the given string and assigns it to the TransportAddress field.
func (o *PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner) SetTransportAddress(v string) {
	o.TransportAddress = &v
}

// GetTransportAddressFamily returns the TransportAddressFamily field value if set, zero value otherwise.
func (o *PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner) GetTransportAddressFamily() string {
	if o == nil || IsNil(o.TransportAddressFamily) {
		var ret string
		return ret
	}
	return *o.TransportAddressFamily
}

// GetTransportAddressFamilyOk returns a tuple with the TransportAddressFamily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner) GetTransportAddressFamilyOk() (*string, bool) {
	if o == nil || IsNil(o.TransportAddressFamily) {
		return nil, false
	}
	return o.TransportAddressFamily, true
}

// HasTransportAddressFamily returns a boolean if a field has been set.
func (o *PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner) HasTransportAddressFamily() bool {
	if o != nil && !IsNil(o.TransportAddressFamily) {
		return true
	}

	return false
}

// SetTransportAddressFamily gets a reference to the given string and assigns it to the TransportAddressFamily field.
func (o *PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner) SetTransportAddressFamily(v string) {
	o.TransportAddressFamily = &v
}

// GetPortId returns the PortId field value if set, zero value otherwise.
func (o *PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner) GetPortId() int32 {
	if o == nil || IsNil(o.PortId) {
		var ret int32
		return ret
	}
	return *o.PortId
}

// GetPortIdOk returns a tuple with the PortId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner) GetPortIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PortId) {
		return nil, false
	}
	return o.PortId, true
}

// HasPortId returns a boolean if a field has been set.
func (o *PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner) HasPortId() bool {
	if o != nil && !IsNil(o.PortId) {
		return true
	}

	return false
}

// SetPortId gets a reference to the given int32 and assigns it to the PortId field.
func (o *PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner) SetPortId(v int32) {
	o.PortId = &v
}

// GetTransportType returns the TransportType field value if set, zero value otherwise.
func (o *PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner) GetTransportType() string {
	if o == nil || IsNil(o.TransportType) {
		var ret string
		return ret
	}
	return *o.TransportType
}

// GetTransportTypeOk returns a tuple with the TransportType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner) GetTransportTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TransportType) {
		return nil, false
	}
	return o.TransportType, true
}

// HasTransportType returns a boolean if a field has been set.
func (o *PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner) HasTransportType() bool {
	if o != nil && !IsNil(o.TransportType) {
		return true
	}

	return false
}

// SetTransportType gets a reference to the given string and assigns it to the TransportType field.
func (o *PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner) SetTransportType(v string) {
	o.TransportType = &v
}

// GetActivate returns the Activate field value if set, zero value otherwise.
func (o *PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner) GetActivate() bool {
	if o == nil || IsNil(o.Activate) {
		var ret bool
		return ret
	}
	return *o.Activate
}

// GetActivateOk returns a tuple with the Activate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner) GetActivateOk() (*bool, bool) {
	if o == nil || IsNil(o.Activate) {
		return nil, false
	}
	return o.Activate, true
}

// HasActivate returns a boolean if a field has been set.
func (o *PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner) HasActivate() bool {
	if o != nil && !IsNil(o.Activate) {
		return true
	}

	return false
}

// SetActivate gets a reference to the given bool and assigns it to the Activate field.
func (o *PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner) SetActivate(v bool) {
	o.Activate = &v
}

func (o PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TransportAddress) {
		toSerialize["TransportAddress"] = o.TransportAddress
	}
	if !IsNil(o.TransportAddressFamily) {
		toSerialize["TransportAddressFamily"] = o.TransportAddressFamily
	}
	if !IsNil(o.PortId) {
		toSerialize["PortId"] = o.PortId
	}
	if !IsNil(o.TransportType) {
		toSerialize["TransportType"] = o.TransportType
	}
	if !IsNil(o.Activate) {
		toSerialize["Activate"] = o.Activate
	}
	return toSerialize, nil
}

type NullablePostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner struct {
	value *PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner
	isSet bool
}

func (v NullablePostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner) Get() *PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner {
	return v.value
}

func (v *NullablePostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner) Set(val *PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner(val *PostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner) *NullablePostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner {
	return &NullablePostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner{value: val, isSet: true}
}

func (v NullablePostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostRedfishV1SFSSInstanceDDCsRequestAnyOfDDCsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


