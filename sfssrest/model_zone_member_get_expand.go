/*
RestServices

REST APIs used for managing CDC instances are captured in this section.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sfssrest

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ZoneMemberGETEXPAND type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ZoneMemberGETEXPAND{}

// ZoneMemberGETEXPAND This model lists detailed information about all the configured zone members.
type ZoneMemberGETEXPAND struct {
	// A set of zone members
	ZoneMembers []ZoneMemberGETEXPANDZoneMembersInner `json:"ZoneMembers"`
	// Number of zone members
	ZoneMembersodataCount float32 `json:"ZoneMembers@odata.count"`
	OdataId string `json:"@odata.id"`
	OdataContext string `json:"@odata.context"`
	OdataType string `json:"@odata.type"`
}

type _ZoneMemberGETEXPAND ZoneMemberGETEXPAND

// NewZoneMemberGETEXPAND instantiates a new ZoneMemberGETEXPAND object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewZoneMemberGETEXPAND(zoneMembers []ZoneMemberGETEXPANDZoneMembersInner, zoneMembersodataCount float32, odataId string, odataContext string, odataType string) *ZoneMemberGETEXPAND {
	this := ZoneMemberGETEXPAND{}
	this.ZoneMembers = zoneMembers
	this.ZoneMembersodataCount = zoneMembersodataCount
	this.OdataId = odataId
	this.OdataContext = odataContext
	this.OdataType = odataType
	return &this
}

// NewZoneMemberGETEXPANDWithDefaults instantiates a new ZoneMemberGETEXPAND object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewZoneMemberGETEXPANDWithDefaults() *ZoneMemberGETEXPAND {
	this := ZoneMemberGETEXPAND{}
	return &this
}

// GetZoneMembers returns the ZoneMembers field value
func (o *ZoneMemberGETEXPAND) GetZoneMembers() []ZoneMemberGETEXPANDZoneMembersInner {
	if o == nil {
		var ret []ZoneMemberGETEXPANDZoneMembersInner
		return ret
	}

	return o.ZoneMembers
}

// GetZoneMembersOk returns a tuple with the ZoneMembers field value
// and a boolean to check if the value has been set.
func (o *ZoneMemberGETEXPAND) GetZoneMembersOk() ([]ZoneMemberGETEXPANDZoneMembersInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.ZoneMembers, true
}

// SetZoneMembers sets field value
func (o *ZoneMemberGETEXPAND) SetZoneMembers(v []ZoneMemberGETEXPANDZoneMembersInner) {
	o.ZoneMembers = v
}

// GetZoneMembersodataCount returns the ZoneMembersodataCount field value
func (o *ZoneMemberGETEXPAND) GetZoneMembersodataCount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ZoneMembersodataCount
}

// GetZoneMembersodataCountOk returns a tuple with the ZoneMembersodataCount field value
// and a boolean to check if the value has been set.
func (o *ZoneMemberGETEXPAND) GetZoneMembersodataCountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ZoneMembersodataCount, true
}

// SetZoneMembersodataCount sets field value
func (o *ZoneMemberGETEXPAND) SetZoneMembersodataCount(v float32) {
	o.ZoneMembersodataCount = v
}

// GetOdataId returns the OdataId field value
func (o *ZoneMemberGETEXPAND) GetOdataId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OdataId
}

// GetOdataIdOk returns a tuple with the OdataId field value
// and a boolean to check if the value has been set.
func (o *ZoneMemberGETEXPAND) GetOdataIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OdataId, true
}

// SetOdataId sets field value
func (o *ZoneMemberGETEXPAND) SetOdataId(v string) {
	o.OdataId = v
}

// GetOdataContext returns the OdataContext field value
func (o *ZoneMemberGETEXPAND) GetOdataContext() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OdataContext
}

// GetOdataContextOk returns a tuple with the OdataContext field value
// and a boolean to check if the value has been set.
func (o *ZoneMemberGETEXPAND) GetOdataContextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OdataContext, true
}

// SetOdataContext sets field value
func (o *ZoneMemberGETEXPAND) SetOdataContext(v string) {
	o.OdataContext = v
}

// GetOdataType returns the OdataType field value
func (o *ZoneMemberGETEXPAND) GetOdataType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OdataType
}

// GetOdataTypeOk returns a tuple with the OdataType field value
// and a boolean to check if the value has been set.
func (o *ZoneMemberGETEXPAND) GetOdataTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OdataType, true
}

// SetOdataType sets field value
func (o *ZoneMemberGETEXPAND) SetOdataType(v string) {
	o.OdataType = v
}

func (o ZoneMemberGETEXPAND) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ZoneMemberGETEXPAND) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ZoneMembers"] = o.ZoneMembers
	toSerialize["ZoneMembers@odata.count"] = o.ZoneMembersodataCount
	toSerialize["@odata.id"] = o.OdataId
	toSerialize["@odata.context"] = o.OdataContext
	toSerialize["@odata.type"] = o.OdataType
	return toSerialize, nil
}

func (o *ZoneMemberGETEXPAND) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ZoneMembers",
		"ZoneMembers@odata.count",
		"@odata.id",
		"@odata.context",
		"@odata.type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varZoneMemberGETEXPAND := _ZoneMemberGETEXPAND{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varZoneMemberGETEXPAND)

	if err != nil {
		return err
	}

	*o = ZoneMemberGETEXPAND(varZoneMemberGETEXPAND)

	return err
}

type NullableZoneMemberGETEXPAND struct {
	value *ZoneMemberGETEXPAND
	isSet bool
}

func (v NullableZoneMemberGETEXPAND) Get() *ZoneMemberGETEXPAND {
	return v.value
}

func (v *NullableZoneMemberGETEXPAND) Set(val *ZoneMemberGETEXPAND) {
	v.value = val
	v.isSet = true
}

func (v NullableZoneMemberGETEXPAND) IsSet() bool {
	return v.isSet
}

func (v *NullableZoneMemberGETEXPAND) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableZoneMemberGETEXPAND(val *ZoneMemberGETEXPAND) *NullableZoneMemberGETEXPAND {
	return &NullableZoneMemberGETEXPAND{value: val, isSet: true}
}

func (v NullableZoneMemberGETEXPAND) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableZoneMemberGETEXPAND) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


