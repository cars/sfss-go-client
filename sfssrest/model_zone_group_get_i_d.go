/*
RestServices

REST APIs used for managing CDC instances are captured in this section.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sfssrest

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ZoneGroupGETID type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ZoneGroupGETID{}

// ZoneGroupGETID This model lists the zone group based on the zone group ID.
type ZoneGroupGETID struct {
	// Type of zone database; possible values include Config and Running
	ZoneDBType string `json:"ZoneDBType"`
	// Unique zone group identifier
	ZoneGroupId string `json:"ZoneGroupId"`
	// Zone group name
	ZoneGroupName string `json:"zoneGroupName"`
	// NVMe Qualified Name (NQN) of the CDC instance
	OriginatorNQN string `json:"OriginatorNQN"`
	Type string `json:"Type"`
	ActivateStatus string `json:"ActivateStatus"`
	ActivationState string `json:"ActivationState"`
	// Number of zones within the zonegroup
	NumberZones float32 `json:"NumberZones"`
	OdataId string `json:"@odata.id"`
	OdataType string `json:"@odata.type"`
	OdataContext string `json:"@odata.context"`
}

type _ZoneGroupGETID ZoneGroupGETID

// NewZoneGroupGETID instantiates a new ZoneGroupGETID object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewZoneGroupGETID(zoneDBType string, zoneGroupId string, zoneGroupName string, originatorNQN string, type_ string, activateStatus string, activationState string, numberZones float32, odataId string, odataType string, odataContext string) *ZoneGroupGETID {
	this := ZoneGroupGETID{}
	this.ZoneDBType = zoneDBType
	this.ZoneGroupId = zoneGroupId
	this.ZoneGroupName = zoneGroupName
	this.OriginatorNQN = originatorNQN
	this.Type = type_
	this.ActivateStatus = activateStatus
	this.ActivationState = activationState
	this.NumberZones = numberZones
	this.OdataId = odataId
	this.OdataType = odataType
	this.OdataContext = odataContext
	return &this
}

// NewZoneGroupGETIDWithDefaults instantiates a new ZoneGroupGETID object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewZoneGroupGETIDWithDefaults() *ZoneGroupGETID {
	this := ZoneGroupGETID{}
	return &this
}

// GetZoneDBType returns the ZoneDBType field value
func (o *ZoneGroupGETID) GetZoneDBType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ZoneDBType
}

// GetZoneDBTypeOk returns a tuple with the ZoneDBType field value
// and a boolean to check if the value has been set.
func (o *ZoneGroupGETID) GetZoneDBTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ZoneDBType, true
}

// SetZoneDBType sets field value
func (o *ZoneGroupGETID) SetZoneDBType(v string) {
	o.ZoneDBType = v
}

// GetZoneGroupId returns the ZoneGroupId field value
func (o *ZoneGroupGETID) GetZoneGroupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ZoneGroupId
}

// GetZoneGroupIdOk returns a tuple with the ZoneGroupId field value
// and a boolean to check if the value has been set.
func (o *ZoneGroupGETID) GetZoneGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ZoneGroupId, true
}

// SetZoneGroupId sets field value
func (o *ZoneGroupGETID) SetZoneGroupId(v string) {
	o.ZoneGroupId = v
}

// GetZoneGroupName returns the ZoneGroupName field value
func (o *ZoneGroupGETID) GetZoneGroupName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ZoneGroupName
}

// GetZoneGroupNameOk returns a tuple with the ZoneGroupName field value
// and a boolean to check if the value has been set.
func (o *ZoneGroupGETID) GetZoneGroupNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ZoneGroupName, true
}

// SetZoneGroupName sets field value
func (o *ZoneGroupGETID) SetZoneGroupName(v string) {
	o.ZoneGroupName = v
}

// GetOriginatorNQN returns the OriginatorNQN field value
func (o *ZoneGroupGETID) GetOriginatorNQN() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OriginatorNQN
}

// GetOriginatorNQNOk returns a tuple with the OriginatorNQN field value
// and a boolean to check if the value has been set.
func (o *ZoneGroupGETID) GetOriginatorNQNOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OriginatorNQN, true
}

// SetOriginatorNQN sets field value
func (o *ZoneGroupGETID) SetOriginatorNQN(v string) {
	o.OriginatorNQN = v
}

// GetType returns the Type field value
func (o *ZoneGroupGETID) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ZoneGroupGETID) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ZoneGroupGETID) SetType(v string) {
	o.Type = v
}

// GetActivateStatus returns the ActivateStatus field value
func (o *ZoneGroupGETID) GetActivateStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActivateStatus
}

// GetActivateStatusOk returns a tuple with the ActivateStatus field value
// and a boolean to check if the value has been set.
func (o *ZoneGroupGETID) GetActivateStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActivateStatus, true
}

// SetActivateStatus sets field value
func (o *ZoneGroupGETID) SetActivateStatus(v string) {
	o.ActivateStatus = v
}

// GetActivationState returns the ActivationState field value
func (o *ZoneGroupGETID) GetActivationState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActivationState
}

// GetActivationStateOk returns a tuple with the ActivationState field value
// and a boolean to check if the value has been set.
func (o *ZoneGroupGETID) GetActivationStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActivationState, true
}

// SetActivationState sets field value
func (o *ZoneGroupGETID) SetActivationState(v string) {
	o.ActivationState = v
}

// GetNumberZones returns the NumberZones field value
func (o *ZoneGroupGETID) GetNumberZones() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.NumberZones
}

// GetNumberZonesOk returns a tuple with the NumberZones field value
// and a boolean to check if the value has been set.
func (o *ZoneGroupGETID) GetNumberZonesOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumberZones, true
}

// SetNumberZones sets field value
func (o *ZoneGroupGETID) SetNumberZones(v float32) {
	o.NumberZones = v
}

// GetOdataId returns the OdataId field value
func (o *ZoneGroupGETID) GetOdataId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OdataId
}

// GetOdataIdOk returns a tuple with the OdataId field value
// and a boolean to check if the value has been set.
func (o *ZoneGroupGETID) GetOdataIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OdataId, true
}

// SetOdataId sets field value
func (o *ZoneGroupGETID) SetOdataId(v string) {
	o.OdataId = v
}

// GetOdataType returns the OdataType field value
func (o *ZoneGroupGETID) GetOdataType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OdataType
}

// GetOdataTypeOk returns a tuple with the OdataType field value
// and a boolean to check if the value has been set.
func (o *ZoneGroupGETID) GetOdataTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OdataType, true
}

// SetOdataType sets field value
func (o *ZoneGroupGETID) SetOdataType(v string) {
	o.OdataType = v
}

// GetOdataContext returns the OdataContext field value
func (o *ZoneGroupGETID) GetOdataContext() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OdataContext
}

// GetOdataContextOk returns a tuple with the OdataContext field value
// and a boolean to check if the value has been set.
func (o *ZoneGroupGETID) GetOdataContextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OdataContext, true
}

// SetOdataContext sets field value
func (o *ZoneGroupGETID) SetOdataContext(v string) {
	o.OdataContext = v
}

func (o ZoneGroupGETID) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ZoneGroupGETID) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ZoneDBType"] = o.ZoneDBType
	toSerialize["ZoneGroupId"] = o.ZoneGroupId
	toSerialize["zoneGroupName"] = o.ZoneGroupName
	toSerialize["OriginatorNQN"] = o.OriginatorNQN
	toSerialize["Type"] = o.Type
	toSerialize["ActivateStatus"] = o.ActivateStatus
	toSerialize["ActivationState"] = o.ActivationState
	toSerialize["NumberZones"] = o.NumberZones
	toSerialize["@odata.id"] = o.OdataId
	toSerialize["@odata.type"] = o.OdataType
	toSerialize["@odata.context"] = o.OdataContext
	return toSerialize, nil
}

func (o *ZoneGroupGETID) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ZoneDBType",
		"ZoneGroupId",
		"zoneGroupName",
		"OriginatorNQN",
		"Type",
		"ActivateStatus",
		"ActivationState",
		"NumberZones",
		"@odata.id",
		"@odata.type",
		"@odata.context",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varZoneGroupGETID := _ZoneGroupGETID{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varZoneGroupGETID)

	if err != nil {
		return err
	}

	*o = ZoneGroupGETID(varZoneGroupGETID)

	return err
}

type NullableZoneGroupGETID struct {
	value *ZoneGroupGETID
	isSet bool
}

func (v NullableZoneGroupGETID) Get() *ZoneGroupGETID {
	return v.value
}

func (v *NullableZoneGroupGETID) Set(val *ZoneGroupGETID) {
	v.value = val
	v.isSet = true
}

func (v NullableZoneGroupGETID) IsSet() bool {
	return v.isSet
}

func (v *NullableZoneGroupGETID) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableZoneGroupGETID(val *ZoneGroupGETID) *NullableZoneGroupGETID {
	return &NullableZoneGroupGETID{value: val, isSet: true}
}

func (v NullableZoneGroupGETID) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableZoneGroupGETID) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


