openapi: 3.1.0
info:
  description: REST APIs used for managing CDC instances are captured in this section.
  title: RestServices
  version: "1.0"
servers:
- url: http://IPAddress
security:
- API Key - 1: []
paths:
  /redfish/v1/SFSS/{InstanceID}/Hosts:
    get:
      description: This API retrieves a list of hosts that are registered with the
        CDC instance.
      operationId: get-redfish-v1-SFSS-Instance#-Hosts
      parameters:
      - description: Optional query param to fetch from config DB
        explode: true
        in: query
        name: ?$source=config
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    Hosts:
                    - '@odata.id': /redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@11.22.33.44:V4::0:0:TCP')
                    - '@odata.id': /redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:V4::0:0:TCP')
                    - '@odata.id': /redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@4.4.4.4:V4::0:0:TCP')
                    Hosts@odata.count: 3
                    '@odata.id': /redfish/v1/SFSS/1/Hosts
                    '@odata.context': /redfish/v1/SFSS/1/$metadata#Hosts
                    '@odata.type': "#HostsCollection.HostsCollection"
              schema:
                $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__Hosts_200_response"
          description: OK
      security:
      - basic: []
      summary: Get all hosts
      tags: []
    parameters:
    - explode: false
      in: path
      name: InstanceID
      required: true
      schema:
        default: 1
        format: int32
        maximum: 32
        minimum: 1
        type: integer
      style: simple
    post:
      description: This API allows you to manually create a host entry in the specified
        CDC instance for troubleshooting purposes.
      operationId: post-redfish-v1-SFSS-Instance#-Hosts
      parameters:
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  NQN: nqn.2014-08.org.nvmexpress:uuid:host
                  TransportAddress: 11.22.33.44
                  TransportAddressFamily: IPV4
                  TransportType: TCP
            schema:
              $ref: "#/components/schemas/post_redfish_v1_SFSS_Instance__Hosts_request"
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    Id: nqn.2014-08.org.nvmexpress:uuid:host@11.22.33.44:V4::0:0:TCP
              schema:
                $ref: "#/components/schemas/post_redfish_v1_SFSS_Instance__Hosts_200_response"
          description: OK
      security:
      - basic: []
      summary: Add host
      tags: []
  /redfish/v1/SFSS/{InstanceID}/Hosts({Id}):
    delete:
      description: 'This API removes a host from a CDC instance based on the specified
        CDC instance and host identifiers. '
      operationId: delete-redfish-v1-SFSS-Instance#-Hosts-Id)
      parameters:
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      - explode: false
        in: path
        name: Id
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          description: OK
      summary: Delete host
    get:
      description: This API retrieves detailed information about a host from a CDC
        instance based on the specified CDC instance and host identifiers.
      operationId: get-redfish-v1-SFSS-Instance#-Hosts-Id
      parameters:
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      - explode: false
        in: path
        name: Id
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    Id: nqn.2014-08.org.nvmexpress:uuid:host@4.4.4.4:V4::0:0:TCP
                    NQN: nqn.2014-08.org.nvmexpress:uuid:host
                    TransportAddress: 4.4.4.4
                    TransportAddressFamily: IPV4
                    TransportType: TCP
                    TREQ: Secure channel Not specified
                    TSAS: No Security
                    RegistrationType: Manual
                    ConnectionStatus: Offline
                    FailureReason: NONE
                    '@odata.id': /redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@4.4.4.4:V4::0:0:TCP')
                    '@odata.type': "#Hosts.Hosts"
                    '@odata.context': /redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity
              schema:
                $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__Hosts_Id_200_response"
          description: OK
      security:
      - basic: []
      summary: Get specific host
      tags: []
    parameters:
    - explode: false
      in: path
      name: InstanceID
      required: true
      schema:
        default: 1
        format: int32
        maximum: 32
        minimum: 1
        type: integer
      style: simple
    - explode: false
      in: path
      name: Id
      required: true
      schema:
        default: 1
        format: int32
        maximum: 32
        minimum: 1
        type: integer
      style: simple
  /redfish/v1/SFSS/{InstanceID}/Hosts2:
    get:
      description: This API retrieves detailed information about a list of hosts that
        are registered with the specified CDC instance.
      operationId: get-https:-IP-redfish-v1-SFSS-Instance#-Hosts?$expand=Hosts
      parameters:
      - description: Helps to skip records
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          type: integer
        style: form
      - description: "Filter based on the  eq conditions: ex: TransportAddress eq\
          \ 11.22.33.44 or TransportAddress eq 1.2.3.4"
        explode: true
        in: query
        name: $filter
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: $expand
        required: true
        schema:
          default: Hosts
          type: string
        style: form
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    Hosts:
                    - Id: nqn.2014-08.org.nvmexpress:uuid:host@11.22.33.44:V4::0:0:TCP
                      NQN: nqn.2014-08.org.nvmexpress:uuid:host
                      TransportAddress: 11.22.33.44
                      TransportAddressFamily: IPV4
                      TransportType: TCP
                      TREQ: Secure channel Not specified
                      TSAS: No Security
                      RegistrationType: Manual
                      ConnectionStatus: Offline
                      FailureReason: NONE
                      '@odata.id': /redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@11.22.33.44:V4::0:0:TCP')
                      '@odata.type': "#Hosts.Hosts"
                      '@odata.context': /redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity
                    - Id: nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:V4::0:0:TCP
                      NQN: nqn.2014-08.org.nvmexpress:uuid:host
                      TransportAddress: 1.2.3.4
                      TransportAddressFamily: IPV4
                      TransportType: TCP
                      TREQ: Secure channel Not specified
                      TSAS: No Security
                      RegistrationType: Manual
                      ConnectionStatus: Offline
                      FailureReason: NONE
                      '@odata.id': /redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:V4::0:0:TCP')
                      '@odata.type': "#Hosts.Hosts"
                      '@odata.context': /redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity
                    - Id: nqn.2014-08.org.nvmexpress:uuid:host@4.4.4.4:V4::0:0:TCP
                      NQN: nqn.2014-08.org.nvmexpress:uuid:host
                      TransportAddress: 4.4.4.4
                      TransportAddressFamily: IPV4
                      TransportType: TCP
                      TREQ: Secure channel Not specified
                      TSAS: No Security
                      RegistrationType: Manual
                      ConnectionStatus: Offline
                      FailureReason: NONE
                      '@odata.id': /redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@4.4.4.4:V4::0:0:TCP')
                      '@odata.type': "#Hosts.Hosts"
                      '@odata.context': /redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity
                    Hosts@odata.count: 3
                    '@odata.id': /redfish/v1/SFSS/1/Hosts?$expand=Hosts
                    '@odata.context': /redfish/v1/SFSS/1/$metadata#Hosts
                    '@odata.type': "#HostsCollection.HostsCollection"
                example-2:
                  value:
                    Hosts:
                    - Id: nqn.2014-08.org.nvmexpress:uuid:host@11.22.33.44:V4::0:0:TCP
                      NQN: nqn.2014-08.org.nvmexpress:uuid:host
                      TransportAddress: 11.22.33.44
                      TransportAddressFamily: IPV4
                      TransportType: TCP
                      TREQ: Secure channel Not specified
                      TSAS: No Security
                      RegistrationType: Manual
                      ConnectionStatus: Offline
                      FailureReason: NONE
                      '@odata.id': /redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@11.22.33.44:V4::0:0:TCP')
                      '@odata.type': "#Hosts.Hosts"
                      '@odata.context': /redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity
                    - Id: nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:V4::0:0:TCP
                      NQN: nqn.2014-08.org.nvmexpress:uuid:host
                      TransportAddress: 1.2.3.4
                      TransportAddressFamily: IPV4
                      TransportType: TCP
                      TREQ: Secure channel Not specified
                      TSAS: No Security
                      RegistrationType: Manual
                      ConnectionStatus: Offline
                      FailureReason: NONE
                      '@odata.id': /redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:V4::0:0:TCP')
                      '@odata.type': "#Hosts.Hosts"
                      '@odata.context': /redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity
                    Hosts@odata.count: 2
                    '@odata.id': /redfish/v1/SFSS/1/Hosts?$expand=Hosts&$filter=TransportAddress%20eq%2011.22.33.44%20or%20TransportAddress%20eq%201.2.3.4
                    '@odata.context': /redfish/v1/SFSS/1/$metadata#Hosts
                    '@odata.type': "#HostsCollection.HostsCollection"
              schema:
                $ref: "#/components/schemas/get_https__IP_redfish_v1_SFSS_Instance__Hosts__expand_Hosts_200_response"
          description: OK
      security:
      - basic: []
      summary: Get detailed host information
      tags: []
  /redfish/v1/SFSS/{InstanceID}/Subsystems({Id}):
    delete:
      description: This API removes a subsystem from a CDC instance based on the specified
        CDC instance and subsystem identifiers.
      operationId: delete-redfish-v1-SFSS-Instance#-Subsystems('Id')
      parameters:
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      - explode: false
        in: path
        name: Id
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          description: OK
      summary: Delete subsystem
    get:
      description: This API retrieves detailed information about a subsystem based
        on the specified subsystem identifier.
      operationId: get-redfish-v1-SFSS-Instance#-Subsystems('Id')
      parameters:
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      - explode: false
        in: path
        name: Id
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    Id: nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:900:0:0:TCP
                    NQN: nqn.2014-08.org.nvmexpress:uuid:subsystem
                    TransportAddress: 3.3.3.3
                    TransportAddressFamily: IPV4
                    PortId: 5453
                    ControllerId: 65535
                    TransportType: TCP
                    SubType: NVM Subsystem
                    TREQ: Secure channel Not specified
                    ASQZ: 32
                    TransportServiceId: "900"
                    TSAS: No Security
                    RcvdGenCounter: 0
                    RegistrationType: Manual
                    ConnectionStatus: Offline
                    EKType: TRADDR
                    '@odata.id': /redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:900:0:0:TCP')
                    '@odata.type': "#Subsystems.Subsystems"
                    '@odata.context': /redfish/v1/SFSS/1/$metadata#Subsystems/Subsystems/$entity
              schema:
                $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__Subsystems__Id___200_response"
          description: OK
      security:
      - basic: []
      summary: Get specific subsystem
      tags: []
    parameters:
    - explode: false
      in: path
      name: InstanceID
      required: true
      schema:
        default: 1
        format: int32
        maximum: 32
        minimum: 1
        type: integer
      style: simple
    - explode: false
      in: path
      name: Id
      required: true
      schema:
        default: 1
        format: int32
        maximum: 32
        minimum: 1
        type: integer
      style: simple
  /redfish/v1/SFSS/{InstanceID}/Subsystems:
    get:
      description: This API retrieves a list of subsystems that are registered with
        the specified CDC instance.
      operationId: get-redfish-v1-SFSS-Instance#-Subsystems
      parameters:
      - description: This is an optional param to fetch the details from config DB.
        explode: true
        in: query
        name: ?$source=config
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    Subsystems:
                    - '@odata.id': /redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@2.2.2.2:V4:600:0:0:TCP')
                    - '@odata.id': /redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:400:0:0:TCP')
                    - '@odata.id': /redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@1.1.1.1:V4:900:0:0:TCP')
                    Subsystems@odata.count: 3
                    '@odata.id': /redfish/v1/SFSS/1/Subsystems
                    '@odata.context': /redfish/v1/SFSS/1/$metadata#Subsystems
                    '@odata.type': "#SubsystemsCollection.SubsystemsCollection"
              schema:
                $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__Subsystems_200_response"
          description: OK
      security:
      - basic: []
      summary: Get all subsystems
      tags: []
    parameters:
    - description: This is an optional param to fetch the details from config DB.
      explode: true
      in: query
      name: ?$source=config
      required: false
      schema:
        type: string
      style: form
    - explode: false
      in: path
      name: InstanceID
      required: true
      schema:
        default: 1
        format: int32
        maximum: 32
        minimum: 1
        type: integer
      style: simple
    post:
      description: This API allows you to manually create a subsystem entry in the
        specified CDC instance for troubleshooting purposes.
      operationId: post-redfish-v1-SFSS-Instance#-Subsystems
      parameters:
      - description: This is an optional param to fetch the details from config DB.
        explode: true
        in: query
        name: ?$source=config
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  NQN: nqn.2014-08.org.nvmexpress:uuid:subsystem
                  TransportAddress: 1.1.1.1
                  TransportAddressFamily: IPV4
                  PortId: 5450
                  TransportType: TCP
                  TransportServiceId: "900"
            schema:
              $ref: "#/components/schemas/post_redfish_v1_SFSS_Instance__Subsystems_request"
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    Id: nqn.2014-08.org.nvmexpress:uuid:subsystem@1.1.1.1:V4:900:0:0:TCP
              schema:
                $ref: "#/components/schemas/post_redfish_v1_SFSS_Instance__Subsystems_200_response"
          description: OK
      security:
      - basic: []
      summary: Add subsystem
  /redfish/v1/SFSS/{InstanceID}/Hosts/Enums:
    get:
      description: This API retrieves a list of all supported enumerations for the
        host configuration.
      operationId: get-https:-IP-redfish-v1-SFSS-Instance#-Hosts-Enums
      parameters:
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    TransportAddressFamily:
                    - IPV4
                    - IPV6
                    EKType:
                    - Port
                    - TRADDR
                    FailureReason:
                    - NONE
                    - KATO
                    - Peer Closure
                    RegistrationType:
                    - Implicit
                    - Explicit
                    - Pull
                    - Manual
                    ConnectionStatus:
                    - Offline
                    - Online
                    TREQ:
                    - Secure channel Not specified
                    - Secure Channel Required
                    - Secure Channel Not required
                    TransportType:
                    - TCP
                    TSAS:
                    - No Security
                    - TLS
              schema:
                $ref: "#/components/schemas/get_https__IP_redfish_v1_SFSS_Instance__Hosts_Enums_200_response"
          description: OK
      security:
      - basic: []
      summary: Get host enums
      tags: []
  /redfish/v1/SFSS/{InstanceID}/Subsystems?$expand=Subsystems:
    get:
      description: This API retrieves detailed information about a list of subsystems
        that are registered with the specified CDC instance.
      operationId: get-redfish-v1-SFSS-Instance#-Subsystems?$expand=Subsystems
      parameters:
      - description: Optional query param to filer based on the eq condition.
        explode: true
        in: query
        name: '&$filter=TransportAddress eq 1.1.1.1 or TransportAddress eq 3.3.3.3'
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    Subsystems:
                    - Id: nqn.2014-08.org.nvmexpress:uuid:subsystem@1.1.1.1:V4:900:0:0:TCP
                      NQN: nqn.2014-08.org.nvmexpress:uuid:subsystem
                      TransportAddress: 1.1.1.1
                      TransportAddressFamily: IPV4
                      PortId: 5450
                      ControllerId: 65535
                      TransportType: TCP
                      SubType: NVM Subsystem
                      TREQ: Secure channel Not specified
                      ASQZ: 32
                      TransportServiceId: "900"
                      TSAS: No Security
                      RcvdGenCounter: 0
                      RegistrationType: Manual
                      ConnectionStatus: Offline
                      EKType: TRADDR
                      '@odata.id': /redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@1.1.1.1:V4:900:0:0:TCP')
                      '@odata.type': "#Subsystems.Subsystems"
                      '@odata.context': /redfish/v1/SFSS/1/$metadata#Subsystems/Subsystems/$entity
                    - Id: nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:900:0:0:TCP
                      NQN: nqn.2014-08.org.nvmexpress:uuid:subsystem
                      TransportAddress: 3.3.3.3
                      TransportAddressFamily: IPV4
                      PortId: 5453
                      ControllerId: 65535
                      TransportType: TCP
                      SubType: NVM Subsystem
                      TREQ: Secure channel Not specified
                      ASQZ: 32
                      TransportServiceId: "900"
                      TSAS: No Security
                      RcvdGenCounter: 0
                      RegistrationType: Manual
                      ConnectionStatus: Offline
                      EKType: TRADDR
                      '@odata.id': /redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:900:0:0:TCP')
                      '@odata.type': "#Subsystems.Subsystems"
                      '@odata.context': /redfish/v1/SFSS/1/$metadata#Subsystems/Subsystems/$entity
                    - Id: nqn.2014-08.org.nvmexpress:uuid:subsystem@2.2.2.2:V4:900:0:0:TCP
                      NQN: nqn.2014-08.org.nvmexpress:uuid:subsystem
                      TransportAddress: 2.2.2.2
                      TransportAddressFamily: IPV4
                      PortId: 5452
                      ControllerId: 65535
                      TransportType: TCP
                      SubType: NVM Subsystem
                      TREQ: Secure channel Not specified
                      ASQZ: 32
                      TransportServiceId: "900"
                      TSAS: No Security
                      RcvdGenCounter: 0
                      RegistrationType: Manual
                      ConnectionStatus: Offline
                      EKType: TRADDR
                      '@odata.id': /redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@2.2.2.2:V4:900:0:0:TCP')
                      '@odata.type': "#Subsystems.Subsystems"
                      '@odata.context': /redfish/v1/SFSS/1/$metadata#Subsystems/Subsystems/$entity
                    Subsystems@odata.count: 3
                    '@odata.id': /redfish/v1/SFSS/1/Subsystems?$expand=Subsystems
                    '@odata.context': /redfish/v1/SFSS/1/$metadata#Subsystems
                    '@odata.type': "#SubsystemsCollection.SubsystemsCollection"
                'Filtering based on the condition :  $filter=TransportAddress eq 1.1.1.1 or TransportAddress eq 3.3.3.3':
                  value:
                    Subsystems:
                    - Id: nqn.2014-08.org.nvmexpress:uuid:subsystem@1.1.1.1:V4:900:0:0:TCP
                      NQN: nqn.2014-08.org.nvmexpress:uuid:subsystem
                      TransportAddress: 1.1.1.1
                      TransportAddressFamily: IPV4
                      PortId: 5450
                      ControllerId: 65535
                      TransportType: TCP
                      SubType: NVM Subsystem
                      TREQ: Secure channel Not specified
                      ASQZ: 32
                      TransportServiceId: "900"
                      TSAS: No Security
                      RcvdGenCounter: 0
                      RegistrationType: Manual
                      ConnectionStatus: Offline
                      EKType: TRADDR
                      '@odata.id': /redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@1.1.1.1:V4:900:0:0:TCP')
                      '@odata.type': "#Subsystems.Subsystems"
                      '@odata.context': /redfish/v1/SFSS/1/$metadata#Subsystems/Subsystems/$entity
                    - Id: nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:900:0:0:TCP
                      NQN: nqn.2014-08.org.nvmexpress:uuid:subsystem
                      TransportAddress: 3.3.3.3
                      TransportAddressFamily: IPV4
                      PortId: 5453
                      ControllerId: 65535
                      TransportType: TCP
                      SubType: NVM Subsystem
                      TREQ: Secure channel Not specified
                      ASQZ: 32
                      TransportServiceId: "900"
                      TSAS: No Security
                      RcvdGenCounter: 0
                      RegistrationType: Manual
                      ConnectionStatus: Offline
                      EKType: TRADDR
                      '@odata.id': /redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:900:0:0:TCP')
                      '@odata.type': "#Subsystems.Subsystems"
                      '@odata.context': /redfish/v1/SFSS/1/$metadata#Subsystems/Subsystems/$entity
                    Subsystems@odata.count: 2
                    '@odata.id': /redfish/v1/SFSS/1/Subsystems?$expand=Subsystems&$filter=TransportAddress%20eq%201.1.1.1%20or%20TransportAddress%20eq%203.3.3.3
                    '@odata.context': /redfish/v1/SFSS/1/$metadata#Subsystems
                    '@odata.type': "#SubsystemsCollection.SubsystemsCollection"
              schema:
                $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__Subsystems__expand_Subsystems_200_response"
          description: OK
      security:
      - basic: []
      summary: Get detailed subsystem information
      tags: []
  /redfish/v1/SFSS/{InstanceID}/Subsystems/Enums:
    get:
      description: 'This API retrieves a list of all supported enumerations for the
        subsystem configuration. '
      operationId: get-redfish-v1-SFSS-Instance#-Subsystems-Enums
      parameters:
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    TransportAddressFamily:
                    - IPV4
                    - IPV6
                    EKType:
                    - Port
                    - TRADDR
                    FailureReason:
                    - NONE
                    - KATO
                    - Peer Closure
                    RegistrationType:
                    - Implicit
                    - Explicit
                    - Pull
                    - Manual
                    ConnectionStatus:
                    - Offline
                    - Online
                    SubType:
                    - Reserved
                    - Discovery Service
                    - NVM Subsystem
                    TREQ:
                    - Secure channel Not specified
                    - Secure Channel Required
                    - Secure Channel Not required
                    TransportType:
                    - TCP
                    TSAS:
                    - No Security
                    - TLS
              schema:
                $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__Subsystems_Enums_200_response"
          description: OK
      security:
      - basic: []
      summary: Get subsystem enums
      tags: []
  /redfish/v1/SFSS/{InstanceID}/DDCs:
    delete:
      description: This API removes the specified DDCs from the CDC instance mentioned
        in this request.
      operationId: delete-redfish-v1-SFSS-InstanceID-DDCs
      parameters:
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    DDCs:
                    - Id: '@100.94.72.1:V4::0:8009:TCP'
                    - Id: '@100.94.72.2:V4::0:4420:TCP'
              schema:
                $ref: "#/components/schemas/delete_redfish_v1_SFSS_InstanceID_DDCs_200_response"
          description: OK
      summary: Delete DDCs
    get:
      description: This API retrieves a list of direct discovery controllers (DDCs)
        configured in the specified CDC instance.
      operationId: get-https:-IP-redfish-v1-SFSS-Instance-#-DDCs
      parameters:
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    DDCs:
                    - '@odata.id': /redfish/v1/SFSS/1/DDCs('@111.111.111.115:V4::0:5450:TCP')
                    DDCs@odata.count: 1
                    '@odata.id': /redfish/v1/SFSS/1/DDCs
                    '@odata.context': /redfish/v1/SFSS/1/$metadata#DDCs
                    '@odata.type': "#DDCsCollection.DDCsCollection"
              schema:
                $ref: "#/components/schemas/get_https__IP_redfish_v1_SFSS_Instance___DDCs_200_response"
          description: OK
      security:
      - basic: []
      summary: Get DDC
      tags: []
    parameters:
    - explode: false
      in: path
      name: InstanceID
      required: true
      schema:
        default: 1
        format: int32
        maximum: 32
        minimum: 1
        type: integer
      style: simple
    post:
      description: 'This API adds direct discovery controllers (DDCs) in the specified
        CDC instance. '
      operationId: post-redfish-v1-SFSS-Instance-#-DDCs
      parameters:
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  TransportAddress: string
                  TransportAddressFamily: string
                  PortId: 0
                  TransportType: string
                  Activate: true
              example-2:
                value:
                  DDCs:
                  - TransportAddress: 100.94.72.1
                    TransportAddressFamily: IPV4
                    PortId: 8009
                    TransportType: TCP
                    Activate: false
                  - TransportAddress: 100.94.72.2
                    TransportAddressFamily: IPV4
                    PortId: 4420
                    TransportType: TCP
                    Activate: true
            schema:
              $ref: "#/components/schemas/post_redfish_v1_SFSS_Instance___DDCs_request"
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    Id: '@111.111.111.115:V4::0:5450:TCP'
                example-2:
                  value:
                    Ids:
                    - Id: '@100.94.72.1:V4::0:8009:TCP'
                    - Id: '@100.94.72.2:V4::0:4420:TCP'
              schema:
                $ref: "#/components/schemas/post_redfish_v1_SFSS_Instance___DDCs_200_response"
          description: OK
      security:
      - basic: []
      summary: Add DDC
    put:
      description: This API updates information about multiple DDCs in the specified
        CDC instance.
      operationId: put-redfish-v1-SFSS-InstanceID-DDCs
      parameters:
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  DDCs:
                  - Id: '@100.94.72.1:V4::0:8009:TCP'
                    Activate: false
                  - Id: '@100.94.72.2:V4::0:4420:TCP'
                    Activate: false
            schema:
              $ref: "#/components/schemas/put_redfish_v1_SFSS_InstanceID_DDCs_request"
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    Ids:
                    - Id: '@100.94.72.1:V4::0:8009:TCP'
                    - Id: '@100.94.72.2:V4::0:4420:TCP'
              schema:
                $ref: "#/components/schemas/put_redfish_v1_SFSS_InstanceID_DDCs_200_response"
          description: OK
      summary: Update DDC
  /redfish/v1/SFSS/{InstanceID}/DDCs({Id}):
    delete:
      description: 'This API removes the specified DDC from the CDC instance mentioned
        in this request. '
      operationId: delete-redfish-v1-SFSS-InstanceID-DDCs('Id')
      parameters:
      - description: The IP address of the specific DDC to be removed must be given.
        explode: true
        in: query
        name: Id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      - explode: false
        in: path
        name: Id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    Id: '@111.111.111.115:V4::0:5450:TCP'
              schema:
                $ref: "#/components/schemas/put_redfish_v1_SFSS_InstanceID_DDCs__Id___200_response"
          description: OK
      summary: Delete DDC
    get:
      description: This API retrieves detailed information about a Direct Discovery
        Controller (DDC) registered with a CDC based on the specified CDC and DDC
        identifiers.
      operationId: get-redfish-v1-SFSS-Instance#-DDCs('Id')
      parameters:
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      - explode: false
        in: path
        name: Id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    Id: '@111.111.111.115:V4::0:5450:TCP'
                    TransportAddress: 111.111.111.115
                    TransportAddressFamily: IPV4
                    PortId: 5450
                    TransportType: TCP
                    Activate: false
                    ConfigType: Manual
                    ConnectionStatus: Offline
                    FailureReason: NONE
                    '@odata.id': /redfish/v1/SFSS/1/DDCs('@111.111.111.115:V4::0:5450:TCP')
                    '@odata.type': "#DDCs.DDCs"
                    '@odata.context': /redfish/v1/SFSS/1/$metadata#DDCs/DDCs/$entity
              schema:
                $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__DDCs__Id___200_response"
          description: OK
      security:
      - basic: []
      summary: Get specific DDC
      tags: []
    parameters:
    - explode: false
      in: path
      name: InstanceID
      required: true
      schema:
        default: 1
        format: int32
        maximum: 32
        minimum: 1
        type: integer
      style: simple
    - explode: false
      in: path
      name: Id
      required: true
      schema:
        format: int32
        type: integer
      style: simple
    put:
      description: This API updates the direct discovery controller (DDC) information
        in the specified CDC instance based on the DDC identifier.
      operationId: put-redfish-v1-SFSS-InstanceID-DDCs('Id')
      parameters:
      - description: The DDC ID to be updated should be given.
        explode: true
        in: query
        name: Id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      - explode: false
        in: path
        name: Id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  Activate: false
            schema:
              $ref: "#/components/schemas/put_redfish_v1_SFSS_InstanceID_DDCs__Id___request"
        description: ""
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    Id: '@111.111.111.115:V4::0:5450:TCP'
              schema:
                $ref: "#/components/schemas/put_redfish_v1_SFSS_InstanceID_DDCs__Id___200_response"
          description: OK
      summary: Update DDC
  /redfish/v1/SFSS/{InstanceID}/DDCs/Enums:
    get:
      description: This API retrieves a list of supported enumerations for DDC configuration.
      operationId: get-redfish-v1-SFSS-Instance#-DDCs-Enums
      parameters:
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    TransportAddressFamily:
                    - IPV4
                    - IPV6
                    ConfigType:
                    - Implicit
                    - Push
                    - Pull
                    - Manual
                    - KDCC
                    FailureReason:
                    - NONE
                    - KATO
                    - Peer Closure
                    ConnectionStatus:
                    - Online
                    - Offline
                    TransportType:
                    - TCP
              schema:
                $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__DDCs_Enums_200_response"
          description: OK
      security:
      - basic: []
      summary: Get DDC enums
      tags: []
    parameters:
    - explode: false
      in: path
      name: InstanceID
      required: true
      schema:
        default: 1
        format: int32
        maximum: 32
        minimum: 1
        type: integer
      style: simple
  /redfish/v1/SFSS/{InstanceID}/CDCInstance?$source=config:
    get:
      description: This API retrieves detailed information about the specified CDC
        instance from the configuration database.
      operationId: get-redfish-v1-SFSS-Instance#-CDCInstance?$source=config
      parameters:
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__CDCInstance__source_config_200_response"
          description: OK
      security:
      - basic: []
      summary: Get detailed CDC information
      tags: []
    parameters:
    - explode: false
      in: path
      name: InstanceID
      required: true
      schema:
        default: 1
        format: int32
        maximum: 32
        minimum: 1
        type: integer
      style: simple
  /redfish/v1/SFSS/{InstanceID}/ZoneDBs:
    get:
      description: This API retrieves zone database information from a CDC based on
        the specified CDC instance identifier.
      operationId: get-redfish-v1-SFSS-Instance#-ZoneDBs
      parameters:
      - description: To fetch from configuration database
        explode: true
        in: query
        name: ?$source=config
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    ZoneDBs:
                    - '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('pending')
                    - '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('active')
                    ZoneDBs@odata.count: 2
                    '@odata.id': /redfish/v1/SFSS/1/ZoneDBs
                    '@odata.context': /redfish/v1/SFSS/1/$metadata#ZoneDBs
                    '@odata.type': "#ZoneDBsCollection.ZoneDBsCollection"
                Example for $source=config optional params.:
                  value:
                    ZoneDBs:
                    - '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')
                    ZoneDBs@odata.count: 1
                    '@odata.id': /redfish/v1/SFSS/1/ZoneDBs?$source=config
                    '@odata.context': /redfish/v1/SFSS/1/$metadata#ZoneDBs
                    '@odata.type': "#ZoneDBsCollection.ZoneDBsCollection"
              schema:
                $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__ZoneDBs_200_response"
          description: OK
      security:
      - basic: []
      summary: Get zone database
      tags: []
    parameters:
    - explode: false
      in: path
      name: InstanceID
      required: true
      schema:
        default: 1
        format: int32
        maximum: 32
        minimum: 1
        type: integer
      style: simple
  /redfish/v1/SFSS/{InstanceID}/ZoneDBs('config'):
    delete:
      description: This API removes all the zoning configuration from the specified
        CDC instance.
      operationId: delete-redfish-v1-SFSS-Instance#-ZoneDBs('config')
      parameters:
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    EId: config
              schema:
                $ref: "#/components/schemas/delete_redfish_v1_SFSS_Instance__ZoneDBs__config___200_response"
          description: OK
      summary: Delete zoning configuration
    get:
      description: This API retrieves zone group information from the specified CDC
        instance.
      operationId: get-redfish-v1-SFSS-Instance#-ZoneDBs('config')?$source=config
      parameters:
      - description: "This param is required to fetch the ZoneDB. The URL should looks\
          \ like: /redfish/v1/SFSS/<Instance#>/ZoneDBs('config')?$source=config"
        explode: true
        in: query
        name: ?$source=config
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__ZoneDBs__config____source_config_200_response"
          description: OK
      security:
      - basic: []
      summary: Get config database
      tags: []
    parameters:
    - explode: false
      in: path
      name: InstanceID
      required: true
      schema:
        default: 1
        format: int32
        maximum: 32
        minimum: 1
        type: integer
      style: simple
  /redfish/v1/SFSS/{InstanceID}/ZoneDBs('active'):
    get:
      description: 'This API retrieves zone group information from the active database
        of the specified CDC instance. '
      operationId: get-redfish-v1-SFSS-Instance#-ZoneDBs('active')
      parameters:
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    NumberZoneGroups: 0
                    ZoneGroups:
                    - {}
                    '@odata.id': string
                    '@odata.type': string
                    '@odata.context': string
              schema:
                $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__ZoneDBs__active___200_response"
          description: OK
      security:
      - basic: []
      summary: Get active database
      tags: []
    parameters:
    - explode: false
      in: path
      name: InstanceID
      required: true
      schema:
        default: 1
        format: int32
        maximum: 32
        minimum: 1
        type: integer
      style: simple
  /redfish/v1/SFSS/{InstanceID}/ZoneDBs('config')/ZoneGroups({ID}):
    delete:
      description: This API removes a zone group from a CDC instance based on the
        specified CDC instance and zone group identifiers.
      operationId: delete-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneGroups
      parameters:
      - description: The Zone Group ID to be deleted should be passed to this API.
        explode: true
        in: query
        name: ('ZoneGroupID')
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      - explode: false
        in: path
        name: ID
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    EId: config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8
              schema:
                $ref: "#/components/schemas/post_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups_200_response"
          description: OK
      summary: Delete zone group
    get:
      description: This API retrieves zone group information from the config database
        based on the specified CDC instance and zone group identifiers.
      operationId: get-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneGroups?$source=config
      parameters:
      - description: This parameter should be passed to fetch the Zone Groups
        explode: true
        in: query
        name: ?$source=config
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      - explode: false
        in: path
        name: ID
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    ZoneGroups:
                    - '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8')
                    ZoneGroups@odata.count: 1
                    '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups?$source=config
                    '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneGroups
                    '@odata.type': "#ZoneGroupsCollection.ZoneGroupsCollection"
              schema:
                $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups__source_config_200_response"
          description: OK
      security:
      - basic: []
      summary: Get specific zone group
      tags: []
    parameters:
    - explode: false
      in: path
      name: InstanceID
      required: true
      schema:
        default: 1
        format: int32
        maximum: 32
        minimum: 1
        type: integer
      style: simple
    - explode: false
      in: path
      name: ID
      required: true
      schema:
        minLength: 1
        type: string
      style: simple
    post:
      description: This API creates a zone group in the config database of the specified
        CDC instance.
      operationId: post-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneGroups
      parameters:
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      - explode: false
        in: path
        name: ID
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  ZoneDBType: config
                  ZoneGroupName: ZoneGrpDhana1111
            schema:
              $ref: "#/components/schemas/post_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups_request"
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    EId: config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8
              schema:
                $ref: "#/components/schemas/post_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups_200_response"
          description: OK
      security:
      - basic: []
      summary: Add zone group
    put:
      description: This API activates or deactivates a zone group in the specified
        CDC instance.
      operationId: put-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneGroups
      parameters:
      - description: The ID of Zonegroup should be passed for PUT.
        explode: true
        in: query
        name: ('ID')
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      - explode: false
        in: path
        name: ID
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              To Activate:
                value:
                  ActivateStatus: Activate
              To Deactivate:
                value:
                  ActivateStatus: DeActivate
            schema:
              $ref: "#/components/schemas/put_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups_request"
        description: "The URL should looks like: http://IPAddress//redfish/v1/SFSS/<Instance#>/ZoneDBs('config')/ZoneGroups('ID')"
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    EId: active:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8
              schema:
                $ref: "#/components/schemas/put_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups_200_response"
          description: OK
      security:
      - basic: []
      summary: Activate (or deactivate) zone group
  /redfish/v1/SFSS/{InstanceID}/ZoneDBs('config')/ZoneGroups({ZoneGroupID}):
    get:
      description: This API retrieves detailed information about a zone group based
        on the zone group identifier.
      operationId: get-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneGroups('config:ZoneGroup1:nqn.1988-11.com.dell:SFSS:1:20210706164404e8')?$source=config
      parameters:
      - description: ?$source=config
        explode: false
        in: path
        name: expand
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      - explode: false
        in: path
        name: ZoneGroupID
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    ZoneDBType: config
                    ZoneGroupId: config:ZoneGroup1:nqn.1988-11.com.dell:SFSS:1:20210706164404e8
                    zoneGroupName: ZoneGroup1
                    OriginatorNQN: nqn.1988-11.com.dell:SFSS:1:20210706164404e8
                    Type: Manual
                    ActivateStatus: DeActivate
                    ActivationState: NotActive
                    NumberZones: 0
                    '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:ZoneGroup1:nqn.1988-11.com.dell:SFSS:1:20210706164404e8')
                    '@odata.type': "#ZoneGroups.ZoneGroups"
                    '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneGroups/ZoneGroups/$entity
              schema:
                $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups__config_ZoneGroup1_nqn_1988_11_com_dell_SFSS_1_20210706164404e8____source_config_200_response"
          description: OK
      security:
      - basic: []
      summary: Get specific zone group
      tags: []
    parameters:
    - description: ?$source=config
      explode: false
      in: path
      name: expand
      required: true
      schema:
        type: string
      style: simple
    - explode: false
      in: path
      name: InstanceID
      required: true
      schema:
        default: 1
        format: int32
        maximum: 32
        minimum: 1
        type: integer
      style: simple
    - explode: false
      in: path
      name: ZoneGroupID
      required: true
      schema:
        minLength: 1
        type: string
      style: simple
  /redfish/v1/SFSS/{InstanceID}/ZoneDBs/ZoneGroups/Enums:
    get:
      description: This API retrieves a list of supported enumerations for the zone
        group configuration.
      operationId: get-redfish-v1-SFSS-Instance#-ZoneDBs-ZoneGroups-Enums
      parameters:
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    ActivateStatus:
                    - DeActivate
                    - Activate
                    ActivationState:
                    - NotActive
                    - Active
                    - ReActivationNeeded
                    - ActivationInprogress
                    - DeActivationInprogress
                    Type:
                    - Manual
                    - PULLANER
                    - ANER
              schema:
                $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__ZoneDBs_ZoneGroups_Enums_200_response"
          description: OK
      security:
      - basic: []
      summary: Get zone group enums
      tags: []
    parameters:
    - explode: false
      in: path
      name: InstanceID
      required: true
      schema:
        default: 1
        format: int32
        maximum: 32
        minimum: 1
        type: integer
      style: simple
  /redfish/v1/SFSS/{InstanceID}/ZoneDBs('config')/ZoneGroups({ZoneGrpID})/Zones({ZoneID}):
    delete:
      description: This API removes a zone from the specified CDC instance and zone
        group based on the zone identifier.
      operationId: delete-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneGroups('ZoneGrpID')-Zones
      parameters:
      - description: The Zone ID to be deleted should be passed.
        explode: true
        in: query
        name: ('ZoneID')
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      - explode: false
        in: path
        name: ZoneGrpID
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: ZoneID
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    EId: config:ZoneGrpDhana:nqn.1988-11.com.dell:SFSS:1:20210706164404e8:DhanaZone
              schema:
                $ref: "#/components/schemas/delete_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups__ZoneGrpID___Zones_200_response"
          description: OK
      summary: Delete zone
    get:
      description: This API retrieves a list of all the zones that belong to the specified
        CDC instance based on the zone group and zone identifiers.
      operationId: get-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneGroups('config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8')-Zones?$source=config
      parameters:
      - description: "The API should looks like: /redfish/v1/SFSS/<Instance#>/ZoneDBs('config')/ZoneGroups('ZoneGrpID')/Zones?$source=config"
        explode: true
        in: query
        name: ?$source=config
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      - explode: false
        in: path
        name: ZoneGrpID
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: ZoneID
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    Zones:
                    - '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8')/Zones('config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8:DhanaZone')
                    Zones@odata.count: 1
                    '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:ZoneGrpDhana1111:')/Zones?$source=config
                    '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:ZoneGrpDhana1111:')/$metadata#Zones
                    '@odata.type': "#ZonesCollection.ZonesCollection"
              schema:
                $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups__config_ZoneGrpDhana1111_nqn_1988_11_com_dell_SFSS_1_20210706164404e8___Zones__source_config_200_response"
          description: OK
      security:
      - basic: []
      summary: Get all zones
      tags: []
    parameters:
    - explode: false
      in: path
      name: InstanceID
      required: true
      schema:
        default: 1
        format: int32
        maximum: 32
        minimum: 1
        type: integer
      style: simple
    - explode: false
      in: path
      name: ZoneGrpID
      required: true
      schema:
        minLength: 1
        type: string
      style: simple
    - explode: false
      in: path
      name: ZoneID
      required: true
      schema:
        minLength: 1
        type: string
      style: simple
    post:
      description: 'This API creates a zone within the specified CDC instance and
        zone group.   '
      operationId: post-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneGroups('ZoneGrpID')-Zones?$source=config
      parameters:
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      - explode: false
        in: path
        name: ZoneGrpID
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: ZoneID
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  ZoneName: DhanaZone
            schema:
              $ref: "#/components/schemas/post_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups__ZoneGrpID___Zones__source_config_request"
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    EId: config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8:DhanaZone
              schema:
                $ref: "#/components/schemas/post_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups__ZoneGrpID___Zones__source_config_200_response"
          description: OK
      security:
      - basic: []
      summary: Add zone
  /redfish/v1/SFSS/{InstanceID}/ZoneDBs('config')/ZoneGroups({ZoneGroupId})/Zones({ZoneID})/ZoneMembers({ZoneMemberID}):
    delete:
      description: "This API removes a zone member from the specified CDC instance,\
        \ zone group, and zone based on the zone member identifier."
      operationId: delete-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneGroups('ZoneGroupId')-Zones('ZoneID')-ZoneMembers-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneGroups('ZoneGroupId')-Zones('ZoneID')-ZoneMembers
      parameters:
      - description: The ZoneMember ID to be deleted.
        explode: true
        in: query
        name: ('ZoneMemberID')
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      - explode: false
        in: path
        name: ZoneGroupId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: ZoneID
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: ZoneMemberID
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    EId: config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8:DhanaZone:nqn.2014-08.org.nvmexpress:uuid:host
              schema:
                $ref: "#/components/schemas/delete_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups__ZoneGroupId___Zones__ZoneID___ZoneMembers_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups__ZoneGroupId___Zones__ZoneID___ZoneMembers_200_response"
          description: OK
      security:
      - basic: []
      summary: Delete a zone member
    get:
      description: "This API retrieves a list of zone members that are part of the\
        \ specified CDC instance, zone group, and zone identifiers."
      operationId: get-https:-IP-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneGroups('config')-Zones('config')-ZoneMembers?$source=config
      parameters:
      - description: "This query param is mandatory. The request should looks like:\
          \ /redfish/v1/SFSS/<Instance#>/ZoneDBs('config')/ZoneGroups('ZoneGroupId')/Zones('ZoneID')/ZoneMembers?$source=config"
        explode: true
        in: query
        name: ?$source=config
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      - explode: false
        in: path
        name: ZoneGroupId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: ZoneID
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: ZoneMemberID
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    ZoneMembers:
                    - '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3000')
                    - '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:AliasMemberIdDhana')
                    - '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host')
                    ZoneMembers@odata.count: 3
                    '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers?$source=config
                    '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers
                    '@odata.type': "#ZoneMembersCollection.ZoneMembersCollection"
              schema:
                $ref: "#/components/schemas/get_https__IP_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups__config___Zones__config___ZoneMembers__source_config_200_response"
          description: OK
      security:
      - basic: []
      summary: Get zone members
      tags: []
    parameters:
    - explode: false
      in: path
      name: InstanceID
      required: true
      schema:
        default: 1
        format: int32
        maximum: 32
        minimum: 1
        type: integer
      style: simple
    - explode: false
      in: path
      name: ZoneGroupId
      required: true
      schema:
        minLength: 1
        type: string
      style: simple
    - explode: false
      in: path
      name: ZoneID
      required: true
      schema:
        minLength: 1
        type: string
      style: simple
    - explode: false
      in: path
      name: ZoneMemberID
      required: true
      schema:
        minLength: 1
        type: string
      style: simple
    post:
      description: "This API creates a zone member in the specified CDC instance,\
        \ zone group, and zone."
      operationId: post-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneGroups('ZoneGroupId')-Zones('ZoneID')-ZoneMembers
      parameters:
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      - explode: false
        in: path
        name: ZoneGroupId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: ZoneID
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: ZoneMemberID
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              For NQN based Zone Member:
                value:
                  ZoneMemberId: nqn.2014-08.org.nvmexpress:uuid:host
                  ZoneMemberType: NQN
                  Role: Host
              Fully Qualified Name Payload Example.:
                value:
                  ZoneMemberId: nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3000
                  ZoneMemberType: FullQualifiedName
                  Role: Host
              Adding Zone Member using Zone Alias.:
                value:
                  ZoneMemberId: AliasMemberIdDhana
                  ZoneMemberType: ZoneAlias
            schema:
              $ref: "#/components/schemas/post_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups__ZoneGroupId___Zones__ZoneID___ZoneMembers_request"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/post_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups__ZoneGroupId___Zones__ZoneID___ZoneMembers_200_response"
          description: OK
      security:
      - basic: []
      summary: Add zone member
    put:
      description: "This API updates the zone member information based on the specified\
        \ CDC instance, zone group, zone, and zone member identifiers."
      operationId: put-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneGroups('ZoneGroupId')-Zones('ZoneID')-ZoneMembers-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneGroups('ZoneGroupId')-Zones('ZoneID')-ZoneMembers
      parameters:
      - description: The Zone Member ID to be updated.
        explode: true
        in: query
        name: ('ZoneMemberID')
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      - explode: false
        in: path
        name: ZoneGroupId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: ZoneID
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: ZoneMemberID
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  Role: Subsystem
            schema:
              $ref: "#/components/schemas/put_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups__ZoneGroupId___Zones__ZoneID___ZoneMembers_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups__ZoneGroupId___Zones__ZoneID___ZoneMembers_request"
      responses:
        "200":
          description: OK
      security:
      - basic: []
      summary: Update a zone member
  /redfish/v1/SFSS/{InstanceID}/ZoneDBs('config')/ZoneGroups('ZoneGroupId')/Zones('ZoneID')/ZoneMembers{config}{zonemem}:
    get:
      description: "This API retrieves detailed information about all zone members\
        \ that belong to the specified CDC instance, zone group, and zone."
      operationId: get-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneGroups('ZoneGroupId')-Zones('ZoneID')-ZoneMembers('ZoneMemberID')?$source=config&$expand=ZoneMembers
      parameters:
      - description: ?$source=config
        explode: false
        in: path
        name: config
        required: true
        schema:
          type: string
        style: simple
      - description: '&$expand=ZoneMembers'
        explode: false
        in: path
        name: zonemem
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      - explode: false
        in: path
        name: ZoneGroupId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: ZoneID
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    ZoneMembers:
                    - Role: Subsystem
                      ZoneMemberId: config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3000
                      ZoneMemberType: FullQualifiedName
                      '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3000')
                      '@odata.type': "#ZoneMembers.ZoneMembers"
                      '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers/ZoneMembers/$entity
                    - Role: Subsystem
                      ZoneMemberId: config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:AliasMemberIdDhana
                      ZoneMemberType: ZoneAlias
                      '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:AliasMemberIdDhana')
                      '@odata.type': "#ZoneMembers.ZoneMembers"
                      '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers/ZoneMembers/$entity
                    - Role: Subsystem
                      ZoneMemberId: config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host
                      ZoneMemberType: NQN
                      '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host')
                      '@odata.type': "#ZoneMembers.ZoneMembers"
                      '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers/ZoneMembers/$entity
                    ZoneMembers@odata.count: 3
                    '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers?$source=config&$expand=ZoneMembers
                    '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers
                    '@odata.type': "#ZoneMembersCollection.ZoneMembersCollection"
              schema:
                $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups__ZoneGroupId___Zones__ZoneID___ZoneMembers__ZoneMemberID____source_config__expand_ZoneMembers_200_response"
          description: OK
      security:
      - basic: []
      summary: Get zone members (detailed)
      tags: []
    parameters:
    - description: ?$source=config
      explode: false
      in: path
      name: config
      required: true
      schema:
        type: string
      style: simple
    - description: '&$expand=ZoneMembers'
      explode: false
      in: path
      name: zonemem
      required: true
      schema:
        type: string
      style: simple
    - explode: false
      in: path
      name: InstanceID
      required: true
      schema:
        default: 1
        format: int32
        maximum: 32
        minimum: 1
        type: integer
      style: simple
    - explode: false
      in: path
      name: ZoneGroupId
      required: true
      schema:
        minLength: 1
        type: string
      style: simple
    - explode: false
      in: path
      name: ZoneID
      required: true
      schema:
        minLength: 1
        type: string
      style: simple
  /redfish/v1/SFSS/{InstanceID}/ZoneDBs/ZoneGroups/Zones/ZoneMembers/Enums:
    get:
      description: This API retrieves a list of supported enumerations for zone member
        configuration.
      operationId: get-redfish-v1-SFSS-Instance#-ZoneDBs-ZoneGroups-Zones-ZoneMembers-Enums
      parameters:
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    Role:
                    - ZoneAlias
                    - Host
                    - Subsystem
                    ZoneMemberType:
                    - NQN
                    - FullQualifiedName
                    - ZoneAlias
              schema:
                $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__ZoneDBs_ZoneGroups_Zones_ZoneMembers_Enums_200_response"
          description: OK
      security:
      - basic: []
      summary: Get zone member enums
      tags: []
    parameters:
    - explode: false
      in: path
      name: InstanceID
      required: true
      schema:
        default: 1
        format: int32
        maximum: 32
        minimum: 1
        type: integer
      style: simple
  /redfish/v1/SFSS/<Instance#>/ZoneDBs('config')/ZoneGroups('ZoneGroupId')/Zones('ZoneID')/ZoneMembers('ZoneMemberID'):
    get:
      description: "This API retrieves detailed information about a zone member that\
        \ belong to the specified CDC instance, zone group, and zone."
      operationId: get-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneGroups('ZoneGroupId')-Zones('ZoneID')-ZoneMembers('ZoneMemberID')?$source=config
      parameters:
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      - explode: false
        in: path
        name: ZoneGroupId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: ZoneID
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: ZoneMemberID
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    Role: Subsystem
                    ZoneMemberId: config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host
                    ZoneMemberType: NQN
                    '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host')
                    '@odata.type': "#ZoneMembers.ZoneMembers"
                    '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers/ZoneMembers/$entity
              schema:
                $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups__ZoneGroupId___Zones__ZoneID___ZoneMembers__ZoneMemberID____source_config_200_response"
          description: OK
      security:
      - basic: []
      summary: Get a zone member
      tags: []
    parameters:
    - explode: false
      in: path
      name: InstanceID
      required: true
      schema:
        default: 1
        format: int32
        maximum: 32
        minimum: 1
        type: integer
      style: simple
    - explode: false
      in: path
      name: ZoneGroupId
      required: true
      schema:
        minLength: 1
        type: string
      style: simple
    - explode: false
      in: path
      name: ZoneID
      required: true
      schema:
        minLength: 1
        type: string
      style: simple
    - explode: false
      in: path
      name: ZoneMemberID
      required: true
      schema:
        minLength: 1
        type: string
      style: simple
  /redfish/v1/SFSS/{InstanceID}/ZoneDBs('config')/ZoneAlias:
    get:
      description: This API retrieves a list of zone aliases configured in the specified
        CDC instance.
      operationId: get-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneAlias?$source=config&$expand=ZoneAlias
      parameters:
      - description: The query parameters should be passed. The URL should looks like
          http://IPAdress/redfish/v1/SFSS/<Instance#>/ZoneDBs('config')/ZoneAlias?$source=config&$expand=ZoneAlias
        explode: true
        in: query
        name: ?$source=config&$expand=ZoneAlias
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    ZoneAlias:
                    - ZoneAliasId: config:DhanaSampleAlias
                      ZoneAliasName: DhanaSampleAlias
                      NumberZoneMembers: "1"
                      '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')
                      '@odata.type': "#ZoneAlias.ZoneAlias"
                      '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneAlias/ZoneAlias/$entity
                    - ZoneAliasId: config:DhanaSampleAliasTest
                      ZoneAliasName: DhanaSampleAliasTest
                      NumberZoneMembers: "1"
                      '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAliasTest')
                      '@odata.type': "#ZoneAlias.ZoneAlias"
                      '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneAlias/ZoneAlias/$entity
                    ZoneAlias@odata.count: 2
                    '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias?$source=config&$expand=ZoneAlias
                    '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneAlias
                    '@odata.type': "#ZoneAliasCollection.ZoneAliasCollection"
              schema:
                $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneAlias__source_config__expand_ZoneAlias_200_response"
          description: OK
      security:
      - basic: []
      summary: Get zone alias
      tags: []
    parameters:
    - explode: false
      in: path
      name: InstanceID
      required: true
      schema:
        default: 1
        format: int32
        maximum: 32
        minimum: 1
        type: integer
      style: simple
    post:
      description: This API creates a zone alias in the specified CDC instance.
      operationId: post-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneAlias?$source=config&$expand=ZoneAlias
      parameters:
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  ZoneDBType: config
                  ZoneAliasName: DhanaSampleAlias123
            schema:
              $ref: "#/components/schemas/post_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneAlias__source_config__expand_ZoneAlias_request"
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    EId: config:DhanaSampleAlias123
              schema:
                $ref: "#/components/schemas/post_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneAlias__source_config__expand_ZoneAlias_200_response"
          description: OK
      security:
      - basic: []
      summary: Add a zone alias
  /redfish/v1/SFSS/{InstanceID}/ZoneDBs('config')/ZoneAlias({ZoneAliasId}):
    delete:
      description: This API removes a zone alias from the specified CDC instance based
        on the zone alias identifier.
      operationId: delete-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneAlias
      parameters:
      - explode: false
        in: path
        name: ZoneAliasId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    EId: config:DhanaSampleAliasTest
              schema:
                $ref: "#/components/schemas/delete_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneAlias_200_response"
          description: OK
      summary: Delete a zone alias
    parameters:
    - explode: false
      in: path
      name: ZoneAliasId
      required: true
      schema:
        minLength: 1
        type: string
      style: simple
    - explode: false
      in: path
      name: InstanceID
      required: true
      schema:
        default: 1
        format: int32
        maximum: 32
        minimum: 1
        type: integer
      style: simple
  /redfish/v1/SFSS/{InstanceID}/ZoneDBs('config')/ZoneAlias({ZoneAliasId)/ZoneAliasMembers:
    get:
      description: This API retrieves a list of zone alias members that belong to
        the specified CDC instance and zone alias.
      operationId: get-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneAlias('config:DhanaSampleAlias')-ZoneAliasMembers?$source=config
      parameters:
      - description: "This query parameter should be passed to fetch details. The\
          \ sample query looks like: http://IPAddress//redfish/v1/SFSS/<Instance#>/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers?$source=config"
        explode: true
        in: query
        name: ?$source=config
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      - explode: false
        in: path
        name: ZoneAliasId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    ZoneAliasMembers:
                    - '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3002')
                    - '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host')
                    ZoneAliasMembers@odata.count: 2
                    '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers?$source=config
                    '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/$metadata#ZoneAliasMembers
                    '@odata.type': "#ZoneMembersCollection.ZoneMembersCollection"
              schema:
                $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneAlias__config_DhanaSampleAlias___ZoneAliasMembers__source_config_200_response"
          description: OK
      security:
      - basic: []
      summary: Get zone alias member
      tags: []
    parameters:
    - explode: false
      in: path
      name: InstanceID
      required: true
      schema:
        default: 1
        format: int32
        maximum: 32
        minimum: 1
        type: integer
      style: simple
    - explode: false
      in: path
      name: ZoneAliasId
      required: true
      schema:
        minLength: 1
        type: string
      style: simple
    post:
      description: This API creates a zone alias member in the specified CDC instance
        and zone alias.
      operationId: post-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneAlias('config:DhanaSampleAlias')-ZoneAliasMembers?$source=config
      parameters:
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      - explode: false
        in: path
        name: ZoneAliasId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example for ZoneAlias using Fully Qualified Name.:
                value:
                  ZoneAliasMemberId: nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3002
                  ZoneAliasMemberType: FullQualifiedName
                  Role: Subsystem
              Example for adding NQN based Zone Alias:
                value:
                  ZoneAliasMemberId: nqn.2014-08.org.nvmexpress:uuid:host
                  ZoneAliasMemberType: NQN
                  Role: Host
            schema:
              $ref: "#/components/schemas/post_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneAlias__config_DhanaSampleAlias___ZoneAliasMembers__source_config_request"
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    EId: config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3002
              schema:
                $ref: "#/components/schemas/post_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneAlias__config_DhanaSampleAlias___ZoneAliasMembers__source_config_200_response"
          description: OK
      security:
      - basic: []
      summary: Add zone alias member
  /redfish/v1/SFSS/{InstanceID}/ZoneDBs('config')/ZoneAlias?$source=config&$expand=ZoneAlias:
    get:
      description: This API retrieves detailed information about a zone alias from
        the specified CDC instance based on the zone alias identifier.
      operationId: get-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneAlias('config:DhanaSampleAliasTest')?$source=config
      parameters:
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    ZoneAliasId: config:DhanaSampleAliasTest
                    ZoneAliasName: DhanaSampleAliasTest
                    NumberZoneMembers: "1"
                    '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAliasTest')
                    '@odata.type': "#ZoneAlias.ZoneAlias"
                    '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneAlias/ZoneAlias/$entity
              schema:
                $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneAlias__config_DhanaSampleAliasTest____source_config_200_response"
          description: OK
      security:
      - basic: []
      summary: Get a zone alias
      tags: []
    parameters:
    - explode: false
      in: path
      name: InstanceID
      required: true
      schema:
        default: 1
        format: int32
        maximum: 32
        minimum: 1
        type: integer
      style: simple
  /redfish/v1/SFSS/{InstanceID}/ZoneDBs('config')/ZoneAlias({ZoneAliasId})/ZoneAliasMembers({ZoneAliasMemberId}):
    delete:
      description: This API removes a zone alias member from the specified CDC instance
        based on the zone alias member identifier.
      operationId: delete-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneAlias('config:DhanaSampleAlias')-ZoneAliasMembers
      parameters:
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      - explode: false
        in: path
        name: ZoneAliasId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: ZoneAliasMemberId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    EId: config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3002
              schema:
                $ref: "#/components/schemas/post_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneAlias__config_DhanaSampleAlias___ZoneAliasMembers__source_config_200_response"
          description: OK
      summary: Delete zone alias member
    get:
      description: 'This API retrieves detailed information about a zone alias member
        from the specified CDC instance based on the zone alias member identifier. '
      operationId: get-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneAlias('config:DhanaSampleAlias')-ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host')?$source=config
      parameters:
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      - explode: false
        in: path
        name: ZoneAliasId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: ZoneAliasMemberId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    ZoneAliasMemberId: config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host
                    ZoneAliasMemberType: NQN
                    Role: Host
                    '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host')
                    '@odata.type': "#ZoneAliasMembers.ZoneAliasMembers"
                    '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/$metadata#ZoneAliasMembers/ZoneAliasMembers/$entity
              schema:
                $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneAlias__config_DhanaSampleAlias___ZoneAliasMembers__config_DhanaSampleAlias_nqn_2014_08_org_nvmexpress_uuid_host____source_config_200_response"
          description: OK
      security:
      - basic: []
      summary: Get zone alias member
      tags: []
    parameters:
    - explode: false
      in: path
      name: InstanceID
      required: true
      schema:
        default: 1
        format: int32
        maximum: 32
        minimum: 1
        type: integer
      style: simple
    - explode: false
      in: path
      name: ZoneAliasId
      required: true
      schema:
        minLength: 1
        type: string
      style: simple
    - explode: false
      in: path
      name: ZoneAliasMemberId
      required: true
      schema:
        minLength: 1
        type: string
      style: simple
    put:
      description: 'This API updates zone alias member information in the specified
        CDC instance based on the zone alias member identifier. '
      operationId: put-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneAlias('config:DhanaSampleAlias')-ZoneAliasMembers?$source=config
      parameters:
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      - explode: false
        in: path
        name: ZoneAliasId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: ZoneAliasMemberId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  Role: Host
              example-2:
                value:
                  Role: Subsystem
            schema:
              $ref: "#/components/schemas/put_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneAlias__config_DhanaSampleAlias___ZoneAliasMembers__source_config_request"
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    EId: config:SampleZoneAlias:nqn.2014-08.org.nvmexpress:uuid:host
              schema:
                $ref: "#/components/schemas/put_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneAlias__config_DhanaSampleAlias___ZoneAliasMembers__source_config_200_response"
          description: OK
      security:
      - basic: []
      summary: Update zone alias member
  /redfish/v1/SFSS/{InstanceID}/ZoneDBs('config')/ZoneAlias({ZoneAliasId})/ZoneAliasMembers2({ZoneAliasMemberId}):
    get:
      description: This API retrieves a list of all zone alias members from the specified
        CDC instance and zone alias.
      operationId: get-redfish-v1-SFSS-Instance#-ZoneDBs('config')-ZoneAlias('config:DhanaSampleAlias')-ZoneAliasMembers?$source=config&$expand=ZoneAliasMembers
      parameters:
      - description: ?$source=config
        explode: false
        in: path
        name: config
        required: true
        schema:
          type: string
        style: simple
      - description: '&$expand=ZoneAliasMembers'
        explode: false
        in: path
        name: zonealiasmem
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      - explode: false
        in: path
        name: ZoneAliasId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: ZoneAliasMemberId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    ZoneAliasMembers:
                    - ZoneAliasMemberType: FullQualifiedName
                      ZoneAliasMemberId: config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3002
                      Role: Host
                      '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3002')
                      '@odata.type': "#ZoneAliasMembers.ZoneAliasMembers"
                      '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/$metadata#ZoneAliasMembers/ZoneAliasMembers/$entity
                    ZoneAliasMembers@odata.count: 1
                    '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers?$source=config&$expand=ZoneAliasMembers
                    '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/$metadata#ZoneAliasMembers
                    '@odata.type': "#ZoneMembersCollection.ZoneMembersCollection"
              schema:
                $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneAlias__config_DhanaSampleAlias___ZoneAliasMembers__source_config__expand_ZoneAliasMembers_200_response"
          description: OK
      security:
      - basic: []
      summary: Get zone alias members
      tags: []
    parameters:
    - description: ?$source=config
      explode: false
      in: path
      name: config
      required: true
      schema:
        type: string
      style: simple
    - description: '&$expand=ZoneAliasMembers'
      explode: false
      in: path
      name: zonealiasmem
      required: true
      schema:
        type: string
      style: simple
    - explode: false
      in: path
      name: InstanceID
      required: true
      schema:
        default: 1
        format: int32
        maximum: 32
        minimum: 1
        type: integer
      style: simple
    - explode: false
      in: path
      name: ZoneAliasId
      required: true
      schema:
        minLength: 1
        type: string
      style: simple
    - explode: false
      in: path
      name: ZoneAliasMemberId
      required: true
      schema:
        minLength: 1
        type: string
      style: simple
  /redfish/v1/SFSS/{InstanceID}/GlobalPolicies:
    get:
      description: This API retrieves the global policies configured in the specified
        CDC instance.
      operationId: get-redfish-v1-SFSS-Instance-#-GlobalPolicies
      parameters:
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    ZoningPolicy: Enable
                    NameServerEntityPurgeTOV: 4Hr
                    '@odata.id': /redfish/v1/stfs/1/GlobalPolicies
                    '@odata.type': "#GlobalPolicies.GlobalPolicies"
                    '@odata.context': /redfish/v1/stfs/1/$metadata#GlobalPolicies/GlobalPolicies/$entity
              schema:
                $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance___GlobalPolicies_200_response"
          description: OK
      security:
      - basic: []
      summary: Get global policies
      tags: []
    parameters:
    - explode: false
      in: path
      name: InstanceID
      required: true
      schema:
        default: 1
        format: int32
        maximum: 32
        minimum: 1
        type: integer
      style: simple
    post:
      description: This API creates or updates the global policies in the specified
        CDC instance.
      operationId: post-redfish-v1-SFSS-Instance-#-GlobalPolicies
      parameters:
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  ZoningPolicy: Disable
                  NameServerEntityPurgeTOV: 4Hr
            schema:
              $ref: "#/components/schemas/post_redfish_v1_SFSS_Instance___GlobalPolicies_request"
      responses:
        "200":
          description: OK
      security:
      - basic: []
      summary: Configure global policies
  /redfish/v1/SFSS/{InstanceID}/ZoneDBs/ZoneAlias/ZoneAliasMembers/Enums:
    get:
      description: This API retrieves a list of all supported enumerations for the
        zone alias member configuration.
      operationId: get-redfish-v1-SFSS-Instance#-ZoneDBs-ZoneAlias-ZoneAliasMembers-Enums
      parameters:
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    Role:
                    - Subsystem
                    - Host
                    ZoneMemberType:
                    - NQN
                    - FullQualifiedName
              schema:
                $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__ZoneDBs_ZoneAlias_ZoneAliasMembers_Enums_200_response"
          description: OK
      security:
      - basic: []
      summary: Get zone alias member enums
      tags: []
    parameters:
    - explode: false
      in: path
      name: InstanceID
      required: true
      schema:
        default: 1
        format: int32
        maximum: 32
        minimum: 1
        type: integer
      style: simple
  /redfish/v1/SFSS/{InstanceID}/GlobalPolicies/Enums:
    get:
      description: This API retrieves a list of all supported enumerations for the
        global policy configuration.
      operationId: get-redfish-v1-SFSS-Instance#-GlobalPolicies-Enums
      parameters:
      - explode: false
        in: path
        name: InstanceID
        required: true
        schema:
          default: 1
          format: int32
          maximum: 32
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    ZoningPolicy:
                    - Enable
                    - Disable
                    NameServerEntityPurgeTOV:
                    - NoTimeout
                    - 5Sec
                    - 4Hr
                    - 8Hr
                    - 24Hr
                    - 48Hr
                    - 10Min
              schema:
                $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__GlobalPolicies_Enums_200_response"
          description: OK
      security:
      - basic: []
      summary: Get global policy enums
      tags: []
    parameters:
    - explode: false
      in: path
      name: InstanceID
      required: true
      schema:
        default: 1
        format: int32
        maximum: 32
        minimum: 1
        type: integer
      style: simple
components:
  schemas:
    HostsGET:
      description: This model contains host information.
      properties:
        Hosts:
          description: Host information
          items:
            $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__Hosts_200_response_Hosts_inner"
          minItems: 1
          type: array
          uniqueItems: true
        Hosts@odata.count:
          description: Number of hosts registered with the CDC instance
          type: number
        '@odata.id':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - Hosts
      - Hosts@odata.count
      title: HostsGET
      x-examples:
        example-1:
          Hosts:
          - '@odata.id': /redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@11.22.33.44:V4::0:0:TCP')
          - '@odata.id': /redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:V4::0:0:TCP')
          - '@odata.id': /redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@4.4.4.4:V4::0:0:TCP')
          Hosts@odata.count: 3
          '@odata.id': /redfish/v1/SFSS/1/Hosts
          '@odata.context': /redfish/v1/SFSS/1/$metadata#Hosts
          '@odata.type': "#HostsCollection.HostsCollection"
    HostsGET-ID:
      description: |
        This model contains information about the specified host based on the host ID.
      properties:
        Id:
          description: Unique Identity of the Entity - Fully Qualified Name (FQN)
            of the host
          minLength: 1
          type: string
        NQN:
          description: NVMe Qualified Name (NQN) of the host
          minLength: 1
          type: string
        TransportAddress:
          description: IP address of the host
          minLength: 1
          type: string
        TransportAddressFamily:
          description: IP address family; possible values include IPv4 and IPv6
          minLength: 1
          type: string
        TransportType:
          description: Protocol used for communication with the host; possible value
            is TCP
          minLength: 1
          type: string
        TREQ:
          description: "Transport Request Type (TREQ); possible values include Secure\
            \ channel not specified, Secure channel required, and Secure channel not\
            \ required"
          minLength: 1
          type: string
        TSAS:
          description: Possible values are No Security and TLS
          minLength: 1
          type: string
        RegistrationType:
          description: "Type of endpoint registration; possible values include Implicit,\
            \ Explicit, Pull, and Manual"
          minLength: 1
          type: string
        ConnectionStatus:
          description: Status of the TCP connection between the host and the CDC instance;
            possible values include Online and Offline
          minLength: 1
          type: string
        FailureReason:
          description: "Reason for the host being offline; possible values include\
            \ NONE, KATO, and Peer Closure"
          minLength: 1
          type: string
        '@odata.id':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - ConnectionStatus
      - FailureReason
      - Id
      - NQN
      - RegistrationType
      - TREQ
      - TSAS
      - TransportAddress
      - TransportAddressFamily
      - TransportType
      title: HostsGET-ID
      x-examples:
        example-1:
          Id: nqn.2014-08.org.nvmexpress:uuid:host@4.4.4.4:V4::0:0:TCP
          NQN: nqn.2014-08.org.nvmexpress:uuid:host
          TransportAddress: 4.4.4.4
          TransportAddressFamily: IPV4
          TransportType: TCP
          TREQ: Secure channel Not specified
          TSAS: No Security
          RegistrationType: Manual
          ConnectionStatus: Offline
          FailureReason: NONE
          '@odata.id': /redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@4.4.4.4:V4::0:0:TCP')
          '@odata.type': "#Hosts.Hosts"
          '@odata.context': /redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity
    HostsGET-Expand:
      description: This model contains detailed information about the hosts that are
        registered with the CDC instance.
      properties:
        Hosts:
          description: Detailed host information
          items:
            $ref: "#/components/schemas/HostsGET_Expand_Hosts_inner"
          minItems: 1
          type: array
          uniqueItems: true
        Hosts@odata.count:
          description: Number of hosts registered with the CDC instance
          type: number
        '@odata.id':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - Hosts
      - Hosts@odata.count
      title: HostsGET-Expand
      x-examples:
        example-1:
          Hosts:
          - Id: nqn.2014-08.org.nvmexpress:uuid:host@11.22.33.44:V4::0:0:TCP
            NQN: nqn.2014-08.org.nvmexpress:uuid:host
            TransportAddress: 11.22.33.44
            TransportAddressFamily: IPV4
            TransportType: TCP
            TREQ: Secure channel Not specified
            TSAS: No Security
            RegistrationType: Manual
            ConnectionStatus: Offline
            FailureReason: NONE
            '@odata.id': /redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@11.22.33.44:V4::0:0:TCP')
            '@odata.type': "#Hosts.Hosts"
            '@odata.context': /redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity
          - Id: nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:V4::0:0:TCP
            NQN: nqn.2014-08.org.nvmexpress:uuid:host
            TransportAddress: 1.2.3.4
            TransportAddressFamily: IPV4
            TransportType: TCP
            TREQ: Secure channel Not specified
            TSAS: No Security
            RegistrationType: Manual
            ConnectionStatus: Offline
            FailureReason: NONE
            '@odata.id': /redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:V4::0:0:TCP')
            '@odata.type': "#Hosts.Hosts"
            '@odata.context': /redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity
          - Id: nqn.2014-08.org.nvmexpress:uuid:host@4.4.4.4:V4::0:0:TCP
            NQN: nqn.2014-08.org.nvmexpress:uuid:host
            TransportAddress: 4.4.4.4
            TransportAddressFamily: IPV4
            TransportType: TCP
            TREQ: Secure channel Not specified
            TSAS: No Security
            RegistrationType: Manual
            ConnectionStatus: Offline
            FailureReason: NONE
            '@odata.id': /redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@4.4.4.4:V4::0:0:TCP')
            '@odata.type': "#Hosts.Hosts"
            '@odata.context': /redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity
          Hosts@odata.count: 3
          '@odata.id': /redfish/v1/SFSS/1/Hosts?$expand=Hosts
          '@odata.context': /redfish/v1/SFSS/1/$metadata#Hosts
          '@odata.type': "#HostsCollection.HostsCollection"
    Hosts-Enums:
      description: This model contains supported enumerations for the host configuration.
      properties:
        TransportAddressFamily:
          description: IP address family; possible values include IPv4 and IPv6
          items:
            type: object
          type: array
        EKType:
          description: "Entity Key Type; possible values are Unknown, Port, and TRADDR"
          items:
            type: object
          type: array
        FailureReason:
          description: "Reason for the host being offline; possible values include\
            \ NONE, KATO, and Peer Closure"
          items:
            type: object
          type: array
        RegistrationType:
          description: "Type of endpoint registration; possible values include Implicit,\
            \ Explicit, Pull, and Manual"
          items:
            type: object
          type: array
        ConnectionStatus:
          description: Status of the TCP connection between the host and the CDC instance;
            possible values include Online and Offline
          items:
            type: object
          type: array
        TREQ:
          description: "Transport Request Type (TREQ); possible values include Secure\
            \ channel not specified, Secure channel required, and Secure channel not\
            \ required"
          items:
            type: object
          type: array
        TransportType:
          description: Protocol used for communication with the host; possible value
            is TCP
          items:
            type: object
          type: array
        TSAS:
          description: Possible values are No Security and TLS
          items:
            type: object
          type: array
      required:
      - ConnectionStatus
      - EKType
      - FailureReason
      - RegistrationType
      - TREQ
      - TSAS
      - TransportAddressFamily
      - TransportType
      title: Hosts-Enums
      x-examples:
        example-1:
          TransportAddressFamily:
          - IPV4
          - IPV6
          EKType:
          - Port
          - TRADDR
          FailureReason:
          - NONE
          - KATO
          - Peer Closure
          RegistrationType:
          - Implicit
          - Explicit
          - Pull
          - Manual
          ConnectionStatus:
          - Offline
          - Online
          TREQ:
          - Secure channel Not specified
          - Secure Channel Required
          - Secure Channel Not required
          TransportType:
          - TCP
          TSAS:
          - No Security
          - TLS
    SubsystemsGET:
      description: This model contains information about the subsystems that are registered
        with the CDC instance.
      properties:
        Subsystems:
          description: Subsystem information
          items:
            $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__Hosts_200_response_Hosts_inner"
          minItems: 1
          type: array
          uniqueItems: true
        Subsystems@odata.count:
          description: Number of subsystems registered with the CDC instance
          type: number
        '@odata.id':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - Subsystems
      - Subsystems@odata.count
      title: SubsystemsGET
      x-examples:
        example-1:
          Subsystems:
          - '@odata.id': /redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@2.2.2.2:V4:600:0:0:TCP')
          - '@odata.id': /redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:400:0:0:TCP')
          - '@odata.id': /redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@1.1.1.1:V4:900:0:0:TCP')
          Subsystems@odata.count: 3
          '@odata.id': /redfish/v1/SFSS/1/Subsystems
          '@odata.context': /redfish/v1/SFSS/1/$metadata#Subsystems
          '@odata.type': "#SubsystemsCollection.SubsystemsCollection"
    SubsystemsGET-ID:
      description: This model contains information about the specified subsystem based
        on the subsystem identifier.
      properties:
        Id:
          description: Unique Identity of the Entity - Fully Qualified Name (FQN)
            of the subsystem
          minLength: 1
          type: string
        NQN:
          description: NVMe Qualified Name (NQN) of the subsystem
          minLength: 1
          type: string
        TransportAddress:
          description: IP address of the subsystem
          minLength: 1
          type: string
        TransportAddressFamily:
          description: IP address family; possible values include IPv4 and IPv6
          minLength: 1
          type: string
        PortId:
          description: Internal Port ID that is mapped to the NVMe Subsystem Port
          type: number
        ControllerId:
          description: "TCP controller ID, 65535"
          type: number
        TransportType:
          description: Protocol used for communication with the host; possible value
            is TCP
          minLength: 1
          type: string
        SubType:
          description: "Possible values include Reserved, Discovery Service, and NVM\
            \ Subsystem"
          minLength: 1
          type: string
        TREQ:
          description: "Transport Request Type (TREQ); possible values include Secure\
            \ channel not specified, Secure channel required, and Secure channel not\
            \ required"
          minLength: 1
          type: string
        ASQZ:
          description: Admin Queue Size
          type: number
        TransportServiceId:
          description: NVMe Transport Service Identifier as an ASCII string
          minLength: 1
          type: string
        TSAS:
          description: NVMe Transport Service Address SubType; possible values are
            No Security and TLS
          minLength: 1
          type: string
        RcvdGenCounter:
          description: Generation Counter that is maintained for the last received
            Get Log Page command
          type: number
        RegistrationType:
          description: "Type of endpoint registration; possible values include Implicit,\
            \ Explicit, Pull, and Manual"
          minLength: 1
          type: string
        ConnectionStatus:
          description: Status of the TCP connection between the subsystem and the
            CDC instance; possible values include Online and Offline
          minLength: 1
          type: string
        EKType:
          description: "Entity Key Type; possible values are Unknown, Port, and TRADDR"
          minLength: 1
          type: string
        '@odata.id':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - ASQZ
      - ConnectionStatus
      - ControllerId
      - EKType
      - Id
      - NQN
      - PortId
      - RcvdGenCounter
      - RegistrationType
      - SubType
      - TREQ
      - TSAS
      - TransportAddress
      - TransportAddressFamily
      - TransportServiceId
      - TransportType
      title: SubsystemsGET-ID
      x-examples:
        example-1:
          Id: nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:900:0:0:TCP
          NQN: nqn.2014-08.org.nvmexpress:uuid:subsystem
          TransportAddress: 3.3.3.3
          TransportAddressFamily: IPV4
          PortId: 5453
          ControllerId: 65535
          TransportType: TCP
          SubType: NVM Subsystem
          TREQ: Secure channel Not specified
          ASQZ: 32
          TransportServiceId: "900"
          TSAS: No Security
          RcvdGenCounter: 0
          RegistrationType: Manual
          ConnectionStatus: Offline
          EKType: TRADDR
          '@odata.id': /redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:900:0:0:TCP')
          '@odata.type': "#Subsystems.Subsystems"
          '@odata.context': /redfish/v1/SFSS/1/$metadata#Subsystems/Subsystems/$entity
    SubsystemsGET-Expand:
      description: This model contains detailed information about the subsystems.
      properties:
        Subsystems:
          description: 'Detailed subsystem information '
          items:
            $ref: "#/components/schemas/SubsystemsGET_Expand_Subsystems_inner"
          minItems: 1
          type: array
          uniqueItems: true
        Subsystems@odata.count:
          description: Number of subsystems registered with the CDC instance
          type: number
        '@odata.id':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - Subsystems
      - Subsystems@odata.count
      title: SubsystemsGET-Expand
      x-examples:
        example-1:
          Subsystems:
          - Id: nqn.2014-08.org.nvmexpress:uuid:subsystem@1.1.1.1:V4:900:0:0:TCP
            NQN: nqn.2014-08.org.nvmexpress:uuid:subsystem
            TransportAddress: 1.1.1.1
            TransportAddressFamily: IPV4
            PortId: 5450
            ControllerId: 65535
            TransportType: TCP
            SubType: NVM Subsystem
            TREQ: Secure channel Not specified
            ASQZ: 32
            TransportServiceId: "900"
            TSAS: No Security
            RcvdGenCounter: 0
            RegistrationType: Manual
            ConnectionStatus: Offline
            EKType: TRADDR
            '@odata.id': /redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@1.1.1.1:V4:900:0:0:TCP')
            '@odata.type': "#Subsystems.Subsystems"
            '@odata.context': /redfish/v1/SFSS/1/$metadata#Subsystems/Subsystems/$entity
          - Id: nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:900:0:0:TCP
            NQN: nqn.2014-08.org.nvmexpress:uuid:subsystem
            TransportAddress: 3.3.3.3
            TransportAddressFamily: IPV4
            PortId: 5453
            ControllerId: 65535
            TransportType: TCP
            SubType: NVM Subsystem
            TREQ: Secure channel Not specified
            ASQZ: 32
            TransportServiceId: "900"
            TSAS: No Security
            RcvdGenCounter: 0
            RegistrationType: Manual
            ConnectionStatus: Offline
            EKType: TRADDR
            '@odata.id': /redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:900:0:0:TCP')
            '@odata.type': "#Subsystems.Subsystems"
            '@odata.context': /redfish/v1/SFSS/1/$metadata#Subsystems/Subsystems/$entity
          Subsystems@odata.count: 2
          '@odata.id': /redfish/v1/SFSS/1/Subsystems?$expand=Subsystems&$filter=TransportAddress%20eq%201.1.1.1%20or%20TransportAddress%20eq%203.3.3.3
          '@odata.context': /redfish/v1/SFSS/1/$metadata#Subsystems
          '@odata.type': "#SubsystemsCollection.SubsystemsCollection"
    Subsystems-Enums:
      description: This model contains supported enumerations for the subsystem configuration.
      properties:
        TransportAddressFamily:
          description: IP address family; possible values include IPv4 and IPv6
          items:
            type: object
          type: array
        EKType:
          description: "Entity Key Type; possible values are Unknown, Port, and TRADDR"
          items:
            type: object
          type: array
        FailureReason:
          description: "Connection Failure Reason - Possible Values are NONE, Peer\
            \ Closure,Dial Failure, KATO"
          items:
            type: object
          type: array
        RegistrationType:
          description: "Type of endpoint registration; possible values include Implicit,\
            \ Explicit, Pull, and Manual"
          items:
            type: object
          type: array
        ConnectionStatus:
          description: Status of the TCP connection between the subsystem and the
            CDC instance; possible values include Online and Offline
          items:
            type: object
          type: array
        SubType:
          description: "Possible values include Reserved, Discovery Service, and NVM\
            \ Subsystem"
          items:
            type: object
          type: array
        TREQ:
          description: "Transport Request Type (TREQ); possible values include Secure\
            \ channel not specified, Secure channel required, and Secure channel not\
            \ required"
          items:
            type: object
          type: array
        TransportType:
          description: "Protocol used for communication with the host; possible values\
            \ are TCP, RoCE, FC"
          items:
            type: object
          type: array
        TSAS:
          description: NVMe Transport Service Address SubType; possible values are
            No Security and TLS
          items:
            type: object
          type: array
      required:
      - ConnectionStatus
      - EKType
      - FailureReason
      - RegistrationType
      - SubType
      - TREQ
      - TSAS
      - TransportAddressFamily
      - TransportType
      title: Subsystems-Enums
      x-examples:
        example-1:
          TransportAddressFamily:
          - IPV4
          - IPV6
          EKType:
          - Port
          - TRADDR
          FailureReason:
          - NONE
          - KATO
          - Peer Closure
          RegistrationType:
          - Implicit
          - Explicit
          - Pull
          - Manual
          ConnectionStatus:
          - Offline
          - Online
          SubType:
          - Reserved
          - Discovery Service
          - NVM Subsystem
          TREQ:
          - Secure channel Not specified
          - Secure Channel Required
          - Secure Channel Not required
          TransportType:
          - TCP
          TSAS:
          - No Security
          - TLS
    CDCInstanceGET:
      description: This model lists the number of CDC instances configured in SFSS.
      properties:
        DiscoveryControllerPort:
          description: Port that CDC listens on for mDNS queries
          type: number
        InstanceId:
          description: 'CDC instance identifier '
          minLength: 1
          type: string
        NQN:
          description: NVMe Qualified Name (NQN) of the CDC instance
          minLength: 1
          type: string
        UpTime:
          minLength: 1
          type: string
        Version:
          minLength: 1
          type: string
        '@odata.id':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - DiscoveryControllerPort
      - InstanceId
      - NQN
      - UpTime
      - Version
      title: CDCInstanceGET
      x-examples:
        example-1:
          DiscoveryControllerPort: 8009
          InstanceId: "1"
          NQN: nqn.1988-11.com.dell:SFSS:1:20211007163204e8
          UpTime: 2021-10-08 20:00:40.248345
          Version: 1.0.0.0014
          '@odata.id': /redfish/v1/SFSS/1/CDCInstance
          '@odata.type': "#CDCInstance.CDCInstance"
          '@odata.context': /redfish/v1/SFSS/1/$metadata#CDCInstance/CDCInstance/$entity
    DDCGET:
      description: This model lists all the Direct Discovery Controllers (DDCs) configured
        in the CDC instance.
      properties:
        DDCs:
          description: Direct Discovery Controller (DDC) information
          items:
            $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__Hosts_200_response_Hosts_inner"
          minItems: 1
          type: array
          uniqueItems: true
        DDCs@odata.count:
          description: Number of DDCs configured in the CDC instance
          type: number
        '@odata.id':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - DDCs
      - DDCs@odata.count
      title: DDC GET
      x-examples:
        example-1:
          DDCs:
          - '@odata.id': /redfish/v1/SFSS/1/DDCs('@111.111.111.115:V4::0:5450:TCP')
          DDCs@odata.count: 1
          '@odata.id': /redfish/v1/SFSS/1/DDCs
          '@odata.context': /redfish/v1/SFSS/1/$metadata#DDCs
          '@odata.type': "#DDCsCollection.DDCsCollection"
    DDCGET-ID:
      description: This model lists information about a DDC based on the DDC ID.
      properties:
        Id:
          description: Unique Identity of the Entity - Fully Qualified Name (FQN)
            of the Direct Discovery Controller(DDC)
          minLength: 1
          type: string
        TransportAddress:
          description: IP address of the DDC
          minLength: 1
          type: string
        TransportAddressFamily:
          description: IP address family; possible values include IPv4 and IPv6
          minLength: 1
          type: string
        PortId:
          description: Port on which the DDC listens for CDC to connect to
          type: number
        TransportType:
          description: Protocol used for communication with the DDC; possible value
            is TCP
          minLength: 1
          type: string
        Activate:
          description: Activation of DDC that initiates a pull registration from CDC
          type: boolean
        ConfigType:
          description: Configuration Type of DDC; possible values are Manual and KickStart
          minLength: 1
          type: string
        ConnectionStatus:
          description: Status of the TCP connection between the DDC and the CDC instance.
            Possible values include Online/In-Progess:Connecting/Offline
          minLength: 1
          type: string
        FailureReason:
          description: Reason for the DDC being offline
          minLength: 1
          type: string
        '@odata.id':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - Activate
      - ConfigType
      - ConnectionStatus
      - FailureReason
      - Id
      - PortId
      - TransportAddress
      - TransportAddressFamily
      - TransportType
      title: DDCGET -ID
      x-examples:
        example-1:
          Id: '@111.111.111.115:V4::0:5450:TCP'
          TransportAddress: 111.111.111.115
          TransportAddressFamily: IPV4
          PortId: 5450
          TransportType: TCP
          Activate: false
          ConfigType: Manual
          ConnectionStatus: Offline
          FailureReason: NONE
          '@odata.id': /redfish/v1/SFSS/1/DDCs('@111.111.111.115:V4::0:5450:TCP')
          '@odata.type': "#DDCs.DDCs"
          '@odata.context': /redfish/v1/SFSS/1/$metadata#DDCs/DDCs/$entity
    DDC-ENUMS:
      description: This model lists the supported enumerations for the DDC configuration.
      properties:
        TransportAddressFamily:
          description: IP address family; possible values include IPv4 and IPv6
          items:
            type: object
          type: array
        ConfigType:
          description: Configuration Type of DDC; possible values are Manual and KickStart
          items:
            type: object
          type: array
        FailureReason:
          description: "Connection Failure Reason - Possible Values are NONE, Peer\
            \ Closure,Dial Failure, KATO"
          items:
            type: object
          type: array
        ConnectionStatus:
          description: Status of the TCP connection between the DDC and the CDC instance;
            possible values include Online/In-Progess:Connecting/Offline
          items:
            type: object
          type: array
        TransportType:
          description: Protocol used for communication with the DDC; possible value
            is TCP
          items:
            type: object
          type: array
      required:
      - ConfigType
      - ConnectionStatus
      - FailureReason
      - TransportAddressFamily
      - TransportType
      title: DDC- ENUMS
      x-examples:
        example-1:
          TransportAddressFamily:
          - IPV4
          - IPV6
          ConfigType:
          - Implicit
          - Push
          - Pull
          - Manual
          - KDCC
          FailureReason:
          - NONE
          - KATO
          - Peer Closure
          ConnectionStatus:
          - Online
          - Offline
          TransportType:
          - TCP
    ZoneDBGET:
      description: This model lists information about the zone database.
      properties:
        ZoneDBs:
          description: Zone Database
          items:
            $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__Hosts_200_response_Hosts_inner"
          minItems: 1
          type: array
          uniqueItems: true
        ZoneDBs@odata.count:
          description: Number of zone databases
          type: number
        '@odata.id':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - ZoneDBs
      - ZoneDBs@odata.count
      x-examples:
        example-1:
          ZoneDBs:
          - '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('pending')
          - '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('active')
          ZoneDBs@odata.count: 2
          '@odata.id': /redfish/v1/SFSS/1/ZoneDBs
          '@odata.context': /redfish/v1/SFSS/1/$metadata#ZoneDBs
          '@odata.type': "#ZoneDBsCollection.ZoneDBsCollection"
    ZoneConfigDBGET:
      description: This model lists the zones present in the zoning configuration
        database.
      properties:
        NumberZoneGroups:
          type: number
        ZoneGroups:
          description: Set of zone groups
          items:
            type: object
          type: array
        '@odata.id':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - NumberZoneGroups
      - ZoneGroups
      title: ZoneConfigDBGET
      x-examples:
        example-1:
          NumberZoneGroups: 1
          ZoneGroups:
          - config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8
          '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')
          '@odata.type': "#ZoneDBs.ZoneDBs"
          '@odata.context': /redfish/v1/SFSS/1/$metadata#ZoneDBs/ZoneDBs/$entity
    ZoneGroupGET:
      description: This model lists the zone groups present in the zoning configuration
        database.
      properties:
        ZoneGroups:
          description: Set of zone groups
          items:
            $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__Hosts_200_response_Hosts_inner"
          minItems: 1
          type: array
          uniqueItems: true
        ZoneGroups@odata.count:
          description: Number of zone groups
          type: number
        '@odata.id':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - ZoneGroups
      - ZoneGroups@odata.count
      title: ZoneGroupGET
      x-examples:
        example-1:
          ZoneGroups:
          - '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8')
          ZoneGroups@odata.count: 1
          '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups?$source=config
          '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneGroups
          '@odata.type': "#ZoneGroupsCollection.ZoneGroupsCollection"
    ZoneGroupGET-iD:
      description: This model lists the zone group based on the zone group ID.
      properties:
        ZoneDBType:
          description: Type of zone database; possible values include Config and Running
          minLength: 1
          type: string
        ZoneGroupId:
          description: Unique zone group identifier
          minLength: 1
          type: string
        zoneGroupName:
          description: Zone group name
          minLength: 1
          type: string
        OriginatorNQN:
          description: NVMe Qualified Name (NQN) of the CDC instance
          minLength: 1
          type: string
        Type:
          minLength: 1
          type: string
        ActivateStatus:
          minLength: 1
          type: string
        ActivationState:
          minLength: 1
          type: string
        NumberZones:
          description: Number of zones within the zonegroup
          type: number
        '@odata.id':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - ActivateStatus
      - ActivationState
      - NumberZones
      - OriginatorNQN
      - Type
      - ZoneDBType
      - ZoneGroupId
      - zoneGroupName
      title: ZoneGroupGET-ID
      x-examples:
        example-1:
          ZoneDBType: config
          ZoneGroupId: config:ZoneGroup1:nqn.1988-11.com.dell:SFSS:1:20210706164404e8
          zoneGroupName: ZoneGroup1
          OriginatorNQN: nqn.1988-11.com.dell:SFSS:1:20210706164404e8
          Type: Manual
          ActivateStatus: DeActivate
          ActivationState: NotActive
          NumberZones: 0
          '@odata.id': /redfish/v1/SFSS/1/ZoneDBs(config)/ZoneGroups(config:ZoneGroup1:nqn.1988-11.com.dell:SFSS:1:20210706164404e8)
          '@odata.type': "#ZoneGroups.ZoneGroups"
          '@odata.context': /redfish/v1/SFSS/1/ZoneDBs(config)/$metadata#ZoneGroups/ZoneGroups/$entity
    ZoneGET:
      description: This model lists all the zones present in the configuration database.
      properties:
        Zones:
          description: A set of zones
          items:
            $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__Hosts_200_response_Hosts_inner"
          minItems: 1
          type: array
          uniqueItems: true
        Zones@odata.count:
          description: Number of zones
          type: number
        '@odata.id':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - Zones
      - Zones@odata.count
      title: ZoneGET
      x-examples:
        example-1:
          Zones:
          - '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8')/Zones('config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8:DhanaZone')
          Zones@odata.count: 1
          '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:ZoneGrpDhana1111:')/Zones?$source=config
          '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:ZoneGrpDhana1111:')/$metadata#Zones
          '@odata.type': "#ZonesCollection.ZonesCollection"
    ZoneMemberGET-ID:
      description: This model lists detailed information about the zone member based
        on the zone member ID.
      properties:
        Role:
          description: Type of endpoint; possible value includes host and subsystem
          minLength: 1
          type: string
        ZoneMemberId:
          description: Unique zone member identifier
          minLength: 1
          type: string
        ZoneMemberType:
          description: Possible values include NVMe qualified name (NQN) and Fully
            Qualified Name (FQN)
          minLength: 1
          type: string
        '@odata.id':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - Role
      - ZoneMemberId
      - ZoneMemberType
      title: ZoneMemberGET-ID
      x-examples:
        example-1:
          Role: Subsystem
          ZoneMemberId: config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host
          ZoneMemberType: NQN
          '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host')
          '@odata.type': "#ZoneMembers.ZoneMembers"
          '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers/ZoneMembers/$entity
    ZoneMemberGET:
      description: 'This model lists all the configured zone members. '
      properties:
        ZoneMembers:
          description: A set of zone members
          items:
            $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__Hosts_200_response_Hosts_inner"
          minItems: 1
          type: array
          uniqueItems: true
        ZoneMembers@odata.count:
          description: Number of zone members
          type: number
        '@odata.id':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - ZoneMembers
      - ZoneMembers@odata.count
      title: ZoneMemberGET
      x-examples:
        example-1:
          ZoneMembers:
          - '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3000')
          - '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:AliasMemberIdDhana')
          - '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host')
          ZoneMembers@odata.count: 3
          '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers?$source=config
          '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers
          '@odata.type': "#ZoneMembersCollection.ZoneMembersCollection"
    ZoneMemberGET-EXPAND:
      description: This model lists detailed information about all the configured
        zone members.
      properties:
        ZoneMembers:
          description: A set of zone members
          items:
            $ref: "#/components/schemas/ZoneMemberGET_EXPAND_ZoneMembers_inner"
          minItems: 1
          type: array
          uniqueItems: true
        ZoneMembers@odata.count:
          description: Number of zone members
          type: number
        '@odata.id':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - ZoneMembers
      - ZoneMembers@odata.count
      title: ZoneMemberGET-Expand
      x-examples:
        example-1:
          ZoneMembers:
          - Role: Subsystem
            ZoneMemberId: config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3000
            ZoneMemberType: FullQualifiedName
            '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3000')
            '@odata.type': "#ZoneMembers.ZoneMembers"
            '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers/ZoneMembers/$entity
          - Role: Subsystem
            ZoneMemberId: config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:AliasMemberIdDhana
            ZoneMemberType: ZoneAlias
            '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:AliasMemberIdDhana')
            '@odata.type': "#ZoneMembers.ZoneMembers"
            '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers/ZoneMembers/$entity
          - Role: Subsystem
            ZoneMemberId: config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host
            ZoneMemberType: NQN
            '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host')
            '@odata.type': "#ZoneMembers.ZoneMembers"
            '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers/ZoneMembers/$entity
          ZoneMembers@odata.count: 3
          '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers?$source=config&$expand=ZoneMembers
          '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers
          '@odata.type': "#ZoneMembersCollection.ZoneMembersCollection"
    ZoneMemeber-ENUMS:
      description: This model lists the supported enumerations for the zone member
        configuration.
      properties:
        Role:
          description: Type of endpoint; possible values include host and subsystem
          items:
            type: object
          type: array
        ZoneMemberType:
          description: Possible values include NVMe Qualified Name (NQN) and Fully
            Qualified Name (FQN)
          items:
            type: object
          type: array
      required:
      - Role
      - ZoneMemberType
      title: ZoneMembers-Enums
      x-examples:
        example-1:
          Role:
          - ZoneAlias
          - Host
          - Subsystem
          ZoneMemberType:
          - NQN
          - FullQualifiedName
          - ZoneAlias
    ZoneAlias-GET-EXPAND:
      description: This model lists detailed information about the configured zone
        aliases.
      properties:
        ZoneAlias:
          items:
            $ref: "#/components/schemas/ZoneAlias_GET_EXPAND_ZoneAlias_inner"
          minItems: 1
          type: array
          uniqueItems: true
        ZoneAlias@odata.count:
          description: Number of zone aliases configured in the CDC instance
          type: number
        '@odata.id':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - ZoneAlias
      - ZoneAlias@odata.count
      title: ZoneAliasGET-Expand
      x-examples:
        example-1:
          ZoneAlias:
          - ZoneAliasId: config:DhanaSampleAlias
            ZoneAliasName: DhanaSampleAlias
            NumberZoneMembers: "1"
            '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')
            '@odata.type': "#ZoneAlias.ZoneAlias"
            '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneAlias/ZoneAlias/$entity
          - ZoneAliasId: config:DhanaSampleAliasTest
            ZoneAliasName: DhanaSampleAliasTest
            NumberZoneMembers: "1"
            '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAliasTest')
            '@odata.type': "#ZoneAlias.ZoneAlias"
            '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneAlias/ZoneAlias/$entity
          ZoneAlias@odata.count: 2
          '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias?$source=config&$expand=ZoneAlias
          '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneAlias
          '@odata.type': "#ZoneAliasCollection.ZoneAliasCollection"
    ZoneAliasMemberGET:
      description: This model lists the configured zone alias members.
      properties:
        ZoneAliasMembers:
          description: Zone  alias members
          items:
            $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__Hosts_200_response_Hosts_inner"
          minItems: 1
          type: array
          uniqueItems: true
        ZoneAliasMembers@odata.count:
          description: Number of zone alias members
          type: number
        '@odata.id':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - ZoneAliasMembers
      - ZoneAliasMembers@odata.count
      title: ZoneAliasMemberGET
      x-examples:
        example-1:
          ZoneAliasMembers:
          - '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3002')
          - '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host')
          ZoneAliasMembers@odata.count: 2
          '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers?$source=config
          '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/$metadata#ZoneAliasMembers
          '@odata.type': "#ZoneMembersCollection.ZoneMembersCollection"
    ZoneAliasGET-ID:
      description: This model lists the zone alias information based on the specified
        zone alias ID.
      properties:
        ZoneAliasId:
          description: 'Unique zone alias identifier '
          minLength: 1
          type: string
        ZoneAliasName:
          description: Friendly name for the zone alias
          minLength: 1
          type: string
        NumberZoneMembers:
          description: Number of zone members that are part of the zone alias
          minLength: 1
          type: string
        '@odata.id':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - NumberZoneMembers
      - ZoneAliasId
      - ZoneAliasName
      title: ZoneAliasGET-ID
      x-examples:
        example-1:
          ZoneAliasId: config:DhanaSampleAliasTest
          ZoneAliasName: DhanaSampleAliasTest
          NumberZoneMembers: "1"
          '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAliasTest')
          '@odata.type': "#ZoneAlias.ZoneAlias"
          '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneAlias/ZoneAlias/$entity
    ZoneAliasMemberGET-ID:
      description: 'This model lists the zone alias member information based on the
        zone alias member ID. '
      properties:
        ZoneAliasMemberId:
          description: Unique identifier of the zone alias member (host or subsystem)
          minLength: 1
          type: string
        ZoneAliasMemberType:
          description: Type of endpoint; possible values include host and subsystem
          minLength: 1
          type: string
        Role:
          minLength: 1
          type: string
        '@odata.id':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - Role
      - ZoneAliasMemberId
      - ZoneAliasMemberType
      title: ZoneAliasMemberGET-ID
      x-examples:
        example-1:
          ZoneAliasMemberId: config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host
          ZoneAliasMemberType: NQN
          Role: Host
          '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host')
          '@odata.type': "#ZoneAliasMembers.ZoneAliasMembers"
          '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/$metadata#ZoneAliasMembers/ZoneAliasMembers/$entity
    ZoneAliasMemberGET-EXPAND:
      description: This model lists detailed information about all the zone alias
        members.
      properties:
        ZoneAliasMembers:
          items:
            $ref: "#/components/schemas/ZoneAliasMemberGET_EXPAND_ZoneAliasMembers_inner"
          minItems: 1
          type: array
          uniqueItems: true
        ZoneAliasMembers@odata.count:
          type: number
        '@odata.id':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - ZoneAliasMembers
      - ZoneAliasMembers@odata.count
      title: ZoneAliasMemberGET-EXPAND
      x-examples:
        example-1:
          ZoneAliasMembers:
          - ZoneAliasMemberType: FullQualifiedName
            ZoneAliasMemberId: config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3002
            Role: Host
            '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3002')
            '@odata.type': "#ZoneAliasMembers.ZoneAliasMembers"
            '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/$metadata#ZoneAliasMembers/ZoneAliasMembers/$entity
          - ZoneAliasMemberId: config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host
            ZoneMemberType: NQN
            Role: Host
            '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host')
            '@odata.type': "#ZoneAliasMembers.ZoneAliasMembers"
            '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/$metadata#ZoneAliasMembers/ZoneAliasMembers/$entity
          ZoneAliasMembers@odata.count: 2
          '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers?$source=config&$expand=ZoneAliasMembers
          '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/$metadata#ZoneAliasMembers
          '@odata.type': "#ZoneMembersCollection.ZoneMembersCollection"
    GlobalPolicies-ENUMS:
      description: This model lists the supported enumerations for the global policy
        configuration.
      properties:
        ZoningPolicy:
          description: Global zoning policy that allows all hosts to communicate with
            all subsystems; disabled by default
          items:
            type: object
          type: array
        NameServerEntityPurgeTOV:
          description: 'Timeout value to remove endpoints (hosts or subsystems) that
            have lost connection with the CDC '
          items:
            type: object
          type: array
      required:
      - NameServerEntityPurgeTOV
      - ZoningPolicy
      title: GlobalPolicies-ENUMS
      x-examples:
        example-1:
          ZoningPolicy:
          - Enable
          - Disable
          NameServerEntityPurgeTOV:
          - NoTimeout
          - 5Sec
          - 4Hr
          - 8Hr
          - 24Hr
          - 48Hr
          - 10Min
    GlobalPoliciesGET:
      description: This model lists all the configured global policies.
      properties:
        ZoningPolicy:
          description: Global zoning policy that allows all hosts to communicate with
            all subsystems; disabled by default
          minLength: 1
          type: string
        NameServerEntityPurgeTOV:
          description: 'Timeout value to remove endpoints (hosts or subsystems) that
            have lost connection with the CDC '
          minLength: 1
          type: string
        '@odata.id':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - NameServerEntityPurgeTOV
      - ZoningPolicy
      title: GlobalPoliciesGET
      x-examples:
        example-1:
          ZoningPolicy: Enable
          NameServerEntityPurgeTOV: 4Hr
          '@odata.id': /redfish/v1/stfs/1/GlobalPolicies
          '@odata.type': "#GlobalPolicies.GlobalPolicies"
          '@odata.context': /redfish/v1/stfs/1/$metadata#GlobalPolicies/GlobalPolicies/$entity
    DDCPOST:
      description: This model configures a Direct Discovery Controller (DDC).
      properties:
        TransportAddress:
          minLength: 1
          type: string
        TransportAddressFamily:
          minLength: 1
          type: string
        PortId:
          type: number
        TransportType:
          minLength: 1
          type: string
        Activate:
          type: boolean
      required:
      - Activate
      - PortId
      - TransportAddress
      - TransportAddressFamily
      - TransportType
      title: DDCPOST
      x-examples:
        example-1:
          TransportAddress: 111.111.111.115
          TransportAddressFamily: IPV4
          PortId: 5450
          TransportType: TCP
          Activate: true
    DDCPUT:
      description: This model updates DDC configuration.
      properties:
        Activate:
          type: boolean
      required:
      - Activate
      title: DDCPUT
      x-examples:
        example-1:
          Activate: false
    HostPOST:
      description: This model configures a host.
      properties:
        NQN:
          minLength: 1
          type: string
        TransportAddress:
          minLength: 1
          type: string
        TransportAddressFamily:
          minLength: 1
          type: string
        TransportType:
          minLength: 1
          type: string
      required:
      - NQN
      - TransportAddress
      - TransportAddressFamily
      - TransportType
      title: HostPOST
      x-examples:
        example-1:
          NQN: nqn.2014-08.org.nvmexpress:uuid:host
          TransportAddress: 11.22.33.44
          TransportAddressFamily: IPV4
          TransportType: TCP
    SubsystemPOST:
      description: This model configures a subsystem.
      properties:
        NQN:
          minLength: 1
          type: string
        TransportAddress:
          minLength: 1
          type: string
        TransportAddressFamily:
          minLength: 1
          type: string
        PortId:
          type: number
        TransportType:
          minLength: 1
          type: string
        TransportServiceId:
          minLength: 1
          type: string
      required:
      - NQN
      - PortId
      - TransportAddress
      - TransportAddressFamily
      - TransportServiceId
      - TransportType
      title: SubsystemPOST
      x-examples:
        example-1:
          NQN: nqn.2014-08.org.nvmexpress:uuid:subsystem
          TransportAddress: 1.1.1.1
          TransportAddressFamily: IPV4
          PortId: 5450
          TransportType: TCP
          TransportServiceId: "900"
    ZoneGroupPOST:
      description: This model configures a zone group.
      properties:
        ZoneDBType:
          minLength: 1
          type: string
        ZoneGroupName:
          minLength: 1
          type: string
      required:
      - ZoneDBType
      - ZoneGroupName
      title: ZoneGroup POST
      x-examples:
        example-1:
          ZoneDBType: config
          ZoneGroupName: ZoneGrpDhana1111
    ZoneGroupPUT:
      description: This model updates zone group configuration.
      properties:
        ActivateStatus:
          minLength: 1
          type: string
      required:
      - ActivateStatus
      title: ZoneGroupPUT
      x-examples:
        example-1:
          ActivateStatus: DeActivate
    ZonePOST-Payload:
      description: This model configures a zone.
      properties:
        ZoneName:
          minLength: 1
          type: string
      required:
      - ZoneName
      title: ZonePOST
      x-examples:
        example-1:
          ZoneName: DhanaZone
    ZoneMemberPOST-Payload:
      description: This model configures a zone member.
      properties:
        ZoneMemberId:
          minLength: 1
          type: string
        ZoneMemberType:
          minLength: 1
          type: string
        Role:
          minLength: 1
          type: string
      required:
      - Role
      - ZoneMemberId
      - ZoneMemberType
      title: ZoneMemberPOST
      x-examples:
        example-1:
          ZoneMemberId: nqn.2014-08.org.nvmexpress:uuid:host
          ZoneMemberType: NQN
          Role: Host
    ZoneMemberPUT-Payload:
      description: This model updates zone member configuration.
      properties:
        Role:
          minLength: 1
          type: string
      required:
      - Role
      title: ZoneMemberPUT
      x-examples:
        example-1:
          Role: Subsystem
    ZoneAliasPOST-Payload:
      description: This model configures a zone alias.
      properties:
        ZoneDBType:
          minLength: 1
          type: string
        ZoneAliasName:
          minLength: 1
          type: string
      required:
      - ZoneAliasName
      - ZoneDBType
      title: ZoneAliasPOST
      x-examples:
        example-1:
          ZoneDBType: config
          ZoneAliasName: DhanaSampleAlias123
    ZoneAliasMemberPOST-Payload:
      description: This model configures a zone alias member.
      properties:
        ZoneAliasMemberId:
          minLength: 1
          type: string
        ZoneAliasMemberType:
          minLength: 1
          type: string
        Role:
          minLength: 1
          type: string
      required:
      - Role
      - ZoneAliasMemberId
      - ZoneAliasMemberType
      title: ZoneAliasMemberPOST
      x-examples:
        example-1:
          ZoneAliasMemberId: nqn.2014-08.org.nvmexpress:uuid:host
          ZoneAliasMemberType: NQN
          Role: Host
    ZoneAliasMemberPUT-Payload:
      description: This model updates a zone alias member configuration.
      properties:
        Role:
          minLength: 1
          type: string
      required:
      - Role
      title: ZoneAliasMemberPUT
      x-examples:
        example-1:
          Role: Host
    GlobalPoliciesPOST-Payload:
      description: This model configures the global policy in SFSS.
      properties:
        ZoningPolicy:
          minLength: 1
          type: string
        NameServerEntityPurgeTOV:
          minLength: 1
          type: string
      required:
      - NameServerEntityPurgeTOV
      - ZoningPolicy
      title: GlobalPoliciesPOST
      x-examples:
        example-1:
          ZoningPolicy: Disable
          NameServerEntityPurgeTOV: 4Hr
    get_redfish_v1_SFSS_Instance__Hosts_200_response_Hosts_inner:
      example:
        '@odata.id': '@odata.id'
      properties:
        '@odata.id':
          minLength: 1
          type: string
      required:
      - '@odata.id'
    get_redfish_v1_SFSS_Instance__Hosts_200_response:
      description: ""
      example:
        Hosts:
        - '@odata.id': '@odata.id'
        - '@odata.id': '@odata.id'
        '@odata.id': '@odata.id'
        '@odata.type': '@odata.type'
        Hosts@odata.count: 0.8008281904610115
        '@odata.context': '@odata.context'
      properties:
        Hosts:
          description: Host information
          items:
            $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__Hosts_200_response_Hosts_inner"
          minItems: 1
          type: array
          uniqueItems: true
        Hosts@odata.count:
          description: Number of hosts registered with the CDC instance
          type: number
        '@odata.id':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - Hosts
      - Hosts@odata.count
      x-examples:
        example-1:
          Hosts:
          - '@odata.id': /redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@11.22.33.44:V4::0:0:TCP')
          - '@odata.id': /redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:V4::0:0:TCP')
          - '@odata.id': /redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@4.4.4.4:V4::0:0:TCP')
          Hosts@odata.count: 3
          '@odata.id': /redfish/v1/SFSS/1/Hosts
          '@odata.context': /redfish/v1/SFSS/1/$metadata#Hosts
          '@odata.type': "#HostsCollection.HostsCollection"
    post_redfish_v1_SFSS_Instance__Hosts_request:
      description: ""
      properties:
        NQN:
          description: NVMe Qualified Name (NQN) of the host
          minLength: 1
          type: string
        TransportAddress:
          description: IP address of the host
          minLength: 1
          type: string
        TransportAddressFamily:
          description: IP address family; possible values include IPv4 and IPv6
          minLength: 1
          type: string
        TransportType:
          description: |
            Protocol used for communication with the host; possible value is TCP
          minLength: 1
          type: string
      required:
      - NQN
      - TransportAddress
      - TransportAddressFamily
      - TransportType
      x-examples:
        example-1:
          NQN: nqn.2014-08.org.nvmexpress:uuid:host
          TransportAddress: 11.22.33.44
          TransportAddressFamily: IPV4
          TransportType: TCP
    post_redfish_v1_SFSS_Instance__Hosts_200_response:
      description: ""
      example:
        Id: Id
      properties:
        Id:
          minLength: 1
          type: string
      required:
      - Id
      x-examples:
        example-1:
          Id: nqn.2014-08.org.nvmexpress:uuid:host@11.22.33.44:V4::0:0:TCP
    get_redfish_v1_SFSS_Instance__Hosts_Id_200_response:
      description: ""
      example:
        TransportAddress: TransportAddress
        '@odata.type': '@odata.type'
        NQN: NQN
        '@odata.context': '@odata.context'
        TREQ: TREQ
        '@odata.id': '@odata.id'
        TSAS: TSAS
        TransportAddressFamily: TransportAddressFamily
        FailureReason: FailureReason
        RegistrationType: RegistrationType
        Id: Id
        TransportType: TransportType
        ConnectionStatus: ConnectionStatus
      properties:
        Id:
          description: Unique Identity of the Entity - Fully Qualified Name (FQN)
            of the host
          minLength: 1
          type: string
        NQN:
          description: NVMe Qualified Name (NQN) of the host
          minLength: 1
          type: string
        TransportAddress:
          description: IP address of the host
          minLength: 1
          type: string
        TransportAddressFamily:
          description: |
            IP address family; possible values include IPv4 and IPv6
          minLength: 1
          type: string
        TransportType:
          description: Supported transport types that can be used for communication
            with the host; possible value is TCP
          minLength: 1
          type: string
        TREQ:
          description: "Transport Request Type (TREQ); possible values include Secure\
            \ channel not specified, Secure channel required, and Secure channel not\
            \ required"
          minLength: 1
          type: string
        TSAS:
          description: Possible values are No Security and TLS
          minLength: 1
          type: string
        RegistrationType:
          description: "Type of endpoint registration; possible values include Implicit,\
            \ Explicit, Pull, and Manual"
          minLength: 1
          type: string
        ConnectionStatus:
          description: Status of the TCP connection between the host and the CDC instance;
            possible values include Online and Offline
          minLength: 1
          type: string
        FailureReason:
          description: "Reason for the host being offline; possible values include\
            \ NONE, KATO, and Peer Closure"
          minLength: 1
          type: string
        '@odata.id':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - ConnectionStatus
      - FailureReason
      - Id
      - NQN
      - RegistrationType
      - TREQ
      - TSAS
      - TransportAddress
      - TransportAddressFamily
      - TransportType
      x-examples:
        example-1:
          Id: nqn.2014-08.org.nvmexpress:uuid:host@4.4.4.4:V4::0:0:TCP
          NQN: nqn.2014-08.org.nvmexpress:uuid:host
          TransportAddress: 4.4.4.4
          TransportAddressFamily: IPV4
          TransportType: TCP
          TREQ: Secure channel Not specified
          TSAS: No Security
          RegistrationType: Manual
          ConnectionStatus: Offline
          FailureReason: NONE
          '@odata.id': /redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@4.4.4.4:V4::0:0:TCP')
          '@odata.type': "#Hosts.Hosts"
          '@odata.context': /redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity
    get_https__IP_redfish_v1_SFSS_Instance__Hosts__expand_Hosts_200_response_Hosts_inner:
      example:
        TransportAddress: TransportAddress
        '@odata.type': '@odata.type'
        NQN: NQN
        '@odata.context': '@odata.context'
        TREQ: TREQ
        '@odata.id': '@odata.id'
        TSAS: TSAS
        TransportAddressFamily: TransportAddressFamily
        FailureReason: FailureReason
        RegistrationType: RegistrationType
        Id: Id
        TransportType: TransportType
        ConnectionStatus: ConnectionStatus
      properties:
        Id:
          description: Unique Identity of the Entity - Fully Qualified Name (FQN)
            of the host
          minLength: 1
          type: string
        NQN:
          description: NVMe Qualified Name (NQN) of the host
          minLength: 1
          type: string
        TransportAddress:
          description: IP address of the host
          minLength: 1
          type: string
        TransportAddressFamily:
          description: IP address family; possible values include IPv4 and IPv6
          minLength: 1
          type: string
        TransportType:
          description: Supported transport types that can be used for communication
            with the host; possible value is TCP
          minLength: 1
          type: string
        TREQ:
          description: "Transport Request Type (TREQ); possible values include Secure\
            \ channel not specified, Secure channel required, and Secure channel not\
            \ required"
          minLength: 1
          type: string
        TSAS:
          description: Possible values are No Security and TLS
          minLength: 1
          type: string
        RegistrationType:
          description: "Type of endpoint registration; possible values include Implicit,\
            \ Explicit, Pull, and Manual"
          minLength: 1
          type: string
        ConnectionStatus:
          description: Status of the TCP connection between the host and the CDC instance;
            possible values include Online and Offline
          minLength: 1
          type: string
        FailureReason:
          description: "Reason for the host being offline; possible values include\
            \ NONE, KATO, and Peer Closure"
          minLength: 1
          type: string
        '@odata.id':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - ConnectionStatus
      - FailureReason
      - Id
      - NQN
      - RegistrationType
      - TREQ
      - TSAS
      - TransportAddress
      - TransportAddressFamily
      - TransportType
    get_https__IP_redfish_v1_SFSS_Instance__Hosts__expand_Hosts_200_response:
      description: ""
      example:
        Hosts:
        - TransportAddress: TransportAddress
          '@odata.type': '@odata.type'
          NQN: NQN
          '@odata.context': '@odata.context'
          TREQ: TREQ
          '@odata.id': '@odata.id'
          TSAS: TSAS
          TransportAddressFamily: TransportAddressFamily
          FailureReason: FailureReason
          RegistrationType: RegistrationType
          Id: Id
          TransportType: TransportType
          ConnectionStatus: ConnectionStatus
        - TransportAddress: TransportAddress
          '@odata.type': '@odata.type'
          NQN: NQN
          '@odata.context': '@odata.context'
          TREQ: TREQ
          '@odata.id': '@odata.id'
          TSAS: TSAS
          TransportAddressFamily: TransportAddressFamily
          FailureReason: FailureReason
          RegistrationType: RegistrationType
          Id: Id
          TransportType: TransportType
          ConnectionStatus: ConnectionStatus
        '@odata.id': '@odata.id'
        '@odata.type': '@odata.type'
        Hosts@odata.count: 0.8008281904610115
        '@odata.context': '@odata.context'
      properties:
        Hosts:
          description: Host information
          items:
            $ref: "#/components/schemas/get_https__IP_redfish_v1_SFSS_Instance__Hosts__expand_Hosts_200_response_Hosts_inner"
          minItems: 1
          type: array
          uniqueItems: true
        Hosts@odata.count:
          description: Number of hosts registered with the CDC instance
          type: number
        '@odata.id':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - Hosts
      - Hosts@odata.count
      x-examples:
        example-1:
          Hosts:
          - Id: nqn.2014-08.org.nvmexpress:uuid:host@11.22.33.44:V4::0:0:TCP
            NQN: nqn.2014-08.org.nvmexpress:uuid:host
            TransportAddress: 11.22.33.44
            TransportAddressFamily: IPV4
            TransportType: TCP
            TREQ: Secure channel Not specified
            TSAS: No Security
            RegistrationType: Manual
            ConnectionStatus: Offline
            FailureReason: NONE
            '@odata.id': /redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@11.22.33.44:V4::0:0:TCP')
            '@odata.type': "#Hosts.Hosts"
            '@odata.context': /redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity
          - Id: nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:V4::0:0:TCP
            NQN: nqn.2014-08.org.nvmexpress:uuid:host
            TransportAddress: 1.2.3.4
            TransportAddressFamily: IPV4
            TransportType: TCP
            TREQ: Secure channel Not specified
            TSAS: No Security
            RegistrationType: Manual
            ConnectionStatus: Offline
            FailureReason: NONE
            '@odata.id': /redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:V4::0:0:TCP')
            '@odata.type': "#Hosts.Hosts"
            '@odata.context': /redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity
          Hosts@odata.count: 2
          '@odata.id': /redfish/v1/SFSS/1/Hosts?$expand=Hosts&$filter=TransportAddress%20eq%2011.22.33.44%20or%20TransportAddress%20eq%201.2.3.4
          '@odata.context': /redfish/v1/SFSS/1/$metadata#Hosts
          '@odata.type': "#HostsCollection.HostsCollection"
    get_redfish_v1_SFSS_Instance__Subsystems__Id___200_response:
      description: ""
      example:
        SubType: SubType
        ASQZ: 1.4658129805029452
        TransportAddress: TransportAddress
        '@odata.type': '@odata.type'
        EKType: EKType
        ControllerId: 6.027456183070403
        PortId: 0.8008281904610115
        NQN: NQN
        '@odata.context': '@odata.context'
        TREQ: TREQ
        TransportServiceId: TransportServiceId
        '@odata.id': '@odata.id'
        TSAS: TSAS
        RcvdGenCounter: 5.962133916683182
        TransportAddressFamily: TransportAddressFamily
        RegistrationType: RegistrationType
        Id: Id
        TransportType: TransportType
        ConnectionStatus: ConnectionStatus
      properties:
        Id:
          description: Unique Identity of the Entity - Fully Qualified Name (FQN)
            of the subsystem
          minLength: 1
          type: string
        NQN:
          description: NVMe Qualified Name (NQN) of the subsystem
          minLength: 1
          type: string
        TransportAddress:
          description: IP address of the subsystem
          minLength: 1
          type: string
        TransportAddressFamily:
          description: IP address family; possible values include IPv4 and IPv6
          minLength: 1
          type: string
        PortId:
          description: Internal Port ID that is mapped to the NVMe Subsystem Port
          type: number
        ControllerId:
          description: "TCP controller ID, 65535"
          type: number
        TransportType:
          description: "Supported transport types that can be used for communication\
            \ with the controller; possible values are TCP, RoCE, FC"
          minLength: 1
          type: string
        SubType:
          description: "Possible values include Reserved, Discovery Service, and NVM\
            \ Subsystem"
          minLength: 1
          type: string
        TREQ:
          description: "Transport Request Type (TREQ); possible values include Secure\
            \ channel not specified, Secure channel required, and Secure channel not\
            \ required"
          minLength: 1
          type: string
        ASQZ:
          description: Admin queue size
          type: number
        TransportServiceId:
          description: NVMe Transport Service Identifier as an ASCII string
          minLength: 1
          type: string
        TSAS:
          description: NVMe Transport Service Address SubType
          minLength: 1
          type: string
        RcvdGenCounter:
          description: Generation Counter that is maintained for the last received
            Get Log Page command
          type: number
        RegistrationType:
          description: "Type of endpoint registration; possible values include Implicit,\
            \ Explicit, Pull, and Manual"
          minLength: 1
          type: string
        ConnectionStatus:
          description: Status of the TCP connection between the subsystem and the
            CDC instance; possible values include Online and Offline
          minLength: 1
          type: string
        EKType:
          description: "Entity Key Type; possible values are Unknown, Port, and TRADDR"
          minLength: 1
          type: string
        '@odata.id':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - ASQZ
      - ConnectionStatus
      - ControllerId
      - EKType
      - Id
      - NQN
      - PortId
      - RcvdGenCounter
      - RegistrationType
      - SubType
      - TREQ
      - TSAS
      - TransportAddress
      - TransportAddressFamily
      - TransportServiceId
      - TransportType
      x-examples:
        example-1:
          Id: nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:900:0:0:TCP
          NQN: nqn.2014-08.org.nvmexpress:uuid:subsystem
          TransportAddress: 3.3.3.3
          TransportAddressFamily: IPV4
          PortId: 5453
          ControllerId: 65535
          TransportType: TCP
          SubType: NVM Subsystem
          TREQ: Secure channel Not specified
          ASQZ: 32
          TransportServiceId: "900"
          TSAS: No Security
          RcvdGenCounter: 0
          RegistrationType: Manual
          ConnectionStatus: Offline
          EKType: TRADDR
          '@odata.id': /redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:900:0:0:TCP')
          '@odata.type': "#Subsystems.Subsystems"
          '@odata.context': /redfish/v1/SFSS/1/$metadata#Subsystems/Subsystems/$entity
    get_redfish_v1_SFSS_Instance__Subsystems_200_response_Subsystems_inner:
      example:
        '@odata.id': '@odata.id'
      properties:
        '@odata.id':
          minLength: 1
          type: string
    get_redfish_v1_SFSS_Instance__Subsystems_200_response:
      description: ""
      example:
        '@odata.id': '@odata.id'
        '@odata.type': '@odata.type'
        Subsystems@odata.count: 0.8008281904610115
        '@odata.context': '@odata.context'
        Subsystems:
        - '@odata.id': '@odata.id'
        - '@odata.id': '@odata.id'
      properties:
        Subsystems:
          description: Subsystem information
          items:
            $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__Subsystems_200_response_Subsystems_inner"
          minItems: 1
          type: array
          uniqueItems: true
        Subsystems@odata.count:
          description: Number of subsystems registered with the CDC instance
          type: number
        '@odata.id':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - Subsystems@odata.count
      x-examples:
        example-1:
          Subsystems:
          - '@odata.id': /redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@2.2.2.2:V4:600:0:0:TCP')
          - '@odata.id': /redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:400:0:0:TCP')
          - '@odata.id': /redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@1.1.1.1:V4:900:0:0:TCP')
          Subsystems@odata.count: 3
          '@odata.id': /redfish/v1/SFSS/1/Subsystems
          '@odata.context': /redfish/v1/SFSS/1/$metadata#Subsystems
          '@odata.type': "#SubsystemsCollection.SubsystemsCollection"
    post_redfish_v1_SFSS_Instance__Subsystems_request:
      description: ""
      properties:
        NQN:
          description: NVMe Qualified Name (NQN) of the subsystem
          minLength: 1
          type: string
        TransportAddress:
          description: IP address of the subsystem
          minLength: 1
          type: string
        TransportAddressFamily:
          description: IP address family; possible values include IPv4 and IPv6
          minLength: 1
          type: string
        PortId:
          description: Internal Port ID that is mapped to the NVMe Subsystem Port
          type: number
        TransportType:
          description: "Supported transport types that can be used for communication\
            \ with the controller; possible values are TCP, RoCE, FC"
          minLength: 1
          type: string
        TransportServiceId:
          description: NVMe Transport Service Identifier as an ASCII string
          minLength: 1
          type: string
      required:
      - NQN
      - PortId
      - TransportAddress
      - TransportAddressFamily
      - TransportServiceId
      - TransportType
      x-examples:
        example-1:
          NQN: nqn.2014-08.org.nvmexpress:uuid:subsystem
          TransportAddress: 1.1.1.1
          TransportAddressFamily: IPV4
          PortId: 5450
          TransportType: TCP
          TransportServiceId: "900"
    post_redfish_v1_SFSS_Instance__Subsystems_200_response:
      description: ""
      example:
        Id: Id
      properties:
        Id:
          minLength: 1
          type: string
      required:
      - Id
      x-examples:
        example-1:
          Id: nqn.2014-08.org.nvmexpress:uuid:subsystem@1.1.1.1:V4:900:0:0:TCP
    get_https__IP_redfish_v1_SFSS_Instance__Hosts_Enums_200_response:
      description: ""
      example:
        TSAS:
        - TSAS
        - TSAS
        TransportAddressFamily:
        - TransportAddressFamily
        - TransportAddressFamily
        EKType:
        - EKType
        - EKType
        FailureReason:
        - FailureReason
        - FailureReason
        RegistrationType:
        - RegistrationType
        - RegistrationType
        TransportType:
        - TransportType
        - TransportType
        ConnectionStatus:
        - ConnectionStatus
        - ConnectionStatus
        TREQ:
        - TREQ
        - TREQ
      properties:
        TransportAddressFamily:
          description: IP address family; possible values include IPv4 and IPv6
          items:
            type: string
          type: array
        EKType:
          description: "Entity Key Type; possible values are Unknown, Port, and TRADDR"
          items:
            type: string
          type: array
        FailureReason:
          description: "Reason for the host being offline; possible values include\
            \ NONE, KATO, and Peer Closure"
          items:
            type: string
          type: array
        RegistrationType:
          description: "Type of endpoint registration; possible values include Implicit,\
            \ Explicit, Pull, and Manual"
          items:
            type: string
          type: array
        ConnectionStatus:
          description: Status of the TCP connection between the host and the CDC instance;
            possible values include Online and Offline
          items:
            type: string
          type: array
        TREQ:
          description: "Transport Request Type (TREQ); possible values include Secure\
            \ channel not specified, Secure channel required, and Secure channel not\
            \ required"
          items:
            type: string
          type: array
        TransportType:
          description: "Supported transport types that can be used for communication\
            \ with the controller; possible values are TCP, RoCE, FC"
          items:
            type: string
          type: array
        TSAS:
          description: Possible values are No Security and TLS
          items:
            type: string
          type: array
      required:
      - ConnectionStatus
      - EKType
      - FailureReason
      - RegistrationType
      - TREQ
      - TSAS
      - TransportAddressFamily
      - TransportType
      x-examples:
        example-1:
          TransportAddressFamily:
          - IPV4
          - IPV6
          EKType:
          - Port
          - TRADDR
          FailureReason:
          - NONE
          - KATO
          - Peer Closure
          RegistrationType:
          - Implicit
          - Explicit
          - Pull
          - Manual
          ConnectionStatus:
          - Offline
          - Online
          TREQ:
          - Secure channel Not specified
          - Secure Channel Required
          - Secure Channel Not required
          TransportType:
          - TCP
          TSAS:
          - No Security
          - TLS
    get_redfish_v1_SFSS_Instance__Subsystems__expand_Subsystems_200_response_Subsystems_inner:
      example:
        SubType: SubType
        ASQZ: 1.4658129805029452
        TransportAddress: TransportAddress
        '@odata.type': '@odata.type'
        EKType: EKType
        ControllerId: 6.027456183070403
        PortId: 0.8008281904610115
        NQN: NQN
        '@odata.context': '@odata.context'
        TREQ: TREQ
        TransportServiceId: TransportServiceId
        '@odata.id': '@odata.id'
        TSAS: TSAS
        RcvdGenCounter: 5.962133916683182
        TransportAddressFamily: TransportAddressFamily
        RegistrationType: RegistrationType
        Id: Id
        TransportType: TransportType
        ConnectionStatus: ConnectionStatus
      properties:
        Id:
          description: Unique Identity of the Entity - Fully Qualified Name (FQN)
            of the subsystem
          minLength: 1
          type: string
        NQN:
          description: NVMe Qualified Name (NQN) of the subsystem
          minLength: 1
          type: string
        TransportAddress:
          description: IP address of the subsystem
          minLength: 1
          type: string
        TransportAddressFamily:
          description: IP address family; possible values include IPv4 and IPv6
          minLength: 1
          type: string
        PortId:
          description: Internal Port ID that is mapped to the NVMe Subsystem Port
          type: number
        ControllerId:
          description: "TCP controller ID, 65535"
          type: number
        TransportType:
          description: "Supported transport types that can be used for communication\
            \ with the controller; possible values are TCP, RoCE, FC"
          minLength: 1
          type: string
        SubType:
          description: "Possible values include Reserved, Discovery Service, and NVM\
            \ Subsystem"
          minLength: 1
          type: string
        TREQ:
          description: "Transport Request Type (TREQ); possible values include Secure\
            \ channel not specified, Secure channel required, and Secure channel not\
            \ required"
          minLength: 1
          type: string
        ASQZ:
          description: Admin Queue Size
          type: number
        TransportServiceId:
          description: NVMe Transport Service Identifier as an ASCII string
          minLength: 1
          type: string
        TSAS:
          description: NVMe Transport Service Address SubType
          minLength: 1
          type: string
        RcvdGenCounter:
          description: Generation Counter that is maintained for the last received
            Get Log Page command
          type: number
        RegistrationType:
          description: "Type of endpoint registration; possible values include Implicit,\
            \ Explicit, Pull, and Manual"
          minLength: 1
          type: string
        ConnectionStatus:
          description: Status of the TCP connection between the subsystem and the
            CDC instance; possible values include Online and Offline
          minLength: 1
          type: string
        EKType:
          description: "Entity Key Type; possible values are Unknown, Port, and TRADDR"
          minLength: 1
          type: string
        '@odata.id':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - ASQZ
      - ConnectionStatus
      - ControllerId
      - EKType
      - Id
      - NQN
      - PortId
      - RcvdGenCounter
      - RegistrationType
      - SubType
      - TREQ
      - TSAS
      - TransportAddress
      - TransportAddressFamily
      - TransportServiceId
      - TransportType
    get_redfish_v1_SFSS_Instance__Subsystems__expand_Subsystems_200_response:
      description: ""
      example:
        '@odata.id': '@odata.id'
        '@odata.type': '@odata.type'
        Subsystems@odata.count: 5.637376656633329
        '@odata.context': '@odata.context'
        Subsystems:
        - SubType: SubType
          ASQZ: 1.4658129805029452
          TransportAddress: TransportAddress
          '@odata.type': '@odata.type'
          EKType: EKType
          ControllerId: 6.027456183070403
          PortId: 0.8008281904610115
          NQN: NQN
          '@odata.context': '@odata.context'
          TREQ: TREQ
          TransportServiceId: TransportServiceId
          '@odata.id': '@odata.id'
          TSAS: TSAS
          RcvdGenCounter: 5.962133916683182
          TransportAddressFamily: TransportAddressFamily
          RegistrationType: RegistrationType
          Id: Id
          TransportType: TransportType
          ConnectionStatus: ConnectionStatus
        - SubType: SubType
          ASQZ: 1.4658129805029452
          TransportAddress: TransportAddress
          '@odata.type': '@odata.type'
          EKType: EKType
          ControllerId: 6.027456183070403
          PortId: 0.8008281904610115
          NQN: NQN
          '@odata.context': '@odata.context'
          TREQ: TREQ
          TransportServiceId: TransportServiceId
          '@odata.id': '@odata.id'
          TSAS: TSAS
          RcvdGenCounter: 5.962133916683182
          TransportAddressFamily: TransportAddressFamily
          RegistrationType: RegistrationType
          Id: Id
          TransportType: TransportType
          ConnectionStatus: ConnectionStatus
      properties:
        Subsystems:
          description: Subsystem information
          items:
            $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__Subsystems__expand_Subsystems_200_response_Subsystems_inner"
          minItems: 1
          type: array
          uniqueItems: true
        Subsystems@odata.count:
          type: number
        '@odata.id':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - Subsystems
      - Subsystems@odata.count
      x-examples:
        example-1:
          Subsystems:
          - Id: nqn.2014-08.org.nvmexpress:uuid:subsystem@1.1.1.1:V4:900:0:0:TCP
            NQN: nqn.2014-08.org.nvmexpress:uuid:subsystem
            TransportAddress: 1.1.1.1
            TransportAddressFamily: IPV4
            PortId: 5450
            ControllerId: 65535
            TransportType: TCP
            SubType: NVM Subsystem
            TREQ: Secure channel Not specified
            ASQZ: 32
            TransportServiceId: "900"
            TSAS: No Security
            RcvdGenCounter: 0
            RegistrationType: Manual
            ConnectionStatus: Offline
            EKType: TRADDR
            '@odata.id': /redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@1.1.1.1:V4:900:0:0:TCP')
            '@odata.type': "#Subsystems.Subsystems"
            '@odata.context': /redfish/v1/SFSS/1/$metadata#Subsystems/Subsystems/$entity
          - Id: nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:900:0:0:TCP
            NQN: nqn.2014-08.org.nvmexpress:uuid:subsystem
            TransportAddress: 3.3.3.3
            TransportAddressFamily: IPV4
            PortId: 5453
            ControllerId: 65535
            TransportType: TCP
            SubType: NVM Subsystem
            TREQ: Secure channel Not specified
            ASQZ: 32
            TransportServiceId: "900"
            TSAS: No Security
            RcvdGenCounter: 0
            RegistrationType: Manual
            ConnectionStatus: Offline
            EKType: TRADDR
            '@odata.id': /redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@3.3.3.3:V4:900:0:0:TCP')
            '@odata.type': "#Subsystems.Subsystems"
            '@odata.context': /redfish/v1/SFSS/1/$metadata#Subsystems/Subsystems/$entity
          - Id: nqn.2014-08.org.nvmexpress:uuid:subsystem@2.2.2.2:V4:900:0:0:TCP
            NQN: nqn.2014-08.org.nvmexpress:uuid:subsystem
            TransportAddress: 2.2.2.2
            TransportAddressFamily: IPV4
            PortId: 5452
            ControllerId: 65535
            TransportType: TCP
            SubType: NVM Subsystem
            TREQ: Secure channel Not specified
            ASQZ: 32
            TransportServiceId: "900"
            TSAS: No Security
            RcvdGenCounter: 0
            RegistrationType: Manual
            ConnectionStatus: Offline
            EKType: TRADDR
            '@odata.id': /redfish/v1/SFSS/1/Subsystems('nqn.2014-08.org.nvmexpress:uuid:subsystem@2.2.2.2:V4:900:0:0:TCP')
            '@odata.type': "#Subsystems.Subsystems"
            '@odata.context': /redfish/v1/SFSS/1/$metadata#Subsystems/Subsystems/$entity
          Subsystems@odata.count: 3
          '@odata.id': /redfish/v1/SFSS/1/Subsystems?$expand=Subsystems
          '@odata.context': /redfish/v1/SFSS/1/$metadata#Subsystems
          '@odata.type': "#SubsystemsCollection.SubsystemsCollection"
    get_redfish_v1_SFSS_Instance__Subsystems_Enums_200_response:
      description: ""
      example:
        SubType:
        - SubType
        - SubType
        TSAS:
        - TSAS
        - TSAS
        TransportAddressFamily:
        - TransportAddressFamily
        - TransportAddressFamily
        EKType:
        - EKType
        - EKType
        FailureReason:
        - FailureReason
        - FailureReason
        RegistrationType:
        - RegistrationType
        - RegistrationType
        TransportType:
        - TransportType
        - TransportType
        ConnectionStatus:
        - ConnectionStatus
        - ConnectionStatus
        TREQ:
        - TREQ
        - TREQ
      properties:
        TransportAddressFamily:
          description: IP address family; possible values include IPv4 and IPv6
          items:
            type: string
          type: array
        EKType:
          description: "Entity Key Type; possible values are Unknown, Port, and TRADDR"
          items:
            type: string
          type: array
        FailureReason:
          description: "Connection Failure Reason - Possible Values are NONE, Peer\
            \ Closure,Dial Failure, KATO"
          items:
            type: string
          type: array
        RegistrationType:
          description: "Type of endpoint registration; possible values include Implicit,\
            \ Explicit, Pull, and Manual"
          items:
            type: string
          type: array
        ConnectionStatus:
          description: Status of the TCP connection between the subsystem and the
            CDC instance; possible values include Online and Offline
          items:
            type: string
          type: array
        SubType:
          description: "Possible values include Reserved, Discovery Service, and NVM\
            \ Subsystem"
          items:
            type: string
          type: array
        TREQ:
          description: "Transport Request Type (TREQ); possible values include Secure\
            \ channel not specified, Secure channel required, and Secure channel not\
            \ required"
          items:
            type: string
          type: array
        TransportType:
          description: "Supported transport types that can be used for communication\
            \ with the controller; possible values are TCP, RoCE, FC"
          items:
            type: string
          type: array
        TSAS:
          description: NVMe Transport Service Address SubType
          items:
            type: string
          type: array
      required:
      - ConnectionStatus
      - EKType
      - FailureReason
      - RegistrationType
      - SubType
      - TREQ
      - TSAS
      - TransportAddressFamily
      - TransportType
      x-examples:
        example-1:
          TransportAddressFamily:
          - IPV4
          - IPV6
          EKType:
          - Port
          - TRADDR
          FailureReason:
          - NONE
          - KATO
          - Peer Closure
          RegistrationType:
          - Implicit
          - Explicit
          - Pull
          - Manual
          ConnectionStatus:
          - Offline
          - Online
          SubType:
          - Reserved
          - Discovery Service
          - NVM Subsystem
          TREQ:
          - Secure channel Not specified
          - Secure Channel Required
          - Secure Channel Not required
          TransportType:
          - TCP
          TSAS:
          - No Security
          - TLS
    get_https__IP_redfish_v1_SFSS_Instance___DDCs_200_response:
      description: ""
      example:
        DDCs@odata.count: 0.8008281904610115
        '@odata.id': '@odata.id'
        '@odata.type': '@odata.type'
        '@odata.context': '@odata.context'
        DDCs:
        - '@odata.id': '@odata.id'
        - '@odata.id': '@odata.id'
      properties:
        DDCs:
          description: Direct Discovery Controller (DDC) information
          items:
            $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__Hosts_200_response_Hosts_inner"
          minItems: 1
          type: array
          uniqueItems: true
        DDCs@odata.count:
          description: Number of DDCs configured in the CDC instance
          type: number
        '@odata.id':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - DDCs
      - DDCs@odata.count
      x-examples:
        example-1:
          DDCs:
          - '@odata.id': /redfish/v1/SFSS/1/DDCs('@111.111.111.115:V4::0:5450:TCP')
          DDCs@odata.count: 1
          '@odata.id': /redfish/v1/SFSS/1/DDCs
          '@odata.context': /redfish/v1/SFSS/1/$metadata#DDCs
          '@odata.type': "#DDCsCollection.DDCsCollection"
    put_redfish_v1_SFSS_InstanceID_DDCs_request_DDCs_inner:
      properties:
        Id:
          type: string
        Activate:
          type: boolean
    put_redfish_v1_SFSS_InstanceID_DDCs_request:
      properties:
        DDCs:
          items:
            $ref: "#/components/schemas/put_redfish_v1_SFSS_InstanceID_DDCs_request_DDCs_inner"
          type: array
      x-examples:
        example-1:
          DDCs:
          - Id: '@100.94.72.1:V4::0:8009:TCP'
            Activate: false
          - Id: '@100.94.72.2:V4::0:4420:TCP'
            Activate: false
    put_redfish_v1_SFSS_InstanceID_DDCs_200_response:
      example:
        Id: Id
      properties:
        Id:
          type: string
    post_redfish_v1_SFSS_Instance___DDCs_request_anyOf_DDCs_inner:
      properties:
        TransportAddress:
          type: string
        TransportAddressFamily:
          type: string
        PortId:
          type: integer
        TransportType:
          type: string
        Activate:
          type: boolean
    post_redfish_v1_SFSS_Instance___DDCs_request_anyOf:
      properties:
        DDCs:
          items:
            $ref: "#/components/schemas/post_redfish_v1_SFSS_Instance___DDCs_request_anyOf_DDCs_inner"
          type: array
    post_redfish_v1_SFSS_Instance___DDCs_request:
      anyOf:
      - $ref: "#/components/schemas/post_redfish_v1_SFSS_Instance___DDCs_request_anyOf"
      - $ref: "#/components/schemas/post_redfish_v1_SFSS_Instance___DDCs_request_anyOf_DDCs_inner"
      x-examples:
        example-1:
          DDCs:
          - TransportAddress: 100.94.72.1
            TransportAddressFamily: IPV4
            PortId: 8009
            TransportType: TCP
            Activate: false
          - TransportAddress: 100.94.72.2
            TransportAddressFamily: IPV4
            PortId: 4420
            TransportType: TCP
            Activate: true
    post_redfish_v1_SFSS_Instance___DDCs_200_response_anyOf:
      example:
        Ids:
        - Id: Id
        - Id: Id
      properties:
        Ids:
          items:
            $ref: "#/components/schemas/put_redfish_v1_SFSS_InstanceID_DDCs_200_response"
          type: array
    post_redfish_v1_SFSS_Instance___DDCs_200_response:
      anyOf:
      - $ref: "#/components/schemas/post_redfish_v1_SFSS_Instance___DDCs_200_response_anyOf"
      - $ref: "#/components/schemas/put_redfish_v1_SFSS_InstanceID_DDCs_200_response"
      x-examples:
        example-1:
          Ids:
          - Id: '@100.94.72.1:V4::0:8009:TCP'
          - Id: '@100.94.72.2:V4::0:4420:TCP'
    delete_redfish_v1_SFSS_InstanceID_DDCs_200_response:
      example:
        DDCs:
        - Id: Id
        - Id: Id
      properties:
        DDCs:
          items:
            $ref: "#/components/schemas/put_redfish_v1_SFSS_InstanceID_DDCs_200_response"
          type: array
      x-examples:
        example-1:
          DDCs:
          - Id: '@100.94.72.1:V4::0:8009:TCP'
          - Id: '@100.94.72.2:V4::0:4420:TCP'
    get_redfish_v1_SFSS_Instance__DDCs__Id___200_response:
      description: ""
      example:
        '@odata.id': '@odata.id'
        Activate: true
        TransportAddress: TransportAddress
        '@odata.type': '@odata.type'
        TransportAddressFamily: TransportAddressFamily
        FailureReason: FailureReason
        PortId: 0.8008281904610115
        Id: Id
        TransportType: TransportType
        '@odata.context': '@odata.context'
        ConnectionStatus: ConnectionStatus
        ConfigType: ConfigType
      properties:
        Id:
          description: Unique Identity of the Entity - Fully Qualified Name (FQN)
            of the Direct Discovery Controller(DDC)
          minLength: 1
          type: string
        TransportAddress:
          description: IP address of the DDC
          minLength: 1
          type: string
        TransportAddressFamily:
          description: IP address family; possible values include IPv4 and IPv6
          minLength: 1
          type: string
        PortId:
          description: Port on which the DDC listens for CDC to connect to
          type: number
        TransportType:
          description: Supported transport types that can be used for communication
            with the DDC; possible value is TCP and RoCE
          minLength: 1
          type: string
        Activate:
          description: Activation of DDC that initiates a pull registration from CDC
          type: boolean
        ConfigType:
          description: Configuration Type of DDC; possible values are Manual and KickStart
          minLength: 1
          type: string
        ConnectionStatus:
          description: Status of the TCP connection between the DDC and the CDC instance.
            Possible values include Online/In-Progess:Connecting/Offline
          minLength: 1
          type: string
        FailureReason:
          description: Reason for the DDC being offline
          minLength: 1
          type: string
        '@odata.id':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - Activate
      - ConfigType
      - ConnectionStatus
      - FailureReason
      - Id
      - PortId
      - TransportAddress
      - TransportAddressFamily
      - TransportType
      x-examples:
        example-1:
          Id: '@111.111.111.115:V4::0:5450:TCP'
          TransportAddress: 111.111.111.115
          TransportAddressFamily: IPV4
          PortId: 5450
          TransportType: TCP
          Activate: false
          ConfigType: Manual
          ConnectionStatus: Offline
          FailureReason: NONE
          '@odata.id': /redfish/v1/SFSS/1/DDCs('@111.111.111.115:V4::0:5450:TCP')
          '@odata.type': "#DDCs.DDCs"
          '@odata.context': /redfish/v1/SFSS/1/$metadata#DDCs/DDCs/$entity
    put_redfish_v1_SFSS_InstanceID_DDCs__Id___request:
      properties:
        Activate:
          type: boolean
    put_redfish_v1_SFSS_InstanceID_DDCs__Id___200_response:
      example:
        Id: Id
      properties:
        Id:
          description: Unique Identity of the Entity - Fully Qualified Name (FQN)
            of the Direct Discovery Controller(DDC)
          type: string
    get_redfish_v1_SFSS_Instance__DDCs_Enums_200_response:
      description: ""
      example:
        TransportAddressFamily:
        - TransportAddressFamily
        - TransportAddressFamily
        FailureReason:
        - FailureReason
        - FailureReason
        TransportType:
        - TransportType
        - TransportType
        ConnectionStatus:
        - ConnectionStatus
        - ConnectionStatus
        ConfigType:
        - ConfigType
        - ConfigType
      properties:
        TransportAddressFamily:
          description: IP address family; possible values include IPv4 and IPv6
          items:
            type: string
          type: array
        ConfigType:
          description: Configuration Type of DDC; possible values are Manual and KickStart
          items:
            type: string
          type: array
        FailureReason:
          description: "Connection Failure Reason - Possible Values are NONE, Peer\
            \ Closure,Dial Failure, KATO"
          items:
            type: string
          type: array
        ConnectionStatus:
          description: "Status of the TCP connection between the DDC and the CDC instance;\
            \ possible values include Online, In-Progess:Connecting, Offline"
          items:
            type: string
          type: array
        TransportType:
          description: Supported transport types that can be used for communication
            with the DDC; possible value is TCP and RoCE
          items:
            type: string
          type: array
      required:
      - ConfigType
      - ConnectionStatus
      - FailureReason
      - TransportAddressFamily
      - TransportType
      x-examples:
        example-1:
          TransportAddressFamily:
          - IPV4
          - IPV6
          ConfigType:
          - Implicit
          - Push
          - Pull
          - Manual
          - KDCC
          FailureReason:
          - NONE
          - KATO
          - Peer Closure
          ConnectionStatus:
          - Online
          - Offline
          TransportType:
          - TCP
    get_redfish_v1_SFSS_Instance__CDCInstance__source_config_200_response:
      description: ""
      example:
        '@odata.id': '@odata.id'
        InstanceId: InstanceId
        UpTime: UpTime
        Version: Version
        '@odata.type': '@odata.type'
        DiscoveryControllerPort: 0.8008281904610115
        NQN: NQN
        '@odata.context': '@odata.context'
      properties:
        DiscoveryControllerPort:
          description: The port that CDC listens on for mDNS queries
          type: number
        InstanceId:
          description: 'CDC instance identifier '
          minLength: 1
          type: string
        NQN:
          description: NVMe Qualified Name (NQN) of the CDC instance
          minLength: 1
          type: string
        UpTime:
          minLength: 1
          type: string
        Version:
          minLength: 1
          type: string
        '@odata.id':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - DiscoveryControllerPort
      - InstanceId
      - NQN
      - UpTime
      - Version
      x-examples:
        example-1:
          DiscoveryControllerPort: 8009
          InstanceId: "1"
          NQN: nqn.1988-11.com.dell:SFSS:1:20211007163204e8
          UpTime: 2021-10-08 20:00:40.248345
          Version: 1.0.0.0014
          '@odata.id': /redfish/v1/SFSS/1/CDCInstance
          '@odata.type': "#CDCInstance.CDCInstance"
          '@odata.context': /redfish/v1/SFSS/1/$metadata#CDCInstance/CDCInstance/$entity
    get_redfish_v1_SFSS_Instance__ZoneDBs_200_response:
      description: ""
      example:
        '@odata.id': '@odata.id'
        '@odata.type': '@odata.type'
        '@odata.context': '@odata.context'
        ZoneDBs@odata.count: 0.8008281904610115
        ZoneDBs:
        - '@odata.id': '@odata.id'
        - '@odata.id': '@odata.id'
      properties:
        ZoneDBs:
          description: Zone database
          items:
            $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__Hosts_200_response_Hosts_inner"
          minItems: 1
          type: array
          uniqueItems: true
        ZoneDBs@odata.count:
          description: Number of zone databases
          type: number
        '@odata.id':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - ZoneDBs
      - ZoneDBs@odata.count
      x-examples:
        example-1:
          ZoneDBs:
          - '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('pending')
          - '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('active')
          ZoneDBs@odata.count: 2
          '@odata.id': /redfish/v1/SFSS/1/ZoneDBs
          '@odata.context': /redfish/v1/SFSS/1/$metadata#ZoneDBs
          '@odata.type': "#ZoneDBsCollection.ZoneDBsCollection"
    get_redfish_v1_SFSS_Instance__ZoneDBs__config____source_config_200_response:
      description: ""
      example:
        '@odata.id': '@odata.id'
        '@odata.type': '@odata.type'
        ZoneGroups:
        - "{}"
        - "{}"
        '@odata.context': '@odata.context'
        NumberZoneGroups: 0.8008281904610115
      properties:
        NumberZoneGroups:
          description: Number of zone groups
          type: number
        ZoneGroups:
          description: A set of zone groups
          items:
            type: object
          type: array
        '@odata.id':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - NumberZoneGroups
      - ZoneGroups
      x-examples:
        example-1:
          NumberZoneGroups: 1
          ZoneGroups:
          - config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8
          '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')
          '@odata.type': "#ZoneDBs.ZoneDBs"
          '@odata.context': /redfish/v1/SFSS/1/$metadata#ZoneDBs/ZoneDBs/$entity
    delete_redfish_v1_SFSS_Instance__ZoneDBs__config___200_response:
      description: ""
      example:
        EId: EId
      properties:
        EId:
          minLength: 1
          type: string
      required:
      - EId
      x-examples:
        example-1:
          EId: config
    get_redfish_v1_SFSS_Instance__ZoneDBs__active___200_response:
      description: ""
      example:
        '@odata.id': '@odata.id'
        '@odata.type': '@odata.type'
        ZoneGroups:
        - "{}"
        - "{}"
        '@odata.context': '@odata.context'
        NumberZoneGroups: 0.8008281904610115
      properties:
        NumberZoneGroups:
          description: Number of zone groups
          type: number
        ZoneGroups:
          description: A set of zone groups
          items:
            type: object
          type: array
        '@odata.id':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - NumberZoneGroups
      - ZoneGroups
      x-examples:
        example-1:
          NumberZoneGroups: 1
          ZoneGroups:
          - active:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8
          '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('active')
          '@odata.type': "#ZoneDBs.ZoneDBs"
          '@odata.context': /redfish/v1/SFSS/1/$metadata#ZoneDBs/ZoneDBs/$entity
    get_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups__source_config_200_response:
      description: ""
      example:
        ZoneGroups@odata.count: 0.8008281904610115
        '@odata.id': '@odata.id'
        '@odata.type': '@odata.type'
        ZoneGroups:
        - '@odata.id': '@odata.id'
        - '@odata.id': '@odata.id'
        '@odata.context': '@odata.context'
      properties:
        ZoneGroups:
          description: A set of zone groups
          items:
            $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__Hosts_200_response_Hosts_inner"
          minItems: 1
          type: array
          uniqueItems: true
        ZoneGroups@odata.count:
          description: Number of zone groups
          type: number
        '@odata.id':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - ZoneGroups
      - ZoneGroups@odata.count
      x-examples:
        example-1:
          ZoneGroups:
          - '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8')
          ZoneGroups@odata.count: 1
          '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups?$source=config
          '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneGroups
          '@odata.type': "#ZoneGroupsCollection.ZoneGroupsCollection"
    put_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups_request:
      description: ""
      properties:
        ActivateStatus:
          description: Zone group activation status; possible values include Activate
            or DeActivate
          minLength: 1
          type: string
      required:
      - ActivateStatus
      x-examples:
        example-1:
          ActivateStatus: Activate
    put_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups_200_response:
      description: ""
      example:
        EId: EId
      properties:
        EId:
          minLength: 1
          type: string
      required:
      - EId
      x-examples:
        example-1:
          EId: active:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8
    post_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups_request:
      description: ""
      properties:
        ZoneDBType:
          description: Type of zone database; possible values include Config and Running
          minLength: 1
          type: string
        ZoneGroupName:
          description: Zone group name
          minLength: 1
          type: string
      required:
      - ZoneDBType
      - ZoneGroupName
      x-examples:
        example-1:
          ZoneDBType: config
          ZoneGroupName: ZoneGrpDhana1111
    post_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups_200_response:
      description: ""
      example:
        EId: EId
      properties:
        EId:
          minLength: 1
          type: string
      required:
      - EId
      x-examples:
        example-1:
          EId: config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8
    ? get_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups__config_ZoneGroup1_nqn_1988_11_com_dell_SFSS_1_20210706164404e8____source_config_200_response
    : description: ""
      example:
        Type: Type
        '@odata.id': '@odata.id'
        ActivateStatus: ActivateStatus
        NumberZones: 0.8008281904610115
        '@odata.type': '@odata.type'
        OriginatorNQN: OriginatorNQN
        ActivationState: ActivationState
        '@odata.context': '@odata.context'
        ZoneDBType: ZoneDBType
        ZoneGroupId: ZoneGroupId
        zoneGroupName: zoneGroupName
      properties:
        ZoneDBType:
          description: Type of zone database; possible values include Config and Running
          minLength: 1
          type: string
        ZoneGroupId:
          description: Unique zone group identifier
          minLength: 1
          type: string
        zoneGroupName:
          description: Zone group name
          minLength: 1
          type: string
        OriginatorNQN:
          description: NVMe Qualified Name (NQN) of the CDC instance
          minLength: 1
          type: string
        Type:
          description: 'Type of zoning '
          minLength: 1
          type: string
        ActivateStatus:
          minLength: 1
          type: string
        ActivationState:
          minLength: 1
          type: string
        NumberZones:
          description: Number of zones
          type: number
        '@odata.id':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - ActivateStatus
      - ActivationState
      - NumberZones
      - OriginatorNQN
      - Type
      - ZoneDBType
      - ZoneGroupId
      - zoneGroupName
      x-examples:
        example-1:
          ZoneDBType: config
          ZoneGroupId: config:ZoneGroup1:nqn.1988-11.com.dell:SFSS:1:20210706164404e8
          zoneGroupName: ZoneGroup1
          OriginatorNQN: nqn.1988-11.com.dell:SFSS:1:20210706164404e8
          Type: Manual
          ActivateStatus: DeActivate
          ActivationState: NotActive
          NumberZones: 0
          '@odata.id': /redfish/v1/SFSS/1/ZoneDBs(config)/ZoneGroups(config:ZoneGroup1:nqn.1988-11.com.dell:SFSS:1:20210706164404e8)
          '@odata.type': "#ZoneGroups.ZoneGroups"
          '@odata.context': /redfish/v1/SFSS/1/ZoneDBs(config)/$metadata#ZoneGroups/ZoneGroups/$entity
    get_redfish_v1_SFSS_Instance__ZoneDBs_ZoneGroups_Enums_200_response:
      description: ""
      example:
        Type:
        - Type
        - Type
        ActivateStatus:
        - ActivateStatus
        - ActivateStatus
        ActivationState:
        - ActivationState
        - ActivationState
      properties:
        ActivateStatus:
          description: 'Zone group activation status; possible values include Activate
            and DeActivate '
          items:
            type: string
          type: array
        ActivationState:
          description: "Current status of the zone group; possible values include\
            \ NotActive, Active, ReActivationNeeded,     ActivationInprogress, and\
            \ DeActivationInprogress"
          items:
            type: string
          type: array
        Type:
          description: Zone group type
          items:
            type: string
          type: array
      required:
      - ActivateStatus
      - ActivationState
      - Type
      x-examples:
        example-1:
          ActivateStatus:
          - Activate
          - DeActivate
          ActivationState:
          - Active
          - ReActivationNeeded
          - NotActive
          Type:
          - Manual
          - PULLANER
          - ANER
    ? get_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups__config_ZoneGrpDhana1111_nqn_1988_11_com_dell_SFSS_1_20210706164404e8___Zones__source_config_200_response
    : description: ""
      example:
        '@odata.id': '@odata.id'
        Zones@odata.count: 0.8008281904610115
        '@odata.type': '@odata.type'
        '@odata.context': '@odata.context'
        Zones:
        - '@odata.id': '@odata.id'
        - '@odata.id': '@odata.id'
      properties:
        Zones:
          description: A set of zones
          items:
            $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__Hosts_200_response_Hosts_inner"
          minItems: 1
          type: array
          uniqueItems: true
        Zones@odata.count:
          description: Number of zones
          type: number
        '@odata.id':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - Zones
      - Zones@odata.count
      x-examples:
        example-1:
          Zones:
          - '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8')/Zones('config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8:DhanaZone')
          Zones@odata.count: 1
          '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:ZoneGrpDhana1111:')/Zones?$source=config
          '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:ZoneGrpDhana1111:')/$metadata#Zones
          '@odata.type': "#ZonesCollection.ZonesCollection"
    post_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups__ZoneGrpID___Zones__source_config_request:
      description: ""
      properties:
        ZoneName:
          description: Name of the zone
          minLength: 1
          type: string
      required:
      - ZoneName
      x-examples:
        example-1:
          ZoneName: DhanaZone
    post_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups__ZoneGrpID___Zones__source_config_200_response:
      description: ""
      example:
        EId: EId
      properties:
        EId:
          minLength: 1
          type: string
      required:
      - EId
      x-examples:
        example-1:
          EId: config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8:DhanaZone
    delete_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups__ZoneGrpID___Zones_200_response:
      description: ""
      example:
        EId: EId
      properties:
        EId:
          description: A unique NVMe Qualified Name (NQN) of the specified zone
          minLength: 1
          type: string
      required:
      - EId
      x-examples:
        example-1:
          EId: config:ZoneGrpDhana:nqn.1988-11.com.dell:SFSS:1:20210706164404e8:DhanaZone
    ? get_https__IP_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups__config___Zones__config___ZoneMembers__source_config_200_response
    : description: ""
      example:
        '@odata.id': '@odata.id'
        ZoneMembers@odata.count: 0.8008281904610115
        '@odata.type': '@odata.type'
        ZoneMembers:
        - '@odata.id': '@odata.id'
        - '@odata.id': '@odata.id'
        '@odata.context': '@odata.context'
      properties:
        ZoneMembers:
          description: A set of zone members
          items:
            $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__Hosts_200_response_Hosts_inner"
          minItems: 1
          type: array
          uniqueItems: true
        ZoneMembers@odata.count:
          description: Number of zone members
          type: number
        '@odata.id':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - ZoneMembers
      - ZoneMembers@odata.count
      x-examples:
        example-1:
          ZoneMembers:
          - '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3000')
          - '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:AliasMemberIdDhana')
          - '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host')
          ZoneMembers@odata.count: 3
          '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers?$source=config
          '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers
          '@odata.type': "#ZoneMembersCollection.ZoneMembersCollection"
    ? put_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups__ZoneGroupId___Zones__ZoneID___ZoneMembers_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups__ZoneGroupId___Zones__ZoneID___ZoneMembers_request
    : description: ""
      properties:
        Role:
          minLength: 1
          type: string
      required:
      - Role
      x-examples:
        example-1:
          Role: Subsystem
    post_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups__ZoneGroupId___Zones__ZoneID___ZoneMembers_request:
      description: ""
      properties:
        ZoneMemberId:
          minLength: 1
          type: string
        ZoneMemberType:
          minLength: 1
          type: string
        Role:
          minLength: 1
          type: string
      required:
      - ZoneMemberId
      - ZoneMemberType
      x-examples:
        example-1:
          ZoneMemberId: nqn.2014-08.org.nvmexpress:uuid:host
          ZoneMemberType: NQN
          Role: Host
    post_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups__ZoneGroupId___Zones__ZoneID___ZoneMembers_200_response:
      description: ""
      example:
        EId: EId
      properties:
        EId:
          minLength: 1
          type: string
      required:
      - EId
      x-examples:
        example-1:
          EId: config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3000
    ? delete_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups__ZoneGroupId___Zones__ZoneID___ZoneMembers_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups__ZoneGroupId___Zones__ZoneID___ZoneMembers_200_response
    : description: ""
      example:
        EId: EId
      properties:
        EId:
          minLength: 1
          type: string
      required:
      - EId
      x-examples:
        example-1:
          EId: config:ZoneGrpDhana1111:nqn.1988-11.com.dell:SFSS:1:20210706164404e8:DhanaZone:nqn.2014-08.org.nvmexpress:uuid:host
    ? get_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups__ZoneGroupId___Zones__ZoneID___ZoneMembers__ZoneMemberID____source_config__expand_ZoneMembers_200_response_ZoneMembers_inner
    : example:
        Role: Role
        ZoneMemberId: ZoneMemberId
        '@odata.id': '@odata.id'
        '@odata.type': '@odata.type'
        ZoneMemberType: ZoneMemberType
        '@odata.context': '@odata.context'
      properties:
        Role:
          description: Type of endpoint; possible values include host and subsystem
          minLength: 1
          type: string
        ZoneMemberId:
          description: Unique zone member identifier
          minLength: 1
          type: string
        ZoneMemberType:
          description: Possible values include NVMe Qualified Name (NQN) and Fully
            Qualified Name (FQN)
          minLength: 1
          type: string
        '@odata.id':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - Role
      - ZoneMemberId
      - ZoneMemberType
    ? get_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups__ZoneGroupId___Zones__ZoneID___ZoneMembers__ZoneMemberID____source_config__expand_ZoneMembers_200_response
    : description: ""
      example:
        '@odata.id': '@odata.id'
        ZoneMembers@odata.count: 0.8008281904610115
        '@odata.type': '@odata.type'
        ZoneMembers:
        - Role: Role
          ZoneMemberId: ZoneMemberId
          '@odata.id': '@odata.id'
          '@odata.type': '@odata.type'
          ZoneMemberType: ZoneMemberType
          '@odata.context': '@odata.context'
        - Role: Role
          ZoneMemberId: ZoneMemberId
          '@odata.id': '@odata.id'
          '@odata.type': '@odata.type'
          ZoneMemberType: ZoneMemberType
          '@odata.context': '@odata.context'
        '@odata.context': '@odata.context'
      properties:
        ZoneMembers:
          description: A set of zone members
          items:
            $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups__ZoneGroupId___Zones__ZoneID___ZoneMembers__ZoneMemberID____source_config__expand_ZoneMembers_200_response_ZoneMembers_inner"
          minItems: 1
          type: array
          uniqueItems: true
        ZoneMembers@odata.count:
          description: Number of zone members
          type: number
        '@odata.id':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - ZoneMembers
      - ZoneMembers@odata.count
      x-examples:
        example-1:
          ZoneMembers:
          - Role: Subsystem
            ZoneMemberId: config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3000
            ZoneMemberType: FullQualifiedName
            '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3000')
            '@odata.type': "#ZoneMembers.ZoneMembers"
            '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers/ZoneMembers/$entity
          - Role: Subsystem
            ZoneMemberId: config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:AliasMemberIdDhana
            ZoneMemberType: ZoneAlias
            '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:AliasMemberIdDhana')
            '@odata.type': "#ZoneMembers.ZoneMembers"
            '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers/ZoneMembers/$entity
          - Role: Subsystem
            ZoneMemberId: config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host
            ZoneMemberType: NQN
            '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host')
            '@odata.type': "#ZoneMembers.ZoneMembers"
            '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers/ZoneMembers/$entity
          ZoneMembers@odata.count: 3
          '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers?$source=config&$expand=ZoneMembers
          '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers
          '@odata.type': "#ZoneMembersCollection.ZoneMembersCollection"
    get_redfish_v1_SFSS_Instance__ZoneDBs_ZoneGroups_Zones_ZoneMembers_Enums_200_response:
      description: ""
      example:
        Role:
        - Role
        - Role
        ZoneMemberType:
        - ZoneMemberType
        - ZoneMemberType
      properties:
        Role:
          description: 'Type of endpoint; possible values are host and subsystem '
          items:
            type: string
          type: array
        ZoneMemberType:
          description: Possible values include NVMe Qualified Name (NQN) and Fully
            Qualified Name (FQN)
          items:
            type: string
          type: array
      required:
      - Role
      - ZoneMemberType
      x-examples:
        example-1:
          Role:
          - ZoneAlias
          - Host
          - Subsystem
          ZoneMemberType:
          - NQN
          - FullQualifiedName
          - ZoneAlias
    ? get_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneGroups__ZoneGroupId___Zones__ZoneID___ZoneMembers__ZoneMemberID____source_config_200_response
    : description: ""
      example:
        Role: Role
        ZoneMemberId: ZoneMemberId
        '@odata.id': '@odata.id'
        '@odata.type': '@odata.type'
        ZoneMemberType: ZoneMemberType
        '@odata.context': '@odata.context'
      properties:
        Role:
          description: Type of endpoint; possible values include host and subsystem
          minLength: 1
          type: string
        ZoneMemberId:
          description: Unique zone member identifier
          minLength: 1
          type: string
        ZoneMemberType:
          description: Possible values include NVMe Qualified Name (NQN) and Fully
            Qualified Name (FQN)
          minLength: 1
          type: string
        '@odata.id':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - Role
      - ZoneMemberId
      - ZoneMemberType
      x-examples:
        example-1:
          Role: Subsystem
          ZoneMemberId: config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host
          ZoneMemberType: NQN
          '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/ZoneMembers('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1:nqn.2014-08.org.nvmexpress:uuid:host')
          '@odata.type': "#ZoneMembers.ZoneMembers"
          '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneGroups('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9')/Zones('config:SampleZoneGroup:nqn.1988-11.com.dell:SFSS:1:20210527171628c9:SampleZone1')/$metadata#ZoneMembers/ZoneMembers/$entity
    get_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneAlias__source_config__expand_ZoneAlias_200_response_ZoneAlias_inner:
      example:
        '@odata.id': '@odata.id'
        NumberZoneMembers: NumberZoneMembers
        '@odata.type': '@odata.type'
        '@odata.context': '@odata.context'
        ZoneAliasId: ZoneAliasId
        ZoneAliasName: ZoneAliasName
      properties:
        ZoneAliasId:
          description: Unique zone alias identifier
          minLength: 1
          type: string
        ZoneAliasName:
          description: Friendly name for the zone alias
          minLength: 1
          type: string
        NumberZoneMembers:
          description: Number of zone members that are part of the zone alias
          minLength: 1
          type: string
        '@odata.id':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - NumberZoneMembers
      - ZoneAliasId
      - ZoneAliasName
    get_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneAlias__source_config__expand_ZoneAlias_200_response:
      description: ""
      example:
        '@odata.id': '@odata.id'
        '@odata.type': '@odata.type'
        ZoneAlias:
        - '@odata.id': '@odata.id'
          NumberZoneMembers: NumberZoneMembers
          '@odata.type': '@odata.type'
          '@odata.context': '@odata.context'
          ZoneAliasId: ZoneAliasId
          ZoneAliasName: ZoneAliasName
        - '@odata.id': '@odata.id'
          NumberZoneMembers: NumberZoneMembers
          '@odata.type': '@odata.type'
          '@odata.context': '@odata.context'
          ZoneAliasId: ZoneAliasId
          ZoneAliasName: ZoneAliasName
        '@odata.context': '@odata.context'
        ZoneAlias@odata.count: 0.8008281904610115
      properties:
        ZoneAlias:
          description: A set of zone aliases
          items:
            $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneAlias__source_config__expand_ZoneAlias_200_response_ZoneAlias_inner"
          minItems: 1
          type: array
          uniqueItems: true
        ZoneAlias@odata.count:
          description: Number of zone aliases
          type: number
        '@odata.id':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - ZoneAlias
      - ZoneAlias@odata.count
      x-examples:
        example-1:
          ZoneAlias:
          - ZoneAliasId: config:DhanaSampleAlias
            ZoneAliasName: DhanaSampleAlias
            NumberZoneMembers: "1"
            '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')
            '@odata.type': "#ZoneAlias.ZoneAlias"
            '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneAlias/ZoneAlias/$entity
          - ZoneAliasId: config:DhanaSampleAliasTest
            ZoneAliasName: DhanaSampleAliasTest
            '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAliasTest')
            '@odata.type': "#ZoneAlias.ZoneAlias"
            '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneAlias/ZoneAlias/$entity
          ZoneAlias@odata.count: 2
          '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias?$source=config&$expand=ZoneAlias
          '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneAlias
          '@odata.type': "#ZoneAliasCollection.ZoneAliasCollection"
    post_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneAlias__source_config__expand_ZoneAlias_request:
      description: ""
      properties:
        ZoneDBType:
          description: Type of zone database; possible values include Config and Running
          minLength: 1
          type: string
        ZoneAliasName:
          description: Friendly name for the zone alias
          minLength: 1
          type: string
      required:
      - ZoneAliasName
      - ZoneDBType
      x-examples:
        example-1:
          ZoneDBType: config
          ZoneAliasName: DhanaSampleAlias123
    post_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneAlias__source_config__expand_ZoneAlias_200_response:
      description: ""
      example:
        EId: EId
      properties:
        EId:
          minLength: 1
          type: string
      required:
      - EId
      x-examples:
        example-1:
          EId: config:DhanaSampleAlias123
    delete_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneAlias_200_response:
      description: ""
      example:
        EId: EId
      properties:
        EId:
          minLength: 1
          type: string
      required:
      - EId
      x-examples:
        example-1:
          EId: config:DhanaSampleAliasTest
    ? get_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneAlias__config_DhanaSampleAlias___ZoneAliasMembers__source_config_200_response
    : description: ""
      example:
        '@odata.id': '@odata.id'
        ZoneAliasMembers@odata.count: 0.8008281904610115
        '@odata.type': '@odata.type'
        '@odata.context': '@odata.context'
        ZoneAliasMembers:
        - '@odata.id': '@odata.id'
        - '@odata.id': '@odata.id'
      properties:
        ZoneAliasMembers:
          description: A set of zone alias members
          items:
            $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__Hosts_200_response_Hosts_inner"
          minItems: 1
          type: array
          uniqueItems: true
        ZoneAliasMembers@odata.count:
          description: Number of zone alias members
          type: number
        '@odata.id':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - ZoneAliasMembers
      - ZoneAliasMembers@odata.count
      x-examples:
        example-1:
          ZoneAliasMembers:
          - '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3002')
          - '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host')
          ZoneAliasMembers@odata.count: 2
          '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers?$source=config
          '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/$metadata#ZoneAliasMembers
          '@odata.type': "#ZoneMembersCollection.ZoneMembersCollection"
    post_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneAlias__config_DhanaSampleAlias___ZoneAliasMembers__source_config_request:
      description: ""
      properties:
        ZoneAliasMemberId:
          description: Unique zone alias member identifier
          minLength: 1
          type: string
        ZoneAliasMemberType:
          description: Possible values include NVMe Qualified Name (NQN) and Fully
            Qualified Name (FQN)
          minLength: 1
          type: string
        Role:
          description: Type of endpoint; possible values include host and subsystem
          minLength: 1
          type: string
      required:
      - Role
      - ZoneAliasMemberId
      - ZoneAliasMemberType
      x-examples:
        example-1:
          ZoneAliasMemberId: nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3002
          ZoneAliasMemberType: FullQualifiedName
          Role: Subsystem
    ? post_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneAlias__config_DhanaSampleAlias___ZoneAliasMembers__source_config_200_response
    : description: ""
      example:
        EId: EId
      properties:
        EId:
          minLength: 1
          type: string
      required:
      - EId
      x-examples:
        example-1:
          EId: config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3002
    get_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneAlias__config_DhanaSampleAliasTest____source_config_200_response:
      description: ""
      example:
        '@odata.id': '@odata.id'
        NumberZoneMembers: NumberZoneMembers
        '@odata.type': '@odata.type'
        '@odata.context': '@odata.context'
        ZoneAliasId: ZoneAliasId
        ZoneAliasName: ZoneAliasName
      properties:
        ZoneAliasId:
          description: Unique zone alias identifier
          minLength: 1
          type: string
        ZoneAliasName:
          description: Zone alias name
          minLength: 1
          type: string
        NumberZoneMembers:
          description: Number of zone members that are part of the zone alias
          minLength: 1
          type: string
        '@odata.id':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - NumberZoneMembers
      - ZoneAliasId
      - ZoneAliasName
      x-examples:
        example-1:
          ZoneAliasId: config:DhanaSampleAliasTest
          ZoneAliasName: DhanaSampleAliasTest
          NumberZoneMembers: "1"
          '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAliasTest')
          '@odata.type': "#ZoneAlias.ZoneAlias"
          '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/$metadata#ZoneAlias/ZoneAlias/$entity
    ? get_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneAlias__config_DhanaSampleAlias___ZoneAliasMembers__config_DhanaSampleAlias_nqn_2014_08_org_nvmexpress_uuid_host____source_config_200_response
    : description: ""
      example:
        ZoneAliasMemberId: ZoneAliasMemberId
        Role: Role
        '@odata.id': '@odata.id'
        '@odata.type': '@odata.type'
        ZoneAliasMemberType: ZoneAliasMemberType
        '@odata.context': '@odata.context'
      properties:
        ZoneAliasMemberId:
          description: Unique zone alias member identifier
          minLength: 1
          type: string
        ZoneAliasMemberType:
          description: Possible values include NVMe Qualified Name (NQN) and Fully
            Qualified Name (FQN)
          minLength: 1
          type: string
        Role:
          description: Type of endpoint; possible values include host and subsystem
          minLength: 1
          type: string
        '@odata.id':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - Role
      - ZoneAliasMemberId
      - ZoneAliasMemberType
      x-examples:
        example-1:
          ZoneAliasMemberId: config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host
          ZoneAliasMemberType: NQN
          Role: Host
          '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host')
          '@odata.type': "#ZoneAliasMembers.ZoneAliasMembers"
          '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/$metadata#ZoneAliasMembers/ZoneAliasMembers/$entity
    put_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneAlias__config_DhanaSampleAlias___ZoneAliasMembers__source_config_request:
      description: ""
      properties:
        Role:
          description: Type of endpoint; possible values include host and subsystem
          minLength: 1
          type: string
      required:
      - Role
      x-examples:
        example-1:
          Role: Host
    ? put_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneAlias__config_DhanaSampleAlias___ZoneAliasMembers__source_config_200_response
    : description: ""
      example:
        EId: EId
      properties:
        EId:
          minLength: 1
          type: string
      required:
      - EId
      x-examples:
        example-1:
          EId: config:SampleZoneAlias:nqn.2014-08.org.nvmexpress:uuid:host
    ? get_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneAlias__config_DhanaSampleAlias___ZoneAliasMembers__source_config__expand_ZoneAliasMembers_200_response_ZoneAliasMembers_inner
    : example:
        ZoneAliasMemberId: ZoneAliasMemberId
        Role: Role
        '@odata.id': '@odata.id'
        '@odata.type': '@odata.type'
        ZoneAliasMemberType: ZoneAliasMemberType
        '@odata.context': '@odata.context'
      properties:
        ZoneAliasMemberType:
          description: Possible values include NVMe Qualified Name (NQN) and Fully
            Qualified Name (FQN)
          minLength: 1
          type: string
        ZoneAliasMemberId:
          description: Unique zone alias member identifier
          minLength: 1
          type: string
        Role:
          description: Type of endpoint; possible values include host and subsystem
          minLength: 1
          type: string
        '@odata.id':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - Role
      - ZoneAliasMemberId
      - ZoneAliasMemberType
    ? get_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneAlias__config_DhanaSampleAlias___ZoneAliasMembers__source_config__expand_ZoneAliasMembers_200_response
    : description: ""
      example:
        '@odata.id': '@odata.id'
        ZoneAliasMembers@odata.count: 0.8008281904610115
        '@odata.type': '@odata.type'
        '@odata.context': '@odata.context'
        ZoneAliasMembers:
        - ZoneAliasMemberId: ZoneAliasMemberId
          Role: Role
          '@odata.id': '@odata.id'
          '@odata.type': '@odata.type'
          ZoneAliasMemberType: ZoneAliasMemberType
          '@odata.context': '@odata.context'
        - ZoneAliasMemberId: ZoneAliasMemberId
          Role: Role
          '@odata.id': '@odata.id'
          '@odata.type': '@odata.type'
          ZoneAliasMemberType: ZoneAliasMemberType
          '@odata.context': '@odata.context'
      properties:
        ZoneAliasMembers:
          description: A set of zone alias members
          items:
            $ref: "#/components/schemas/get_redfish_v1_SFSS_Instance__ZoneDBs__config___ZoneAlias__config_DhanaSampleAlias___ZoneAliasMembers__source_config__expand_ZoneAliasMembers_200_response_ZoneAliasMembers_inner"
          minItems: 1
          type: array
          uniqueItems: true
        ZoneAliasMembers@odata.count:
          description: Number of zone alias members
          type: number
        '@odata.id':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - ZoneAliasMembers
      - ZoneAliasMembers@odata.count
      x-examples:
        example-1:
          ZoneAliasMembers:
          - ZoneAliasMemberType: FullQualifiedName
            ZoneAliasMemberId: config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3002
            Role: Host
            '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host:TCP:Ipv4:1.1.1.1:3002')
            '@odata.type': "#ZoneAliasMembers.ZoneAliasMembers"
            '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/$metadata#ZoneAliasMembers/ZoneAliasMembers/$entity
          - ZoneAliasMemberId: config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host
            ZoneALiasMemberType: NQN
            Role: Host
            '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers('config:DhanaSampleAlias:nqn.2014-08.org.nvmexpress:uuid:host')
            '@odata.type': "#ZoneAliasMembers.ZoneAliasMembers"
            '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/$metadata#ZoneAliasMembers/ZoneAliasMembers/$entity
          ZoneAliasMembers@odata.count: 2
          '@odata.id': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/ZoneAliasMembers?$source=config&$expand=ZoneAliasMembers
          '@odata.context': /redfish/v1/SFSS/1/ZoneDBs('config')/ZoneAlias('config:DhanaSampleAlias')/$metadata#ZoneAliasMembers
          '@odata.type': "#ZoneMembersCollection.ZoneMembersCollection"
    get_redfish_v1_SFSS_Instance___GlobalPolicies_200_response:
      description: ""
      example:
        '@odata.id': '@odata.id'
        '@odata.type': '@odata.type'
        ZoningPolicy: ZoningPolicy
        '@odata.context': '@odata.context'
        NameServerEntityPurgeTOV: NameServerEntityPurgeTOV
      properties:
        ZoningPolicy:
          description: Global zoning policy that allows all hosts to communicate with
            all subsystems; disabled by default
          minLength: 1
          type: string
        NameServerEntityPurgeTOV:
          description: Timeout value to remove endpoints (hosts and subsystems) that
            have lost connection with the CDC
          minLength: 1
          type: string
        '@odata.id':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - NameServerEntityPurgeTOV
      - ZoningPolicy
      x-examples:
        example-1:
          ZoningPolicy: Enable
          NameServerEntityPurgeTOV: 4Hr
          '@odata.id': /redfish/v1/stfs/1/GlobalPolicies
          '@odata.type': "#GlobalPolicies.GlobalPolicies"
          '@odata.context': /redfish/v1/stfs/1/$metadata#GlobalPolicies/GlobalPolicies/$entity
    post_redfish_v1_SFSS_Instance___GlobalPolicies_request:
      description: ""
      properties:
        ZoningPolicy:
          description: Global zoning policy that allows all hosts to communicate with
            all subsystems; disabled by default
          minLength: 1
          type: string
        NameServerEntityPurgeTOV:
          description: Timeout value to remove endpoints (hosts and subsystems) that
            have lost connection with the CDC
          minLength: 1
          type: string
      required:
      - NameServerEntityPurgeTOV
      - ZoningPolicy
      x-examples:
        example-1:
          ZoningPolicy: Disable
          NameServerEntityPurgeTOV: 4Hr
    get_redfish_v1_SFSS_Instance__ZoneDBs_ZoneAlias_ZoneAliasMembers_Enums_200_response:
      description: ""
      example:
        Role:
        - Role
        - Role
        ZoneMemberType:
        - ZoneMemberType
        - ZoneMemberType
      properties:
        Role:
          description: A set of roles
          items:
            type: string
          type: array
        ZoneMemberType:
          description: Possible values include NVMe Qualified Name (NQN) or Fully
            Qualified Name (FQN)
          items:
            type: string
          type: array
      required:
      - Role
      - ZoneMemberType
      x-examples:
        example-1:
          Role:
          - Subsystem
          - Host
          ZoneMemberType:
          - NQN
          - FullQualifiedName
    get_redfish_v1_SFSS_Instance__GlobalPolicies_Enums_200_response:
      description: ""
      example:
        ZoningPolicy:
        - ZoningPolicy
        - ZoningPolicy
        NameServerEntityPurgeTOV:
        - NameServerEntityPurgeTOV
        - NameServerEntityPurgeTOV
      properties:
        ZoningPolicy:
          description: Global zoning policy that allows all hosts to communicate with
            all subsystems; disabled by default
          items:
            type: string
          type: array
        NameServerEntityPurgeTOV:
          description: Timeout value to remove endpoints (hosts or subsystems) that
            have lost connection with the CDC
          items:
            type: string
          type: array
      required:
      - NameServerEntityPurgeTOV
      - ZoningPolicy
      x-examples:
        example-1:
          ZoningPolicy:
          - Enable
          - Disable
          NameServerEntityPurgeTOV:
          - NoTimeout
          - 5Sec
          - 4Hr
          - 8Hr
          - 24Hr
          - 48Hr
          - 10Min
    HostsGET_Expand_Hosts_inner:
      properties:
        Id:
          description: Unique Identity of the Entity - Fully Qualified Name (FQN)
            of the host
          minLength: 1
          type: string
        NQN:
          description: NVMe Qualified Name (NQN) of the host
          minLength: 1
          type: string
        TransportAddress:
          description: IP address of the host
          minLength: 1
          type: string
        TransportAddressFamily:
          description: IP address family; possible values include IPv4 and IPv6
          minLength: 1
          type: string
        TransportType:
          description: Protocol used for communication with the host; possible value
            is TCP
          minLength: 1
          type: string
        TREQ:
          description: "Transport Request Type (TREQ); possible values include Secure\
            \ channel not specified, Secure channel required, and Secure channel not\
            \ required"
          minLength: 1
          type: string
        TSAS:
          description: Possible values are No Security and TLS
          minLength: 1
          type: string
        RegistrationType:
          description: "Type of endpoint registration; possible values include Implicit,\
            \ Explicit, Pull, and Manual"
          minLength: 1
          type: string
        ConnectionStatus:
          description: Status of the TCP connection between the host and the CDC instance;
            possible values include Online and Offline
          minLength: 1
          type: string
        FailureReason:
          description: "Reason for the host being offline; possible values include\
            \ NONE, KATO, and Peer Closure"
          minLength: 1
          type: string
        '@odata.id':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - ConnectionStatus
      - FailureReason
      - Id
      - NQN
      - RegistrationType
      - TREQ
      - TSAS
      - TransportAddress
      - TransportAddressFamily
      - TransportType
    SubsystemsGET_Expand_Subsystems_inner:
      properties:
        Id:
          description: Unique Identity of the Entity - Fully Qualified Name (FQN)
            of the subsystem
          minLength: 1
          type: string
        NQN:
          description: NVMe Qualified Name (NQN) of the subsystem
          minLength: 1
          type: string
        TransportAddress:
          description: IP address of the subsystem
          minLength: 1
          type: string
        TransportAddressFamily:
          description: IP address family; possible values include IPv4 and IPv6
          minLength: 1
          type: string
        PortId:
          description: Internal Port ID that is mapped to the NVMe Subsystem Port
          type: number
        ControllerId:
          description: "TCP controller ID, 65535"
          type: number
        TransportType:
          description: "Protocol used for communication with the host; possible values\
            \ are TCP, RoCE, FC"
          minLength: 1
          type: string
        SubType:
          description: "Possible values include Reserved, Discovery Service, and NVM\
            \ Subsystem"
          minLength: 1
          type: string
        TREQ:
          description: "Transport Request Type (TREQ); possible values include Secure\
            \ channel not specified, Secure channel required, and Secure channel not\
            \ required"
          minLength: 1
          type: string
        ASQZ:
          description: Admin Queue Size
          type: number
        TransportServiceId:
          description: NVMe Transport Service Identifier as an ASCII string
          minLength: 1
          type: string
        TSAS:
          description: NVMe Transport Service Address SubType; possible values are
            No Security and TLS
          minLength: 1
          type: string
        RcvdGenCounter:
          description: Generation Counter that is maintained for the last received
            Get Log Page command
          type: number
        RegistrationType:
          description: "Type of endpoint registration; possible values include Implicit,\
            \ Explicit, Pull, and Manual"
          minLength: 1
          type: string
        ConnectionStatus:
          description: Status of the TCP connection between the subsystem and the
            CDC instance; possible values include Online and Offline
          minLength: 1
          type: string
        EKType:
          description: "Entity Key Type; possible values are Unknown, Port, and TRADDR"
          minLength: 1
          type: string
        '@odata.id':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - ASQZ
      - ConnectionStatus
      - ControllerId
      - EKType
      - Id
      - NQN
      - PortId
      - RcvdGenCounter
      - RegistrationType
      - SubType
      - TREQ
      - TSAS
      - TransportAddress
      - TransportAddressFamily
      - TransportServiceId
      - TransportType
    ZoneMemberGET_EXPAND_ZoneMembers_inner:
      properties:
        Role:
          description: Type of zone member; possible values include host and subsystem
          minLength: 1
          type: string
        ZoneMemberId:
          description: Unique zone member identifier
          minLength: 1
          type: string
        ZoneMemberType:
          description: Possible values include NVMe Qualified Name (NQN) and Fully
            Qualified Name (FQN)
          minLength: 1
          type: string
        '@odata.id':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - Role
      - ZoneMemberId
      - ZoneMemberType
    ZoneAlias_GET_EXPAND_ZoneAlias_inner:
      properties:
        ZoneAliasId:
          description: Unique zone alias identifier
          minLength: 1
          type: string
        ZoneAliasName:
          description: Friendly name for the zone alias
          minLength: 1
          type: string
        NumberZoneMembers:
          description: Number of endpoints (members) in the zone alias
          minLength: 1
          type: string
        '@odata.id':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - NumberZoneMembers
      - ZoneAliasId
      - ZoneAliasName
    ZoneAliasMemberGET_EXPAND_ZoneAliasMembers_inner:
      properties:
        ZoneAliasMemberType:
          minLength: 1
          type: string
        ZoneAliasMemberId:
          minLength: 1
          type: string
        Role:
          minLength: 1
          type: string
        '@odata.id':
          minLength: 1
          type: string
        '@odata.type':
          minLength: 1
          type: string
        '@odata.context':
          minLength: 1
          type: string
      required:
      - '@odata.context'
      - '@odata.id'
      - '@odata.type'
      - Role
      - ZoneAliasMemberId
      - ZoneAliasMemberType
  securitySchemes:
    basic:
      scheme: basic
      type: http
