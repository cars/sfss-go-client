/*
RestServices

REST APIs used for managing CDC instances are captured in this section.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sfssrest

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ZoneMemberGETEXPANDZoneMembersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ZoneMemberGETEXPANDZoneMembersInner{}

// ZoneMemberGETEXPANDZoneMembersInner struct for ZoneMemberGETEXPANDZoneMembersInner
type ZoneMemberGETEXPANDZoneMembersInner struct {
	// Type of zone member; possible values include host and subsystem
	Role string `json:"Role"`
	// Unique zone member identifier
	ZoneMemberId string `json:"ZoneMemberId"`
	// Possible values include NVMe Qualified Name (NQN) and Fully Qualified Name (FQN)
	ZoneMemberType string `json:"ZoneMemberType"`
	OdataId string `json:"@odata.id"`
	OdataType string `json:"@odata.type"`
	OdataContext string `json:"@odata.context"`
}

type _ZoneMemberGETEXPANDZoneMembersInner ZoneMemberGETEXPANDZoneMembersInner

// NewZoneMemberGETEXPANDZoneMembersInner instantiates a new ZoneMemberGETEXPANDZoneMembersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewZoneMemberGETEXPANDZoneMembersInner(role string, zoneMemberId string, zoneMemberType string, odataId string, odataType string, odataContext string) *ZoneMemberGETEXPANDZoneMembersInner {
	this := ZoneMemberGETEXPANDZoneMembersInner{}
	this.Role = role
	this.ZoneMemberId = zoneMemberId
	this.ZoneMemberType = zoneMemberType
	this.OdataId = odataId
	this.OdataType = odataType
	this.OdataContext = odataContext
	return &this
}

// NewZoneMemberGETEXPANDZoneMembersInnerWithDefaults instantiates a new ZoneMemberGETEXPANDZoneMembersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewZoneMemberGETEXPANDZoneMembersInnerWithDefaults() *ZoneMemberGETEXPANDZoneMembersInner {
	this := ZoneMemberGETEXPANDZoneMembersInner{}
	return &this
}

// GetRole returns the Role field value
func (o *ZoneMemberGETEXPANDZoneMembersInner) GetRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *ZoneMemberGETEXPANDZoneMembersInner) GetRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *ZoneMemberGETEXPANDZoneMembersInner) SetRole(v string) {
	o.Role = v
}

// GetZoneMemberId returns the ZoneMemberId field value
func (o *ZoneMemberGETEXPANDZoneMembersInner) GetZoneMemberId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ZoneMemberId
}

// GetZoneMemberIdOk returns a tuple with the ZoneMemberId field value
// and a boolean to check if the value has been set.
func (o *ZoneMemberGETEXPANDZoneMembersInner) GetZoneMemberIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ZoneMemberId, true
}

// SetZoneMemberId sets field value
func (o *ZoneMemberGETEXPANDZoneMembersInner) SetZoneMemberId(v string) {
	o.ZoneMemberId = v
}

// GetZoneMemberType returns the ZoneMemberType field value
func (o *ZoneMemberGETEXPANDZoneMembersInner) GetZoneMemberType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ZoneMemberType
}

// GetZoneMemberTypeOk returns a tuple with the ZoneMemberType field value
// and a boolean to check if the value has been set.
func (o *ZoneMemberGETEXPANDZoneMembersInner) GetZoneMemberTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ZoneMemberType, true
}

// SetZoneMemberType sets field value
func (o *ZoneMemberGETEXPANDZoneMembersInner) SetZoneMemberType(v string) {
	o.ZoneMemberType = v
}

// GetOdataId returns the OdataId field value
func (o *ZoneMemberGETEXPANDZoneMembersInner) GetOdataId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OdataId
}

// GetOdataIdOk returns a tuple with the OdataId field value
// and a boolean to check if the value has been set.
func (o *ZoneMemberGETEXPANDZoneMembersInner) GetOdataIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OdataId, true
}

// SetOdataId sets field value
func (o *ZoneMemberGETEXPANDZoneMembersInner) SetOdataId(v string) {
	o.OdataId = v
}

// GetOdataType returns the OdataType field value
func (o *ZoneMemberGETEXPANDZoneMembersInner) GetOdataType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OdataType
}

// GetOdataTypeOk returns a tuple with the OdataType field value
// and a boolean to check if the value has been set.
func (o *ZoneMemberGETEXPANDZoneMembersInner) GetOdataTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OdataType, true
}

// SetOdataType sets field value
func (o *ZoneMemberGETEXPANDZoneMembersInner) SetOdataType(v string) {
	o.OdataType = v
}

// GetOdataContext returns the OdataContext field value
func (o *ZoneMemberGETEXPANDZoneMembersInner) GetOdataContext() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OdataContext
}

// GetOdataContextOk returns a tuple with the OdataContext field value
// and a boolean to check if the value has been set.
func (o *ZoneMemberGETEXPANDZoneMembersInner) GetOdataContextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OdataContext, true
}

// SetOdataContext sets field value
func (o *ZoneMemberGETEXPANDZoneMembersInner) SetOdataContext(v string) {
	o.OdataContext = v
}

func (o ZoneMemberGETEXPANDZoneMembersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ZoneMemberGETEXPANDZoneMembersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Role"] = o.Role
	toSerialize["ZoneMemberId"] = o.ZoneMemberId
	toSerialize["ZoneMemberType"] = o.ZoneMemberType
	toSerialize["@odata.id"] = o.OdataId
	toSerialize["@odata.type"] = o.OdataType
	toSerialize["@odata.context"] = o.OdataContext
	return toSerialize, nil
}

func (o *ZoneMemberGETEXPANDZoneMembersInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"Role",
		"ZoneMemberId",
		"ZoneMemberType",
		"@odata.id",
		"@odata.type",
		"@odata.context",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varZoneMemberGETEXPANDZoneMembersInner := _ZoneMemberGETEXPANDZoneMembersInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varZoneMemberGETEXPANDZoneMembersInner)

	if err != nil {
		return err
	}

	*o = ZoneMemberGETEXPANDZoneMembersInner(varZoneMemberGETEXPANDZoneMembersInner)

	return err
}

type NullableZoneMemberGETEXPANDZoneMembersInner struct {
	value *ZoneMemberGETEXPANDZoneMembersInner
	isSet bool
}

func (v NullableZoneMemberGETEXPANDZoneMembersInner) Get() *ZoneMemberGETEXPANDZoneMembersInner {
	return v.value
}

func (v *NullableZoneMemberGETEXPANDZoneMembersInner) Set(val *ZoneMemberGETEXPANDZoneMembersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableZoneMemberGETEXPANDZoneMembersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableZoneMemberGETEXPANDZoneMembersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableZoneMemberGETEXPANDZoneMembersInner(val *ZoneMemberGETEXPANDZoneMembersInner) *NullableZoneMemberGETEXPANDZoneMembersInner {
	return &NullableZoneMemberGETEXPANDZoneMembersInner{value: val, isSet: true}
}

func (v NullableZoneMemberGETEXPANDZoneMembersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableZoneMemberGETEXPANDZoneMembersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


