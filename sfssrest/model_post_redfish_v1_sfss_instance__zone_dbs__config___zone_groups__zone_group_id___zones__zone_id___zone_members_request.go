/*
RestServices

REST APIs used for managing CDC instances are captured in this section.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sfssrest

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest{}

// PostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest 
type PostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest struct {
	ZoneMemberId string `json:"ZoneMemberId"`
	ZoneMemberType string `json:"ZoneMemberType"`
	Role *string `json:"Role,omitempty"`
}

type _PostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest PostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest

// NewPostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest instantiates a new PostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest(zoneMemberId string, zoneMemberType string) *PostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest {
	this := PostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest{}
	this.ZoneMemberId = zoneMemberId
	this.ZoneMemberType = zoneMemberType
	return &this
}

// NewPostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequestWithDefaults instantiates a new PostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequestWithDefaults() *PostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest {
	this := PostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest{}
	return &this
}

// GetZoneMemberId returns the ZoneMemberId field value
func (o *PostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest) GetZoneMemberId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ZoneMemberId
}

// GetZoneMemberIdOk returns a tuple with the ZoneMemberId field value
// and a boolean to check if the value has been set.
func (o *PostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest) GetZoneMemberIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ZoneMemberId, true
}

// SetZoneMemberId sets field value
func (o *PostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest) SetZoneMemberId(v string) {
	o.ZoneMemberId = v
}

// GetZoneMemberType returns the ZoneMemberType field value
func (o *PostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest) GetZoneMemberType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ZoneMemberType
}

// GetZoneMemberTypeOk returns a tuple with the ZoneMemberType field value
// and a boolean to check if the value has been set.
func (o *PostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest) GetZoneMemberTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ZoneMemberType, true
}

// SetZoneMemberType sets field value
func (o *PostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest) SetZoneMemberType(v string) {
	o.ZoneMemberType = v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *PostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *PostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *PostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest) SetRole(v string) {
	o.Role = &v
}

func (o PostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ZoneMemberId"] = o.ZoneMemberId
	toSerialize["ZoneMemberType"] = o.ZoneMemberType
	if !IsNil(o.Role) {
		toSerialize["Role"] = o.Role
	}
	return toSerialize, nil
}

func (o *PostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ZoneMemberId",
		"ZoneMemberType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest := _PostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest)

	if err != nil {
		return err
	}

	*o = PostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest(varPostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest)

	return err
}

type NullablePostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest struct {
	value *PostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest
	isSet bool
}

func (v NullablePostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest) Get() *PostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest {
	return v.value
}

func (v *NullablePostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest) Set(val *PostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest(val *PostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest) *NullablePostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest {
	return &NullablePostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest{value: val, isSet: true}
}

func (v NullablePostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostRedfishV1SFSSInstanceZoneDBsConfigZoneGroupsZoneGroupIdZonesZoneIDZoneMembersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


