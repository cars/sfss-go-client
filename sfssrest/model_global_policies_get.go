/*
RestServices

REST APIs used for managing CDC instances are captured in this section.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sfssrest

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GlobalPoliciesGET type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GlobalPoliciesGET{}

// GlobalPoliciesGET This model lists all the configured global policies.
type GlobalPoliciesGET struct {
	// Global zoning policy that allows all hosts to communicate with all subsystems; disabled by default
	ZoningPolicy string `json:"ZoningPolicy"`
	// Timeout value to remove endpoints (hosts or subsystems) that have lost connection with the CDC 
	NameServerEntityPurgeTOV string `json:"NameServerEntityPurgeTOV"`
	OdataId string `json:"@odata.id"`
	OdataType string `json:"@odata.type"`
	OdataContext string `json:"@odata.context"`
}

type _GlobalPoliciesGET GlobalPoliciesGET

// NewGlobalPoliciesGET instantiates a new GlobalPoliciesGET object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlobalPoliciesGET(zoningPolicy string, nameServerEntityPurgeTOV string, odataId string, odataType string, odataContext string) *GlobalPoliciesGET {
	this := GlobalPoliciesGET{}
	this.ZoningPolicy = zoningPolicy
	this.NameServerEntityPurgeTOV = nameServerEntityPurgeTOV
	this.OdataId = odataId
	this.OdataType = odataType
	this.OdataContext = odataContext
	return &this
}

// NewGlobalPoliciesGETWithDefaults instantiates a new GlobalPoliciesGET object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlobalPoliciesGETWithDefaults() *GlobalPoliciesGET {
	this := GlobalPoliciesGET{}
	return &this
}

// GetZoningPolicy returns the ZoningPolicy field value
func (o *GlobalPoliciesGET) GetZoningPolicy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ZoningPolicy
}

// GetZoningPolicyOk returns a tuple with the ZoningPolicy field value
// and a boolean to check if the value has been set.
func (o *GlobalPoliciesGET) GetZoningPolicyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ZoningPolicy, true
}

// SetZoningPolicy sets field value
func (o *GlobalPoliciesGET) SetZoningPolicy(v string) {
	o.ZoningPolicy = v
}

// GetNameServerEntityPurgeTOV returns the NameServerEntityPurgeTOV field value
func (o *GlobalPoliciesGET) GetNameServerEntityPurgeTOV() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NameServerEntityPurgeTOV
}

// GetNameServerEntityPurgeTOVOk returns a tuple with the NameServerEntityPurgeTOV field value
// and a boolean to check if the value has been set.
func (o *GlobalPoliciesGET) GetNameServerEntityPurgeTOVOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NameServerEntityPurgeTOV, true
}

// SetNameServerEntityPurgeTOV sets field value
func (o *GlobalPoliciesGET) SetNameServerEntityPurgeTOV(v string) {
	o.NameServerEntityPurgeTOV = v
}

// GetOdataId returns the OdataId field value
func (o *GlobalPoliciesGET) GetOdataId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OdataId
}

// GetOdataIdOk returns a tuple with the OdataId field value
// and a boolean to check if the value has been set.
func (o *GlobalPoliciesGET) GetOdataIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OdataId, true
}

// SetOdataId sets field value
func (o *GlobalPoliciesGET) SetOdataId(v string) {
	o.OdataId = v
}

// GetOdataType returns the OdataType field value
func (o *GlobalPoliciesGET) GetOdataType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OdataType
}

// GetOdataTypeOk returns a tuple with the OdataType field value
// and a boolean to check if the value has been set.
func (o *GlobalPoliciesGET) GetOdataTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OdataType, true
}

// SetOdataType sets field value
func (o *GlobalPoliciesGET) SetOdataType(v string) {
	o.OdataType = v
}

// GetOdataContext returns the OdataContext field value
func (o *GlobalPoliciesGET) GetOdataContext() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OdataContext
}

// GetOdataContextOk returns a tuple with the OdataContext field value
// and a boolean to check if the value has been set.
func (o *GlobalPoliciesGET) GetOdataContextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OdataContext, true
}

// SetOdataContext sets field value
func (o *GlobalPoliciesGET) SetOdataContext(v string) {
	o.OdataContext = v
}

func (o GlobalPoliciesGET) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GlobalPoliciesGET) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ZoningPolicy"] = o.ZoningPolicy
	toSerialize["NameServerEntityPurgeTOV"] = o.NameServerEntityPurgeTOV
	toSerialize["@odata.id"] = o.OdataId
	toSerialize["@odata.type"] = o.OdataType
	toSerialize["@odata.context"] = o.OdataContext
	return toSerialize, nil
}

func (o *GlobalPoliciesGET) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ZoningPolicy",
		"NameServerEntityPurgeTOV",
		"@odata.id",
		"@odata.type",
		"@odata.context",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGlobalPoliciesGET := _GlobalPoliciesGET{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGlobalPoliciesGET)

	if err != nil {
		return err
	}

	*o = GlobalPoliciesGET(varGlobalPoliciesGET)

	return err
}

type NullableGlobalPoliciesGET struct {
	value *GlobalPoliciesGET
	isSet bool
}

func (v NullableGlobalPoliciesGET) Get() *GlobalPoliciesGET {
	return v.value
}

func (v *NullableGlobalPoliciesGET) Set(val *GlobalPoliciesGET) {
	v.value = val
	v.isSet = true
}

func (v NullableGlobalPoliciesGET) IsSet() bool {
	return v.isSet
}

func (v *NullableGlobalPoliciesGET) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlobalPoliciesGET(val *GlobalPoliciesGET) *NullableGlobalPoliciesGET {
	return &NullableGlobalPoliciesGET{value: val, isSet: true}
}

func (v NullableGlobalPoliciesGET) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlobalPoliciesGET) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


