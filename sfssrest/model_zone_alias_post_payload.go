/*
RestServices

REST APIs used for managing CDC instances are captured in this section.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sfssrest

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ZoneAliasPOSTPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ZoneAliasPOSTPayload{}

// ZoneAliasPOSTPayload This model configures a zone alias.
type ZoneAliasPOSTPayload struct {
	ZoneDBType string `json:"ZoneDBType"`
	ZoneAliasName string `json:"ZoneAliasName"`
}

type _ZoneAliasPOSTPayload ZoneAliasPOSTPayload

// NewZoneAliasPOSTPayload instantiates a new ZoneAliasPOSTPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewZoneAliasPOSTPayload(zoneDBType string, zoneAliasName string) *ZoneAliasPOSTPayload {
	this := ZoneAliasPOSTPayload{}
	this.ZoneDBType = zoneDBType
	this.ZoneAliasName = zoneAliasName
	return &this
}

// NewZoneAliasPOSTPayloadWithDefaults instantiates a new ZoneAliasPOSTPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewZoneAliasPOSTPayloadWithDefaults() *ZoneAliasPOSTPayload {
	this := ZoneAliasPOSTPayload{}
	return &this
}

// GetZoneDBType returns the ZoneDBType field value
func (o *ZoneAliasPOSTPayload) GetZoneDBType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ZoneDBType
}

// GetZoneDBTypeOk returns a tuple with the ZoneDBType field value
// and a boolean to check if the value has been set.
func (o *ZoneAliasPOSTPayload) GetZoneDBTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ZoneDBType, true
}

// SetZoneDBType sets field value
func (o *ZoneAliasPOSTPayload) SetZoneDBType(v string) {
	o.ZoneDBType = v
}

// GetZoneAliasName returns the ZoneAliasName field value
func (o *ZoneAliasPOSTPayload) GetZoneAliasName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ZoneAliasName
}

// GetZoneAliasNameOk returns a tuple with the ZoneAliasName field value
// and a boolean to check if the value has been set.
func (o *ZoneAliasPOSTPayload) GetZoneAliasNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ZoneAliasName, true
}

// SetZoneAliasName sets field value
func (o *ZoneAliasPOSTPayload) SetZoneAliasName(v string) {
	o.ZoneAliasName = v
}

func (o ZoneAliasPOSTPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ZoneAliasPOSTPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ZoneDBType"] = o.ZoneDBType
	toSerialize["ZoneAliasName"] = o.ZoneAliasName
	return toSerialize, nil
}

func (o *ZoneAliasPOSTPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ZoneDBType",
		"ZoneAliasName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varZoneAliasPOSTPayload := _ZoneAliasPOSTPayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varZoneAliasPOSTPayload)

	if err != nil {
		return err
	}

	*o = ZoneAliasPOSTPayload(varZoneAliasPOSTPayload)

	return err
}

type NullableZoneAliasPOSTPayload struct {
	value *ZoneAliasPOSTPayload
	isSet bool
}

func (v NullableZoneAliasPOSTPayload) Get() *ZoneAliasPOSTPayload {
	return v.value
}

func (v *NullableZoneAliasPOSTPayload) Set(val *ZoneAliasPOSTPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableZoneAliasPOSTPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableZoneAliasPOSTPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableZoneAliasPOSTPayload(val *ZoneAliasPOSTPayload) *NullableZoneAliasPOSTPayload {
	return &NullableZoneAliasPOSTPayload{value: val, isSet: true}
}

func (v NullableZoneAliasPOSTPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableZoneAliasPOSTPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


